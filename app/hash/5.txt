<?xml version="1.0"?> 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
        <meta name="keywords"
            content="CVE, CVE List, CVE Records, CVE ID, CVE IDs, CVE Identifier, CVE Identifiers, CVE ID number, CVE ID numbers, CVE number, CVE numbers, CVE Record, CVE Records, CVE Entry, CVE Entries, CVE name, CVEs, CVE-, Reserved but Public, RBP, CVE Numbering Authority, CVE Naming Authority, CNA, CNAs, Root, Top-Level Root, TL-Root, CNA of Last Resort, CNA-LR, Secretariat, Authorized Data Publisher, ADP, CVE Adoption, CVE Automation, CVE Services, CVE JSON, National Vulnerability Database, NVD, Common Vulnerability Scoring System, CVSS, scoring, severity secoring, standard, standards, vulnerability, vulnerabilities, vulnerability management, vulnerability id, vulnerability name, vulnerability naming, vulnerability naming scheme, software flaw, software coding error, software bug, software bugs, firmware, network security, cybersecurity, cyber security, cyber security standards, cybersecurity standards, infosec, information security, information security standards, network security standards, community standards, vulnerability database, security advisory, security advisories, security alerts, vulnerability alerts, zero-day, 0-day, vulnerability assessment and remediation, vulnerability assessment service, vulnerability notification service, intrusion detection service, IDS, intrusion detection and management, intrusion monitoring and response service, intrusion prevention service, IPS, incident management, data/event correlation, firewall, patch management, patches, patching, enterprise information security architecture, SIM, security information management, cloud, cloud security, policy compliance, information security automation, cybersecurity automation, CVE Working Groups, CVE Board, DHS, Cybersecurity and Infrastructure Security Agency, CISA" />
        <meta name="description"
            content="The mission of the CVE® Program is to identify, define, and catalog publicly disclosed cybersecurity vulnerabilities." />
        <meta name="google-site-verification" content="Dk82cCXTLpuQQok4nbpDBxZDpA3ltnSAnnhMqY1XBxI" />
        <!-- Google tag (gtag.js) -->
            <script async src="https://www.googletagmanager.com/gtag/js?id=UA-37948909-1"></script>
            <script>
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());

            gtag('config', 'UA-37948909-1');
            </script>
  
        <link href="/css/main.css" rel="stylesheet" type="text/css" />
        <script src="/includes/jquery-3.2.1.min.js"></script>
        <script src="/includes/jquery-migrate-3.0.0.min.js"></script>
		<script src="/includes/browserheight.js" language="JavaScript" type="text/javascript"></script>
        <script src="https://cmp.osano.com/AzyhULTdPkqmy4aDN/fab1add1-e069-4b98-8ba9-cbdc6401a635/osano.js"></script>
        <link href="/css/print.css" rel="stylesheet" media="print" type="text/css" />
        <title>CVE -
Search Results
</title>
    </head>
    <body>
        <div id="Page"> 
            <!--Header-->
            <div id="Header">
                <table style="width:100%;border-collapse:collapse" summary="Header Layout Table">

                    <tr> 
                        <td style="vertical-align:middle; text-align:left; white-space:nowrap; padding-top:5px; padding-bottom:5px">
                            <div style="width:170px;">
                                <a class="none" href="/index.html">
                                    <img src="/images/cvelogobanner.png" width="206" height="55" alt="CVE" style="border:0" />
                                </a>
                                </div>
                        </td>
        <td style="vertical-align:top;text-align:center;width:100%">
                             
        <div class="alignright" style="float:right;vertical-align:top;">
        <table style="text-align:right"></table>
				
		</div> 

        <!--Page-->
        						
        					
<head>
<style>
.dropbtn {
    background-color: #ffffff;
    color: #C8C8C8;
    padding: 0px 18px;
    font-size: 15px;
    font-weight: bold;
    border: none;
    cursor: pointer;
}

.dropdown {
    position: relative;
    display: inline-block;
}

.dropdown-content {
    display: none;
    position: absolute;
    text-align: left;
    background-color: #ffffff;
    min-width: 250px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
}

.dropdown-content a {
    color: black;
    padding: 12px 16px;
    font-size: 11px;
    text-align: left;
    text-decoration: none;
    display: block;
}

.dropdown-content a:hover {background-color: #cccccc;}

.dropdown:hover .dropdown-content {
    display: block;
}

.dropdown:hover .dropbtn {
    background-color: #ffffff;
}
</style>
</head>
<body>
&nbsp;&nbsp;&nbsp;&nbsp;
<div class="dropdown">
  <a target="_blank" href="https://www.cve.org/"><button class="dropbtn">CVE List&#9662;</button></a>
  <div class="dropdown-content">
    <strong><a href="/cve/search_cve_list.html">CVE List Search</a></strong>
    <a href="https://www.cve.org/ResourcesSupport/FAQs#pc_cve_list_basicssearch_cve">Search Tips</a>
    <strong><a href="https://cveform.mitre.org/">CVE Request Web Form</a></strong>
    <a href="https://www.cve.org/ResourcesSupport/FAQs#pc_cve_request_web_form">Web Form Help</a>
    <a href="https://www.cve.org/ResourcesSupport/FAQs#pc_cve_request_web_formweb_form_encrypt_requests">PGP Key</a> 
    <strong><a href="https://www.cve.org/Legal/TermsOfUse">Terms of Use</a></strong>
  </div>  
  </div>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <div class="dropdown">
  <a href="https://www.cve.org/ProgramOrganization/CNAs"><button class="dropbtn">CNAs&#9662;</button></a>
  <div class="dropdown-content">
    <strong><a href="https://www.cve.org/ProgramOrganization/CNAs">CVE Numbering Authorities (CNAs)</a></strong>
    <strong><a href="https://www.cve.org/PartnerInformation/Partner#HowToBecomeAPartner">How to Become a CNA</a></strong>
  </div>
  </div>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <div class="dropdown">
  <a href="https://www.cve.org/ProgramOrganization/WorkingGroups"><button class="dropbtn">WGs&#9662;</button></a>
  <div class="dropdown-content">
        <strong><a href="https://www.cve.org/ProgramOrganization/WorkingGroups">CVE Working Groups</a></strong>  
  </div>
  </div>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <div class="dropdown">
  <a href="https://www.cve.org/ProgramOrganization/Board"><button class="dropbtn">Board&#9662;</button></a>
  <div class="dropdown-content">
    <strong><a href="https://www.cve.org/ProgramOrganization/Board">CVE Board</a></strong>
    <a href="/community/board/archive.html#meeting_summaries">Meeting Archives</a>    
    <a href="https://www.cve.org/ProgramOrganization/Board#Resources">Email Archives</a>
  </div>
  </div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <div class="dropdown">
  <a href="https://www.cve.org/About/Overview"><button class="dropbtn">About&#9662;</button></a>
  <div class="dropdown-content">
    <strong><a href="https://www.cve.org/About/Overview">About CVE</a></strong>
  </div>
  </div>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <div class="dropdown">
  <a href="https://www.cve.org/Media/News/AllNews"><button class="dropbtn">News&#9662;</button></a>
  <div class="dropdown-content">
    <strong><a href="https://www.cve.org/Media/News/AllNews">News, Blogs &amp; Podcasts</a></strong>
  </div> 
  </div>
</div>
</body>
                                    
                                    
        <!--Page-->
        						
        						</div>

                                    
                                <div style="width:50%;"><p><a href="/index.html"></a></div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" style="vertical-align:top">
                        <!--NavBar-->
                        <div id="NavBar" class="noprint">
                        &nbsp; &nbsp; &nbsp; &nbsp;
                        <div class="NavSection"><a href="/cve/search_cve_list.html">Search CVE List</a></div> 
                        &nbsp; &nbsp; &nbsp; &nbsp;
                        <div class="NavSection"><a href="https://www.cve.org/Downloads">Downloads</a></div>  
                        &nbsp; &nbsp; &nbsp; &nbsp; 
                        <div class="NavSection"><a href="https://www.cve.org/ResourcesSupport/FAQs#pc_cve_list_basicscve_list_data_feeds">Data Feeds</a></div>  
                        &nbsp; &nbsp; &nbsp; &nbsp;
                        <div class="NavSection"><a href="https://www.cve.org/ReportRequest/ReportRequestForNonCNAs#UpdateCVERecord">Update a CVE Record</a> </div>  
                        &nbsp; &nbsp; &nbsp; &nbsp;   
                        <div class="NavSection"><a href="https://www.cve.org/ReportRequest/ReportRequestForNonCNAs#RequestCVEID">Request CVE IDs</a></div>
                        &nbsp; &nbsp; &nbsp; &nbsp;     
                        </div>
                        <!--/NavBar-->
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" style="vertical-align:top">
                            <!--HeaderBar-->

                            <div id="HeaderBar" class="noprint"> 
                            TOTAL CVE Records: <a target="_blank" href="https://www.cve.org/">
                           
                            240830</a>
                            <br><br>
NOTICE: <span class="ltredbold">Transition to the all-new CVE website at <a href="https://www.cve.org/">WWW.CVE.ORG</a> and <a href="https://www.cve.org/Media/News/item/blog/2022/10/06/CVE-Records-Are-Now-Displayed">CVE Record Format JSON</a> are underway.</span>
<br><br>
NOTICE: <span class="ltredbold">Support for the legacy CVE download formats <a href="https://www.cve.org/Media/News/item/blog/2024/07/02/Legacy-CVE-Download-Formats-No-Longer-Supported">ended on June 30, 2024</a>.<br/>New CVE List download format is <a href="https://www.cve.org/Media/News/item/blog/2023/03/29/CVE-Downloads-in-JSON-5-Format">available now</a> on CVE.ORG.</span>
                            <br><br>
                            </div></div>
                            <!--/HeaderBar-->
                        </td>
                    </tr>
                </table>
                
                	<style type="text/css">
.alignright {
	text-align: right;
	font-size: x-small;
}
</style>

                <div id="BreadCrumbs" class="noprint">

		<a href="/">Home</a>  &gt;  <a href="/cve/">CVE</a>  &gt;  Search Results
                    &nbsp;</div>
            </div>
            <!--/Header-->
            <!-- begin section menu -->
            <div id="LeftPane">﻿            </div>
            <!-- end section menu -->
            <!-- begin content pane -->
            <div id="CenterPane"><!--begin Main Content-->

<h2>Search Results</h2>

<div class="smaller" style="background-color:#e0dbd2; padding:3px; border:1px solid #706c60; margin-bottom:10px">
There are <b>89</b> CVE Records that match your search.
</div>

<div id="TableWithRules">
<table cellpadding="0" cellspacing="0" border="0" width="100%">
<thead>
	<tr>
		<th valign="top" style="padding:3px">Name</th>
		<th valign="top" style="padding:3px">Description</th>
	</tr>
</thead>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-6578">CVE-2024-6578</a></td>
		<td valign="top">A stored cross-site scripting (XSS) vulnerability exists in aimhubio/aim version 3.19.3. The vulnerability arises from the improper neutralization of input during web page generation, specifically in the logs-tab for runs. The terminal output logs are displayed using the `dangerouslySetInnerHTML` function in React, which is susceptible to XSS attacks. An attacker can exploit this vulnerability by injecting malicious scripts into the logs, which will be executed when a user views the logs-tab.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-46982">CVE-2024-46982</a></td>
		<td valign="top">Next.js is a React framework for building full-stack web applications. By sending a crafted HTTP request, it is possible to poison the cache of a non-dynamic server-side rendered route in the pages router (this does not affect the app router). When this crafted request is sent it could coerce Next.js to cache a route that is meant to not be cached and send a `Cache-Control: s-maxage=1, stale-while-revalidate` header which some upstream CDNs may cache as well. To be potentially affected all of the following must apply: 1. Next.js between 13.5.1 and 14.2.9, 2. Using pages router, &amp; 3. Using non-dynamic server-side rendered routes e.g. `pages/dashboard.tsx` not `pages/blog/[slug].tsx`. This vulnerability was resolved in Next.js v13.5.7, v14.2.10, and later. We recommend upgrading regardless of whether you can reproduce the issue or not. There are no official or recommended workarounds for this issue, we recommend that users patch to a safe version.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-42347">CVE-2024-42347</a></td>
		<td valign="top">matrix-react-sdk is a react-based SDK for inserting a Matrix chat/voip client into a web page. A malicious homeserver could manipulate a user's account data to cause the client to enable URL previews in end-to-end encrypted rooms, in which case any URLs in encrypted messages would be sent to the server. This was patched in matrix-react-sdk 3.105.0. Deployments that trust their homeservers, as well as closed federations of trusted servers, are not affected. Users are advised to upgrade. There are no known workarounds for this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-40631">CVE-2024-40631</a></td>
		<td valign="top">Plate media is an open source, rich-text editor for React. Editors that use `MediaEmbedElement` and pass custom `urlParsers` to the `useMediaState` hook may be vulnerable to XSS if a custom parser allows `javascript:`, `data:` or `vbscript:` URLs to be embedded. Editors that do not use `urlParsers` and consume the `url` property directly may also be vulnerable if the URL is not sanitised. The default parsers `parseTwitterUrl` and `parseVideoUrl` are not affected. `@udecode/plate-media` 36.0.10 resolves this issue by only allowing HTTP and HTTPS URLs during parsing. This affects only the `embed` property returned from `useMediaState`. In addition, the `url` property returned from `useMediaState` has been renamed to `unsafeUrl` to indicate that it has not been sanitised. The `url` property on `element` is also unsafe, but has not been renamed. If you're using either of these properties directly, you will still need to validate the URL yourself. Users are advised to upgrade. Users unable to upgrade should ensure that any custom `urlParsers` do not allow `javascript:`, `data:` or `vbscript:` URLs to be returned in the `url` property of their return values. If `url` is consumed directly, validate the URL protocol before passing it to the `iframe` element.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-39903">CVE-2024-39903</a></td>
		<td valign="top">Solara is a pure Python, React-style framework for scaling Jupyter and web apps. A Local File Inclusion (LFI) vulnerability was identified in widgetti/solara, in version &lt;1.35.1, which was fixed in version 1.35.1. This vulnerability arises from the application's failure to properly validate URI fragments for directory traversal sequences such as '../' when serving static files. An attacker can exploit this flaw by manipulating the fragment part of the URI to read arbitrary files on the local file system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-39693">CVE-2024-39693</a></td>
		<td valign="top">Next.js is a React framework. A Denial of Service (DoS) condition was identified in Next.js. Exploitation of the bug can trigger a crash, affecting the availability of the server. his vulnerability was resolved in Next.js 13.5 and later.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-36937">CVE-2024-36937</a></td>
		<td valign="top">In the Linux kernel, the following vulnerability has been resolved: xdp: use flags field to disambiguate broadcast redirect When redirecting a packet using XDP, the bpf_redirect_map() helper will set up the redirect destination information in struct bpf_redirect_info (using the __bpf_xdp_redirect_map() helper function), and the xdp_do_redirect() function will read this information after the XDP program returns and pass the frame on to the right redirect destination. When using the BPF_F_BROADCAST flag to do multicast redirect to a whole map, __bpf_xdp_redirect_map() sets the 'map' pointer in struct bpf_redirect_info to point to the destination map to be broadcast. And xdp_do_redirect() reacts to the value of this map pointer to decide whether it's dealing with a broadcast or a single-value redirect. However, if the destination map is being destroyed before xdp_do_redirect() is called, the map pointer will be cleared out (by bpf_clear_redirect_map()) without waiting for any XDP programs to stop running. This causes xdp_do_redirect() to think that the redirect was to a single target, but the target pointer is also NULL (since broadcast redirects don't have a single target), so this causes a crash when a NULL pointer is passed to dev_map_enqueue(). To fix this, change xdp_do_redirect() to react directly to the presence of the BPF_F_BROADCAST flag in the 'flags' value in struct bpf_redirect_info to disambiguate between a single-target and a broadcast redirect. And only read the 'map' pointer if the broadcast flag is set, aborting if that has been cleared out in the meantime. This prevents the crash, while keeping the atomic (cmpxchg-based) clearing of the map pointer itself, and without adding any more checks in the non-broadcast fast path.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-34351">CVE-2024-34351</a></td>
		<td valign="top">Next.js is a React framework that can provide building blocks to create web applications. A Server-Side Request Forgery (SSRF) vulnerability was identified in Next.js Server Actions. If the `Host` header is modified, and the below conditions are also met, an attacker may be able to make requests that appear to be originating from the Next.js application server itself. The required conditions are 1) Next.js is running in a self-hosted manner; 2) the Next.js application makes use of Server Actions; and 3) the Server Action performs a redirect to a relative path which starts with a `/`. This vulnerability was fixed in Next.js `14.1.1`.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-34350">CVE-2024-34350</a></td>
		<td valign="top">Next.js is a React framework that can provide building blocks to create web applications. Prior to 13.5.1, an inconsistent interpretation of a crafted HTTP request meant that requests are treated as both a single request, and two separate requests by Next.js, leading to desynchronized responses. This led to a response queue poisoning vulnerability in the affected Next.js versions. For a request to be exploitable, the affected route also had to be making use of the [rewrites](https://nextjs.org/docs/app/api-reference/next-config-js/rewrites) feature in Next.js. The vulnerability is resolved in Next.js `13.5.1` and newer.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-34342">CVE-2024-34342</a></td>
		<td valign="top">react-pdf displays PDFs in React apps. If PDF.js is used to load a malicious PDF, and PDF.js is configured with `isEvalSupported` set to `true` (which is the default value), unrestricted attacker-controlled JavaScript will be executed in the context of the hosting domain. This vulnerability is fixed in 7.7.3 and 8.0.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-34067">CVE-2024-34067</a></td>
		<td valign="top">Pterodactyl is a free, open-source game server management panel built with PHP, React, and Go. Importing a malicious egg or gaining access to wings instance could lead to cross site scripting (XSS) on the panel, which could be used to gain an administrator account on the panel. Specifically, the following things are impacted: Egg Docker images and Egg variables: Name, Environment variable, Default value, Description, Validation rules. Additionally, certain fields would reflect malicious input, but it would require the user knowingly entering such input to have an impact. To iterate, this would require an administrator to perform actions and can't be triggered by a normal panel user. This issue has has been addressed in version 1.11.6 and users are advised to upgrade. No workaround is available other than updating to the latest version of the panel.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-25466">CVE-2024-25466</a></td>
		<td valign="top">Directory Traversal vulnerability in React Native Document Picker before v.9.1.1 and fixed in v.9.1.1 allows a local attacker to execute arbitrary code via a crafted script to the Android library component.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-24558">CVE-2024-24558</a></td>
		<td valign="top">TanStack Query supplies asynchronous state management, server-state utilities and data fetching for the web. The `@tanstack/react-query-next-experimental` NPM package is vulnerable to a cross-site scripting vulnerability. To exploit this, an attacker would need to either inject malicious input or arrange to have malicious input be returned from an endpoint. To fix this issue, please update to version 5.18.0 or later.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-22107">CVE-2024-22107</a></td>
		<td valign="top">An issue was discovered in GTB Central Console 15.17.1-30814.NG. The method systemSettingsDnsDataAction at /opt/webapp/src/AppBundle/Controller/React/SystemSettingsController.php is vulnerable to command injection via the /old/react/v1/api/system/dns/data endpoint. An authenticated attacker can abuse it to inject an arbitrary command and compromise the platform.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21668">CVE-2024-21668</a></td>
		<td valign="top">react-native-mmkv is a library that allows easy use of MMKV inside React Native applications. Before version 2.11.0, the react-native-mmkv logged the optional encryption key for the MMKV database into the Android system log. The key can be obtained by anyone with access to the Android Debugging Bridge (ADB) if it is enabled in the phone settings. This bug is not present on iOS devices. By logging the encryption secret to the system logs, attackers can trivially recover the secret by enabling ADB and undermining an app's thread model. This issue has been patched in version 2.11.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-5654">CVE-2023-5654</a></td>
		<td valign="top">The React Developer Tools extension registers a message listener with window.addEventListener('message', &lt;listener&gt;) in a content script that is accessible to any webpage that is active in the browser. Within the listener is code that requests a URL derived from the received message via fetch(). The URL is not validated or sanitised before it is fetched, thus allowing a malicious web page to arbitrarily fetch URL&amp;#8217;s via the victim's browser.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-51843">CVE-2023-51843</a></td>
		<td valign="top">react-dashboard 1.4.0 is vulnerable to Cross Site Scripting (XSS) as httpOnly is not set.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-46134">CVE-2023-46134</a></td>
		<td valign="top">D-Tale is the combination of a Flask back-end and a React front-end to view &amp; analyze Pandas data structures. Prior to version 3.7.0, users hosting D-Tale publicly can be vulnerable to remote code execution, allowing attackers to run malicious code on the server. This issue has been patched in version 3.7.0 by turning off "Custom Filter" input by default. The only workaround for versions earlier than 3.7.0 is to only host D-Tale to trusted users.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-41167">CVE-2023-41167</a></td>
		<td valign="top">@webiny/react-rich-text-renderer before 5.37.2 allows XSS attacks by content managers. This is a react component to render data coming from Webiny Headless CMS and Webiny Form Builder. Webiny is an open-source serverless enterprise CMS. The @webiny/react-rich-text-renderer package depends on the editor.js rich text editor to handle rich text content. The CMS stores rich text content from the editor.js into the database. When the @webiny/react-rich-text-renderer is used to render such content, it uses the dangerouslySetInnerHTML prop, without applying HTML sanitization. The issue arises when an actor, who in this context would specifically be a content manager with access to the CMS, inserts a malicious script as part of the user-defined input. This script is then injected and executed within the user's browser when the main page or admin page loads.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-40027">CVE-2023-40027</a></td>
		<td valign="top">Keystone is an open source headless CMS for Node.js &amp;#8212; built with GraphQL and React. When `ui.isAccessAllowed` is set as `undefined`, the `adminMeta` GraphQL query is publicly accessible (no session required). This is different to the behaviour of the default AdminUI middleware, which by default will only be publicly accessible (no session required) if a `session` strategy is not defined. This vulnerability does not affect developers using the `@keystone-6/auth` package, or any users that have written their own `ui.isAccessAllowed` (that is to say, `isAccessAllowed` is not `undefined`). This vulnerability does affect users who believed that their `session` strategy will, by default, enforce that `adminMeta` is inaccessible by the public in accordance with that strategy; akin to the behaviour of the AdminUI middleware. This vulnerability has been patched in `@keystone-6/core` version `5.5.1`. Users are advised to upgrade. Users unable to upgrade may opt to write their own `isAccessAllowed` functionality to work-around this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-37259">CVE-2023-37259</a></td>
		<td valign="top">matrix-react-sdk is a react-based SDK for inserting a Matrix chat/voip client into a web page. The Export Chat feature includes certain attacker-controlled elements in the generated document without sufficient escaping, leading to stored Cross site scripting (XSS). Since the Export Chat feature generates a separate document, an attacker can only inject code run from the `null` origin, restricting the impact. However, the attacker can still potentially use the XSS to leak message contents. A malicious homeserver is a potential attacker since the affected inputs are controllable server-side. This issue has been addressed in commit `22fcd34c60` which is included in release version 3.76.0. Users are advised to upgrade. The only known workaround for this issue is to disable or to not use the Export Chat feature.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-34245">CVE-2023-34245</a></td>
		<td valign="top">@udecode/plate-link is the link handler for the udecode/plate rich-text editor plugin system for Slate &amp; React. Affected versions of the link plugin and link UI component do not sanitize URLs to prevent use of the `javascript:` scheme. As a result, links with JavaScript URLs can be inserted into the Plate editor through various means, including opening or pasting malicious content. `@udecode/plate-link` 20.0.0 resolves this issue by introducing an `allowedSchemes` option to the link plugin, defaulting to `['http', 'https', 'mailto', 'tel']`. URLs using a scheme that isn't in this list will not be rendered to the DOM. Users are advised to upgrade. Users unable to upgrade are advised to override the `LinkElement` and `PlateFloatingLink` components with implementations that explicitly check the URL scheme before rendering any anchor elements.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-34238">CVE-2023-34238</a></td>
		<td valign="top">Gatsby is a free and open source framework based on React. The Gatsby framework prior to versions 4.25.7 and 5.9.1 contain a Local File Inclusion vulnerability in the `__file-code-frame` and `__original-stack-frame` paths, exposed when running the Gatsby develop server (`gatsby develop`). Any file in scope of the development server could potentially be exposed. It should be noted that by default `gatsby develop` is only accessible via the localhost `127.0.0.1`, and one would need to intentionally expose the server to other interfaces to exploit this vulnerability by using server options such as `--host 0.0.0.0`, `-H 0.0.0.0`, or the `GATSBY_HOST=0.0.0.0` environment variable. A patch has been introduced in `gatsby@5.9.1` and `gatsby@4.25.7` which mitigates the issue. Users are advised to upgrade. Users unable to upgrade should avoid exposing their development server to the internet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-3294">CVE-2023-3294</a></td>
		<td valign="top">Cross-site Scripting (XSS) - DOM in GitHub repository saleor/react-storefront prior to c29aab226f07ca980cc19787dcef101e11b83ef7.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-30609">CVE-2023-30609</a></td>
		<td valign="top">matrix-react-sdk is a react-based SDK for inserting a Matrix chat/VoIP client into a web page. Prior to version 3.71.0, plain text messages containing HTML tags are rendered as HTML in the search results. To exploit this, an attacker needs to trick a user into searching for a specific message containing an HTML injection payload. No cross-site scripting attack is possible due to the hardcoded content security policy. Version 3.71.0 of the SDK patches over the issue. As a workaround, restarting the client will clear the HTML injection.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-30543">CVE-2023-30543</a></td>
		<td valign="top">@web3-react is a framework for building Ethereum Apps . In affected versions the `chainId` may be outdated if the user changes chains as part of the connection flow. This means that the value of `chainId` returned by `useWeb3React()` may be incorrect. In an application, this means that any data derived from `chainId` could be incorrect. For example, if a swapping application derives a wrapped token contract address from the `chainId` *and* a user has changed chains as part of their connection flow the application could cause the user to send funds to the incorrect address when wrapping. This issue has been addressed in PR #749 and is available in updated npm artifacts. There are no known workarounds for this issue. Users are advised to upgrade.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-30470">CVE-2023-30470</a></td>
		<td valign="top">A use-after-free related to unsound inference in the bytecode generation when optimizations are enabled for Hermes prior to commit da8990f737ebb9d9810633502f65ed462b819c09 could have been used by an attacker to achieve remote code execution. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-28103">CVE-2023-28103</a></td>
		<td valign="top">matrix-react-sdk is a Matrix chat protocol SDK for React Javascript. In certain configurations, data sent by remote servers containing special strings in key locations could cause modifications of the `Object.prototype`, disrupting matrix-react-sdk functionality, causing denial of service and potentially affecting program logic. This is fixed in matrix-react-sdk 3.69.0 and users are advised to upgrade. There are no known workarounds for this vulnerability. Note this advisory is distinct from GHSA-2x9c-qwgf-94xr which refers to a similar issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-28081">CVE-2023-28081</a></td>
		<td valign="top">A bytecode optimization bug in Hermes prior to commit e6ed9c1a4b02dc219de1648f44cd808a56171b81 could be used to cause an use-after-free and obtain arbitrary code execution via a carefully crafted payload. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-26044">CVE-2023-26044</a></td>
		<td valign="top">react/http is an event-driven, streaming HTTP client and server implementation for ReactPHP. Previous versions of ReactPHP's HTTP server component contain a potential DoS vulnerability that can cause high CPU load when processing large HTTP request bodies. This vulnerability has little to no impact on the default configuration, but can be exploited when explicitly using the RequestBodyBufferMiddleware with very large settings. This might lead to consuming large amounts of CPU time for processing requests and significantly delay or slow down the processing of legitimate user requests. This issue has been addressed in release 1.9.0. Users are advised to upgrade. Users unable to upgrade may keep the request body limited using RequestBodyBufferMiddleware with a sensible value which should mitigate the issue. An infrastructure or DevOps workaround could be to place a reverse proxy in front of the ReactPHP HTTP server to filter out any excessive HTTP request bodies.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-25933">CVE-2023-25933</a></td>
		<td valign="top">A type confusion bug in TypedArray prior to commit e6ed9c1a4b02dc219de1648f44cd808a56171b81 could have been used by a malicious attacker to execute arbitrary code via untrusted JavaScript. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-25572">CVE-2023-25572</a></td>
		<td valign="top">react-admin is a frontend framework for building browser applications on top of REST/GraphQL APIs. react-admin prior to versions 3.19.12 and 4.7.6, along with ra-ui-materialui prior to 3.19.12 and 4.7.6, are vulnerable to cross-site scripting. All React applications built with react-admin and using the `&lt;RichTextField&gt;` are affected. `&lt;RichTextField&gt;` outputs the field value using `dangerouslySetInnerHTML` without client-side sanitization. If the data isn't sanitized server-side, this opens a possible cross-site scripting (XSS) attack. Versions 3.19.12 and 4.7.6 now use `DOMPurify` to escape the HTML before outputting it with React and `dangerouslySetInnerHTML`. Users who already sanitize HTML data server-side do not need to upgrade. As a workaround, users may replace the `&lt;RichTextField&gt;` by a custom field doing sanitization by hand.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-24833">CVE-2023-24833</a></td>
		<td valign="top">A use-after-free in BigIntPrimitive addition in Hermes prior to commit a6dcafe6ded8e61658b40f5699878cd19a481f80 could have been used by an attacker to leak raw data from Hermes VM&amp;#8217;s heap. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-24832">CVE-2023-24832</a></td>
		<td valign="top">A null pointer dereference bug in Hermes prior to commit 5cae9f72975cf0e5a62b27fdd8b01f103e198708 could have been used by an attacker to crash an Hermes runtime where the EnableHermesInternal config option was set to true. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-23557">CVE-2023-23557</a></td>
		<td valign="top">An error in Hermes' algorithm for copying objects properties prior to commit a00d237346894c6067a594983be6634f4168c9ad could be used by a malicious attacker to execute arbitrary code via type confusion. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-23556">CVE-2023-23556</a></td>
		<td valign="top">An error in BigInt conversion to Number in Hermes prior to commit a6dcafe6ded8e61658b40f5699878cd19a481f80 could have been used by a malicious attacker to execute arbitrary code due to an out-of-bound write. Note that this bug is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22491">CVE-2023-22491</a></td>
		<td valign="top">Gatsby is a free and open source framework based on React that helps developers build websites and apps. The gatsby-transformer-remark plugin prior to versions 5.25.1 and 6.3.2 passes input through to the `gray-matter` npm package, which is vulnerable to JavaScript injection in its default configuration, unless input is sanitized. The vulnerability is present in gatsby-transformer-remark when passing input in data mode (querying MarkdownRemark nodes via GraphQL). Injected JavaScript executes in the context of the build server. To exploit this vulnerability untrusted/unsanitized input would need to be sourced by or added into a file processed by gatsby-transformer-remark. A patch has been introduced in `gatsby-transformer-remark@5.25.1` and `gatsby-transformer-remark@6.3.2` which mitigates the issue by disabling the `gray-matter` JavaScript Frontmatter engine. As a workaround, if an older version of `gatsby-transformer-remark` must be used, input passed into the plugin should be sanitized ahead of processing. It is encouraged for projects to upgrade to the latest major release branch for all Gatsby plugins to ensure the latest security updates and bug fixes are received in a timely manner.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22462">CVE-2023-22462</a></td>
		<td valign="top">Grafana is an open-source platform for monitoring and observability. On 2023-01-01 during an internal audit of Grafana, a member of the security team found a stored XSS vulnerability affecting the core plugin "Text". The stored XSS vulnerability requires several user interactions in order to be fully exploited. The vulnerability was possible due to React's render cycle that will pass though the unsanitized HTML code, but in the next cycle the HTML is cleaned up and saved in Grafana's database. An attacker needs to have the Editor role in order to change a Text panel to include JavaScript. Another user needs to edit the same Text panel, and click on "Markdown" or "HTML" for the code to be executed. This means that vertical privilege escalation is possible, where a user with Editor role can change to a known password for a user having Admin role if the user with Admin role executes malicious JavaScript viewing a dashboard. This issue has been patched in versions 9.2.10 and 9.3.4.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-0365">CVE-2023-0365</a></td>
		<td valign="top">The React Webcam WordPress plugin through 1.2.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-40138">CVE-2022-40138</a></td>
		<td valign="top">An integer conversion error in Hermes bytecode generation, prior to commit 6aa825e480d48127b480b08d13adf70033237097, could have been used to perform Out-Of-Bounds operations and subsequently execute arbitrary code. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-36060">CVE-2022-36060</a></td>
		<td valign="top">matrix-react-sdk is a Matrix chat protocol SDK for React Javascript. Events sent with special strings in key places can temporarily disrupt or impede the matrix-react-sdk from functioning properly, such as by causing room or event tile crashes. The remainder of the application can appear functional, though certain rooms/events will not be rendered. This issue has been fixed in matrix-react-sdk 3.53.0 and users are advised to upgrade. There are no known workarounds for this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-36046">CVE-2022-36046</a></td>
		<td valign="top">Next.js is a React framework that can provide building blocks to create web applications. All of the following must be true to be affected by this CVE: Next.js version 12.2.3, Node.js version above v15.0.0 being used with strict `unhandledRejection` exiting AND using next start or a [custom server](https://nextjs.org/docs/advanced-features/custom-server). Deployments on Vercel ([vercel.com](https://vercel.com/)) are not affected along with similar environments where `next-server` isn't being shared across requests.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-36010">CVE-2022-36010</a></td>
		<td valign="top">This library allows strings to be parsed as functions and stored as a specialized component, [`JsonFunctionValue`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/09a0ca97835b0834ad054563e2fddc6f22bc5d8c/src/components/JsonFunctionValue.js). To do this, Javascript's [`eval`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval) function is used to execute strings that begin with "function" as Javascript. This unfortunately could allow arbitrary code to be executed if it exists as a value within the JSON structure being displayed. Given that this component may often be used to display data from arbitrary, untrusted sources, this is extremely dangerous. One important note is that users who have defined a custom [`onSubmitValueParser`](https://github.com/oxyno-zeta/react-editable-json-tree/tree/09a0ca97835b0834ad054563e2fddc6f22bc5d8c#onsubmitvalueparser) callback prop on the [`JsonTree`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/09a0ca97835b0834ad054563e2fddc6f22bc5d8c/src/JsonTree.js) component should be ***unaffected***. This vulnerability exists in the default `onSubmitValueParser` prop which calls [`parse`](https://github.com/oxyno-zeta/react-editable-json-tree/blob/master/src/utils/parse.js#L30). Prop is added to `JsonTree` called `allowFunctionEvaluation`. This prop will be set to `true` in v2.2.2, which allows upgrade without losing backwards-compatibility. In v2.2.2, we switched from using `eval` to using [`Function`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function) to construct anonymous functions. This is better than `eval` for the following reasons: - Arbitrary code should not be able to execute immediately, since the `Function` constructor explicitly *only creates* anonymous functions - Functions are created without local closures, so they only have access to the global scope If you use: - **Version `&lt;2.2.2`**, you must upgrade as soon as possible. - **Version `^2.2.2`**, you must explicitly set `JsonTree`'s `allowFunctionEvaluation` prop to `false` to fully mitigate this vulnerability. - **Version `&gt;=3.0.0`**, `allowFunctionEvaluation` is already set to `false` by default, so no further steps are necessary.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-35289">CVE-2022-35289</a></td>
		<td valign="top">A write-what-where condition in hermes caused by an integer overflow, prior to commit 5b6255ae049fa4641791e47fad994e8e8c4da374 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-32234">CVE-2022-32234</a></td>
		<td valign="top">An out of bounds write in hermes, while handling large arrays, prior to commit 06eaec767e376bfdb883d912cb15e987ddf2bda1 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-31103">CVE-2022-31103</a></td>
		<td valign="top">lettersanitizer is a DOM-based HTML email sanitizer for in-browser email rendering. All versions of lettersanitizer below 1.0.2 are affected by a denial of service issue when processing a CSS at-rule `@keyframes`. This package is depended on by [react-letter](https://github.com/mat-sz/react-letter), therefore everyone using react-letter is also at risk. The problem has been patched in version 1.0.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-29230">CVE-2022-29230</a></td>
		<td valign="top">Hydrogen is a React-based framework for building dynamic, Shopify-powered custom storefronts. There is a potential Cross-Site Scripting (XSS) vulnerability where an arbitrary user is able to execute scripts on pages that are built with Hydrogen. This affects all versions of Hydrogen starting from version 0.10.0 to 0.18.0. This vulnerability is exploitable in applications whose hydrating data is user controlled. All Hydrogen users should upgrade their project to version 0.19.0. There is no current workaround, and users should update as soon as possible. Additionally, the Content Security Policy is not an effective mitigation for this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-25863">CVE-2022-25863</a></td>
		<td valign="top">The package gatsby-plugin-mdx before 2.14.1, from 3.0.0 and before 3.15.2 are vulnerable to Deserialization of Untrusted Data when passing input through to the gray-matter package, due to its default configurations that are missing input sanitization. Exploiting this vulnerability is possible when passing input in both webpack (MDX files in src/pages or MDX file imported as a component in frontend / React code) and data mode (querying MDX nodes via GraphQL). Workaround: If an older version of gatsby-plugin-mdx must be used, input passed into the plugin should be sanitized ahead of processing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24740">CVE-2022-24740</a></td>
		<td valign="top">Volto is a ReactJS-based frontend for the Plone Content Management System. Between versions 14.0.0-alpha.5 and 15.0.0-alpha.0, a user could have their authentication cookie replaced with an authentication cookie from another user, effectively giving them control of the other user's account and privileges. This occurs when using an outdated version of the `react-cookie` library and a server is under high load. A proof of concept does not currently exist, but it is possible for this issue to occur in the wild. The patch and fix is present in Volto 15.0.0-alpha.0. As a workaround, one may manually upgrade the `react-cookie` package to 4.1.1 and then override all Volto components that use this library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24709">CVE-2022-24709</a></td>
		<td valign="top">@awsui/components-react is the main AWS UI package which contains React components, with TypeScript definitions designed for user interface development. Multiple components in versions before 3.0.367 have been found to not properly neutralize user input and may allow for javascript injection. Users are advised to upgrade to version 3.0.367 or later. There are no known workarounds for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24373">CVE-2022-24373</a></td>
		<td valign="top">The package react-native-reanimated before 3.0.0-rc.1 are vulnerable to Regular Expression Denial of Service (ReDoS) due to improper usage of regular expression in the parser of Colors.js.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-23646">CVE-2022-23646</a></td>
		<td valign="top">Next.js is a React framework. Starting with version 10.0.0 and prior to version 12.1.0, Next.js is vulnerable to User Interface (UI) Misrepresentation of Critical Information. In order to be affected, the `next.config.js` file must have an `images.domains` array assigned and the image host assigned in `images.domains` must allow user-provided SVG. If the `next.config.js` file has `images.loader` assigned to something other than default, the instance is not affected. Version 12.1.0 contains a patch for this issue. As a workaround, change `next.config.js` to use a different `loader configuration` other than the default.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21721">CVE-2022-21721</a></td>
		<td valign="top">Next.js is a React framework. Starting with version 12.0.0 and prior to version 12.0.9, vulnerable code could allow a bad actor to trigger a denial of service attack for anyone using i18n functionality. In order to be affected by this CVE, one must use next start or a custom server and the built-in i18n support. Deployments on Vercel, along with similar environments where invalid requests are filtered before reaching Next.js, are not affected. A patch has been released, `next@12.0.9`, that mitigates this issue. As a workaround, one may ensure `/${locale}/_next/` is blocked from reaching the Next.js instance until it becomes feasible to upgrade.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-4438">CVE-2021-4438</a></td>
		<td valign="top">A vulnerability, which was classified as critical, has been found in kyivstarteam react-native-sms-user-consent up to 1.1.4 on Android. Affected by this issue is the function registerReceiver of the file android/src/main/java/ua/kyivstar/reactnativesmsuserconsent/SmsUserConsentModule.kt. The manipulation leads to improper export of android application components. Attacking locally is a requirement. Upgrading to version 1.1.5 is able to address this issue. The name of the patch is 5423dcb0cd3e4d573b5520a71fa08aa279e4c3c7. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-259508.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-43803">CVE-2021-43803</a></td>
		<td valign="top">Next.js is a React framework. In versions of Next.js prior to 12.0.5 or 11.1.3, invalid or malformed URLs could lead to a server crash. In order to be affected by this issue, the deployment must use Next.js versions above 11.1.0 and below 12.0.5, Node.js above 15.0.0, and next start or a custom server. Deployments on Vercel are not affected, along with similar environments where invalid requests are filtered before reaching Next.js. Versions 12.0.5 and 11.1.3 contain patches for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41273">CVE-2021-41273</a></td>
		<td valign="top">Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. Due to improperly configured CSRF protections on two routes, a malicious user could execute a CSRF-based attack against the following endpoints: Sending a test email and Generating a node auto-deployment token. At no point would any data be exposed to the malicious user, this would simply trigger email spam to an administrative user, or generate a single auto-deployment token unexpectedly. This token is not revealed to the malicious user, it is simply created unexpectedly in the system. This has been addressed in release `1.6.6`. Users may optionally manually apply the fixes released in v1.6.6 to patch their own systems.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41249">CVE-2021-41249</a></td>
		<td valign="top">GraphQL Playground is a GraphQL IDE for development of graphQL focused applications. All versions of graphql-playground-react older than graphql-playground-react@1.7.28 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing a dynamic XSS attack surface that can allow code injection on operation autocomplete. In order for the attack to take place, the user must load a malicious schema in graphql-playground. There are several ways this can occur, including by specifying the URL to a malicious schema in the endpoint query parameter. If a user clicks on a link to a GraphQL Playground installation that specifies a malicious server, arbitrary JavaScript can run in the user's browser, which can be used to exfiltrate user credentials or other harmful goals. If you are using graphql-playground-react directly in your client app, upgrade to version 1.7.28 or later.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41176">CVE-2021-41176</a></td>
		<td valign="top">Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. In affected versions of Pterodactyl a malicious user can trigger a user logout if a signed in user visits a malicious website that makes a request to the Panel's sign-out endpoint. This requires a targeted attack against a specific Panel instance, and serves only to sign a user out. **No user details are leaked, nor is any user data affected, this is simply an annoyance at worst.** This is fixed in version 1.6.3.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41129">CVE-2021-41129</a></td>
		<td valign="top">Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. A malicious user can modify the contents of a `confirmation_token` input during the two-factor authentication process to reference a cache value not associated with the login attempt. In rare cases this can allow a malicious actor to authenticate as a random user in the Panel. The malicious user must target an account with two-factor authentication enabled, and then must provide a correct two-factor authentication token before being authenticated as that user. Due to a validation flaw in the logic handling user authentication during the two-factor authentication process a malicious user can trick the system into loading credentials for an arbitrary user by modifying the token sent to the server. This authentication flaw is present in the `LoginCheckpointController@__invoke` method which handles two-factor authentication for a user. This controller looks for a request input parameter called `confirmation_token` which is expected to be a 64 character random alpha-numeric string that references a value within the Panel's cache containing a `user_id` value. This value is then used to fetch the user that attempted to login, and lookup their two-factor authentication token. Due to the design of this system, any element in the cache that contains only digits could be referenced by a malicious user, and whatever value is stored at that position would be used as the `user_id`. There are a few different areas of the Panel that store values into the cache that are integers, and a user who determines what those cache keys are could pass one of those keys which would cause this code pathway to reference an arbitrary user. At its heart this is a high-risk login bypass vulnerability. However, there are a few additional conditions that must be met in order for this to be successfully executed, notably: 1.) The account referenced by the malicious cache key must have two-factor authentication enabled. An account without two-factor authentication would cause an exception to be triggered by the authentication logic, thusly exiting this authentication flow. 2.) Even if the malicious user is able to reference a valid cache key that references a valid user account with two-factor authentication, they must provide a valid two-factor authentication token. However, due to the design of this endpoint once a valid user account is found with two-factor authentication enabled there is no rate-limiting present, thusly allowing an attacker to brute force combinations until successful. This leads to a third condition that must be met: 3.) For the duration of this attack sequence the cache key being referenced must continue to exist with a valid `user_id` value. Depending on the specific key being used for this attack, this value may disappear quickly, or be changed by other random user interactions on the Panel, outside the control of the attacker. In order to mitigate this vulnerability the underlying authentication logic was changed to use an encrypted session store that the user is therefore unable to control the value of. This completely removed the use of a user-controlled value being used. In addition, the code was audited to ensure this type of vulnerability is not present elsewhere.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39178">CVE-2021-39178</a></td>
		<td valign="top">Next.js is a React framework. Versions of Next.js between 10.0.0 and 11.0.0 contain a cross-site scripting vulnerability. In order for an instance to be affected by the vulnerability, the `next.config.js` file must have `images.domains` array assigned and the image host assigned in `images.domains` must allow user-provided SVG. If the `next.config.js` file has `images.loader` assigned to something other than default or the instance is deployed on Vercel, the instance is not affected by the vulnerability. The vulnerability is patched in Next.js version 11.1.1.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-37699">CVE-2021-37699</a></td>
		<td valign="top">Next.js is an open source website development framework to be used with the React library. In affected versions specially encoded paths could be used when pages/_error.js was statically generated allowing an open redirect to occur to an external site. In general, this redirect does not directly harm users although can allow for phishing attacks by redirecting to an attacker's domain from a trusted domain. We recommend everyone to upgrade regardless of whether you can reproduce the issue or not. The issue has been patched in release 11.1.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-32622">CVE-2021-32622</a></td>
		<td valign="top">Matrix-React-SDK is a react-based SDK for inserting a Matrix chat/voip client into a web page. Before version 3.21.0, when uploading a file, the local file preview can lead to execution of scripts embedded in the uploaded file. This can only occur after several user interactions to open the preview in a separate tab. This only impacts the local user while in the process of uploading. It cannot be exploited remotely or by other users. This vulnerability is patched in version 3.21.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-31712">CVE-2021-31712</a></td>
		<td valign="top">react-draft-wysiwyg (aka React Draft Wysiwyg) before 1.14.6 allows a javascript: URi in a Link Target of the link decorator in decorators/Link/index.js when a draft is shared across users, leading to XSS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-24045">CVE-2021-24045</a></td>
		<td valign="top">A type confusion vulnerability could be triggered when resolving the "typeof" unary operator in Facebook Hermes prior to v0.10.0. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-24037">CVE-2021-24037</a></td>
		<td valign="top">A use after free in hermes, while emitting certain error messages, prior to commit d86e185e485b6330216dee8e854455c694e3a36e allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-24033">CVE-2021-24033</a></td>
		<td valign="top">react-dev-utils prior to v11.0.4 exposes a function, getProcessForPort, where an input argument is concatenated into a command string to be executed. This function is typically used from react-scripts (in Create React App projects), where the usage is safe. Only when this function is manually invoked with user-provided values (ie: by custom code) is there the potential for command injection. If you're consuming it from react-scripts then this issue does not affect you.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-23398">CVE-2021-23398</a></td>
		<td valign="top">All versions of package react-bootstrap-table are vulnerable to Cross-site Scripting (XSS) via the dataFormat parameter. The problem is triggered when an invalid React element is returned, leading to dangerouslySetInnerHTML being used, which does not sanitize the output.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21320">CVE-2021-21320</a></td>
		<td valign="top">matrix-react-sdk is an npm package which is a Matrix SDK for React Javascript. In matrix-react-sdk before version 3.15.0, the user content sandbox can be abused to trick users into opening unexpected documents. The content is opened with a `blob` origin that cannot access Matrix user data, so messages and secrets are not at risk. This has been fixed in version 3.15.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-7787">CVE-2020-7787</a></td>
		<td valign="top">This affects all versions of package react-adal. It is possible for a specially crafted JWT token and request URL can cause the nonce, session and refresh values to be incorrectly validated, causing the application to treat an attacker-generated JWT token as authentic. The logical defect is caused by how the nonce, session and refresh values are stored in the browser local storage or session storage. Each key is automatically appended by ||. When the received nonce and session keys are generated, the list of values is stored in the browser storage, separated by ||, with || always appended to the end of the list. Since || will always be the last 2 characters of the stored values, an empty string ("") will always be in the list of the valid values. Therefore, if an empty session parameter is provided in the callback URL, and a specially-crafted JWT token contains an nonce value of "" (empty string), then adal.js will consider the JWT token as authentic.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-7696">CVE-2020-7696</a></td>
		<td valign="top">This affects all versions of package react-native-fast-image. When an image with source={{uri: "...", headers: { host: "somehost.com", authorization: "..." }} is loaded, all other subsequent images will use the same headers, this can lead to signing credentials or other session tokens being leaked to other servers.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-29483">CVE-2020-29483</a></td>
		<td valign="top">An issue was discovered in Xen through 4.14.x. Xenstored and guests communicate via a shared memory page using a specific protocol. When a guest violates this protocol, xenstored will drop the connection to that guest. Unfortunately, this is done by just removing the guest from xenstored's internal management, resulting in the same actions as if the guest had been destroyed, including sending an @releaseDomain event. @releaseDomain events do not say that the guest has been removed. All watchers of this event must look at the states of all guests to find the guest that has been removed. When an @releaseDomain is generated due to a domain xenstored protocol violation, because the guest is still running, the watchers will not react. Later, when the guest is actually destroyed, xenstored will no longer have it stored in its internal data base, so no further @releaseDomain event will be sent. This can lead to a zombie domain; memory mappings of that guest's memory will not be removed, due to the missing event. This zombie domain will be cleaned up only after another domain is destroyed, as that will trigger another @releaseDomain event. If the device model of the guest that violated the Xenstore protocol is running in a stub-domain, a use-after-free case could happen in xenstored, after having removed the guest from its internal data base, possibly resulting in a crash of xenstored. A malicious guest can block resources of the host for a period after its own death. Guests with a stub domain device model can eventually crash xenstored, resulting in a more serious denial of service (the prevention of any further domain management operations). Only the C variant of Xenstore is affected; the Ocaml variant is not affected. Only HVM guests with a stubdom device model can cause a serious DoS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1920">CVE-2020-1920</a></td>
		<td valign="top">A regular expression denial of service (ReDoS) vulnerability in the validateBaseUrl function can cause the application to use excessive resources, become unresponsive, or crash. This was introduced in react-native version 0.59.0 and fixed in version 0.64.1.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1915">CVE-2020-1915</a></td>
		<td valign="top">An out-of-bounds read in the JavaScript Interpreter in Facebook Hermes prior to commit 8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0 allows attackers to cause a denial of service attack or possible further memory corruption via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1914">CVE-2020-1914</a></td>
		<td valign="top">A logic vulnerability when handling the SaveGeneratorLong instruction in Facebook Hermes prior to commit b2021df620824627f5a8c96615edbd1eb7fdddfc allows attackers to potentially read out of bounds or theoretically execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1913">CVE-2020-1913</a></td>
		<td valign="top">An Integer signedness error in the JavaScript Interpreter in Facebook Hermes prior to commit 2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6 allows attackers to cause a denial of service attack or a potential RCE via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1912">CVE-2020-1912</a></td>
		<td valign="top">An out-of-bounds read/write vulnerability when executing lazily compiled inner generator functions in Facebook Hermes prior to commit 091835377369c8fd5917d9b87acffa721ad2a168 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1911">CVE-2020-1911</a></td>
		<td valign="top">A type confusion vulnerability when resolving properties of JavaScript objects with specially-crafted prototype chains in Facebook Hermes prior to commit fe52854cdf6725c2eaa9e125995da76e6ceb27da allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1896">CVE-2020-1896</a></td>
		<td valign="top">A stack overflow vulnerability in Facebook Hermes 'builtin apply' prior to commit 86543ac47e59c522976b5632b8bf9a2a4583c7d2 (https://github.com/facebook/hermes/commit/86543ac47e59c522976b5632b8bf9a2a4583c7d2) allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-12270">CVE-2020-12270</a></td>
		<td valign="top">** DISPUTED ** React Native Bluetooth Scan in Bluezone 1.0.0 uses six-character alphanumeric IDs, which might make it easier for remote attackers to interfere with COVID-19 contact tracing by using many IDs. NOTE: the vendor disputes the relevance of this report because the recipient of an F1 alert will know it was a false alert if contact-history comparison fails (i.e., an F0 is not actually part of the contact history obtained from the device of this recipient, or this recipient is not actually part of the contact history obtained from the device of an F0).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-12113">CVE-2020-12113</a></td>
		<td valign="top">BigBlueButton before 2.2.4 allows XSS via closed captions because dangerouslySetInnerHTML in React is used.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-12164">CVE-2019-12164</a></td>
		<td valign="top">ubuntu-server.js in Status React Native Desktop before v0.57.8_mobile_ui allows Remote Code Execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-6342">CVE-2018-6342</a></td>
		<td valign="top">react-dev-utils on Windows allows developers to run a local webserver for accepting various commands, including a command to launch an editor. The input to that command was not properly sanitized, allowing an attacker who can make a network request to the server (either via CSRF or by direct request) to execute arbitrary commands on the targeted system. This issue affects multiple branches: 1.x.x prior to 1.0.4, 2.x.x prior to 2.0.2, 3.x.x prior to 3.1.2, 4.x.x prior to 4.2.2, and 5.x.x prior to 5.0.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-6341">CVE-2018-6341</a></td>
		<td valign="top">React applications which rendered to HTML using the ReactDOMServer API were not escaping user-supplied attribute names at render-time. That lack of escaping could lead to a cross-site scripting vulnerability. This issue affected minor releases 16.0.x, 16.1.x, 16.2.x, 16.3.x, and 16.4.x. It was fixed in 16.0.1, 16.1.2, 16.2.1, 16.3.3, and 16.4.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-7920">CVE-2017-7920</a></td>
		<td valign="top">An Improper Authentication issue was discovered in ABB VSN300 WiFi Logger Card versions 1.8.15 and prior, and VSN300 WiFi Logger Card for React versions 2.1.3 and prior. By accessing a specific uniform resource locator (URL) on the web server, a malicious user is able to access internal information about status and connected devices without authenticating.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-7916">CVE-2017-7916</a></td>
		<td valign="top">A Permissions, Privileges, and Access Controls issue was discovered in ABB VSN300 WiFi Logger Card versions 1.8.15 and prior, and VSN300 WiFi Logger Card for React versions 2.1.3 and prior. The web application does not properly restrict privileges of the Guest account. A malicious user may be able to gain access to configuration information that should be restricted.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-16028">CVE-2017-16028</a></td>
		<td valign="top">react-native-meteor-oauth is a library for Oauth2 login to a Meteor server in React Native. The oauth Random Token is generated using a non-cryptographically strong RNG (Math.random()).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-10697">CVE-2016-10697</a></td>
		<td valign="top">react-native-baidu-voice-synthesizer is a baidu voice speech synthesizer for react native. react-native-baidu-voice-synthesizer downloads resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested resources with an attacker controlled copy if the attacker is on the network or positioned in between the user and the remote server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-4844">CVE-2007-4844</a></td>
		<td valign="top">X-Diesel Unreal Commander 0.92 build 565 and 573 does not properly react to an FTP server's behavior after sending a "CWD /" command, which allows remote FTP servers to cause a denial of service (infinite loop) by (1) repeatedly sending a 550 error response, or (2) sending a 550 error response and then disconnecting.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-1724">CVE-2007-1724</a></td>
		<td valign="top">Unspecified vulnerability in ReactOS 0.3.1 has unknown impact and attack vectors, related to a fix for "dozens of win32k bugs and failures," in which the fix itself introduces a vulnerability, possibly related to user-mode and kernel-mode copy failures.

</td>
	</tr>

</table> 
</div>

<div class="backtop noprint"><a href="#top">Back to top</a></div>
<!--round box-->
<div id="LtGreen" style="width:75%;min-width:500px;margin:auto;white-space:nowrap">
<table width="100%" border="0" cellspacing="0" cellpadding="0" id="Box">
  <tr>
    <td class="corner" valign="top" align="left" nowrap="nowrap"><img src="/images/layout/corner_ul.gif" alt="" class="noprint"/></td>
    <td width="100%"></td>
    <td class="corner" valign="top" align="right" nowrap="nowrap"><img src="/images/layout/corner_ur.gif" alt="" class="noprint"/></td>
  </tr>
  <tr>
    <td></td>
    <td valign="top">

<div class="smaller" style="text-align:center;white-space:nowrap">
	<form style="padding:0px; margin:0px;" method="get" action="/cgi-bin/cvekey.cgi">
		<label for="keyword"><span class="redbold" style="text-transform:uppercase">Search CVE Using Keywords:</span></label>&nbsp;&nbsp;<input name="keyword" id="keyword" maxlength="100" tabindex="0" type="textarea"></input>
		<input type="submit" value="Submit"/>
	</form>
		<div>You can also search by reference using the <a style="text-decoration:underline" href="/data/refs/index.html">CVE Reference Maps</a>.</div>
		<div><span style="font-weight:bold">For More Information:</span>&nbsp;&nbsp;<a style="text-decoration:underline" target="_blank" href="https://cveform.mitre.org/">CVE Request Web Form</a> (select &ldquo;Other&rdquo; from dropdown)</div>
</div>
</td>
    <td></td>
  </tr>
  <tr>
    <td class="corner" align="left" valign="bottom"><img src="/images/layout/corner_bl.gif" alt="" class="noprint" /></td>
    <td></td>
    <td class="corner" align="right" valign="bottom"><img src="/images/layout/corner_br.gif" alt="" class="noprint" /></td>
  </tr>
</table>
</div>
<!--/round box-->
<br>
<!--end Main Content-->
<!--end Main Content-->
            </div><!-- end content pane -->
        </div>
        <!--/Page-->
                <!--Footer-->
                <div id="FootPane" class="noprint">
        <div id="Footer">
            <table>
                <tr>
                    <td>
                    <div class="noprint" style="font-size:70%; text-align:center; padding-top:0px; padding-bottom:3px;">
                           <b>
                            <a href="https://www.cve.org/">Go to CVE.ORG website</a> | 
                            <a target="_blank" href="https://www.cve.org/Legal/TermsOfUse">Terms of Use</a> |
                            <a href="#" onclick="Osano.cm.showDrawer('osano-cm-dom-info-dialog-open')">Manage Cookies</a> | 
                            <a href="/cookie_notice.html">Cookie Notice</a> |         
                            <a target="_blank" href="https://www.cve.org/Legal/PrivacyPolicy">Privacy Policy</a> |
                            <a target="_blank" href="https://cveform.mitre.org/">Contact</a>  
                         
                    </td> 
                </tr>
             </div>
                 <tr>
                    <td>                       
                         <p>Use of the CVE&reg; List and the associated references from this website are subject to the <a target="_blank" href="https://www.cve.org/Legal/TermsOfUse">terms of use</a>. 
                             CVE is sponsored by the <a href="https://www.dhs.gov/" target="_blank">U.S. Department of Homeland Security</a> (DHS) <a href="https://www.dhs.gov/cisa/cybersecurity-division/" target="_blank">Cybersecurity and Infrastructure Security Agency</a> (CISA). Copyright &copy; 1999&ndash;2024, <a href="https://www.mitre.org/" target="_blank">The MITRE Corporation</a>. CVE and the CVE logo are registered trademarks of The MITRE Corporation.</p>
                        </td>        
                  </tr>
                  </table>

            <!--/Footer-->
        </div>
        </div>
        
<!-- Google Analytics -->
<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-37948909-1', 'auto');
ga('send', 'pageview');

</script>
<!-- End Google Analytics -->
        
    </body>
</html>
